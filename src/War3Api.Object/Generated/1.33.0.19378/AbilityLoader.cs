using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using War3Api.Object.Abilities;
using War3Api.Object.Enums;
using War3Net.Build.Object;
using War3Net.Common.Extensions;

namespace War3Api.Object
{
    internal class AbilityLoader
    {
        protected virtual ArchMageBlizzard LoadArchMageBlizzard(ObjectDatabaseBase db)
        {
            var ability = new ArchMageBlizzard(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 1f;
            ability.StatsCastingTime[3] = 1f;
            ability.StatsCastingTime[4] = 1f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BHbd,BHbz";
            ability.StatsBuffsRaw[2] = "BHbd,BHbz";
            ability.StatsBuffsRaw[3] = "BHbd,BHbz";
            ability.StatsBuffsRaw[4] = "BHbd,BHbz";
            ability.StatsEffectsRaw[1] = "XHbz";
            ability.StatsEffectsRaw[2] = "XHbz";
            ability.StatsEffectsRaw[3] = "XHbz";
            ability.StatsEffectsRaw[4] = "XHbz";
            ability.DataNumberOfWaves[1] = 6;
            ability.DataNumberOfWaves[2] = 8;
            ability.DataNumberOfWaves[3] = 10;
            ability.DataNumberOfWaves[4] = 10;
            ability.DataDamage[1] = 30f;
            ability.DataDamage[2] = 40f;
            ability.DataDamage[3] = 50f;
            ability.DataDamage[4] = 50f;
            ability.DataNumberOfShards[1] = 6;
            ability.DataNumberOfShards[2] = 7;
            ability.DataNumberOfShards[3] = 10;
            ability.DataNumberOfShards[4] = 10;
            ability.DataBuildingReduction[1] = 0.5f;
            ability.DataBuildingReduction[2] = 0.5f;
            ability.DataBuildingReduction[3] = 0.5f;
            ability.DataBuildingReduction[4] = 0.5f;
            ability.DataDamagePerSecond[1] = 0f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMaximumDamagePerWave[1] = 150f;
            ability.DataMaximumDamagePerWave[2] = 200f;
            ability.DataMaximumDamagePerWave[3] = 250f;
            ability.DataMaximumDamagePerWave[4] = 250f;
            return ability;
        }

        protected virtual ArchMageBrillianceAura LoadArchMageBrillianceAura(ObjectDatabaseBase db)
        {
            var ability = new ArchMageBrillianceAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHab";
            ability.StatsBuffsRaw[2] = "BHab";
            ability.StatsBuffsRaw[3] = "BHab";
            ability.StatsBuffsRaw[4] = "BHab";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegenerationIncrease[1] = 0.75f;
            ability.DataManaRegenerationIncrease[2] = 1.25f;
            ability.DataManaRegenerationIncrease[3] = 2f;
            ability.DataManaRegenerationIncrease[4] = 2.25f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ArchMageMassTeleport LoadArchMageMassTeleport(ObjectDatabaseBase db)
        {
            var ability = new ArchMageMassTeleport(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,vuln,invu,player,neutral,ally";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,vuln,invu,player,neutral,ally";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,vuln,invu,player,neutral,ally";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,vuln,invu,player,neutral,ally";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 700f;
            ability.StatsAreaOfEffect[3] = 700f;
            ability.StatsAreaOfEffect[4] = 700f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 99999f;
            ability.StatsCastRange[3] = 99999f;
            ability.StatsCastRange[4] = 99999f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnitsTeleported[1] = 24;
            ability.DataNumberOfUnitsTeleported[2] = 12;
            ability.DataNumberOfUnitsTeleported[3] = 12;
            ability.DataNumberOfUnitsTeleported[4] = 12;
            ability.DataCastingDelay[1] = 3f;
            ability.DataCastingDelay[2] = 5f;
            ability.DataCastingDelay[3] = 5f;
            ability.DataCastingDelay[4] = 5f;
            ability.DataUseTeleportClusteringRaw[1] = 1;
            ability.DataUseTeleportClusteringRaw[2] = 1;
            ability.DataUseTeleportClusteringRaw[3] = 1;
            ability.DataUseTeleportClusteringRaw[4] = 1;
            return ability;
        }

        protected virtual ArchMageWaterElemental LoadArchMageWaterElemental(ObjectDatabaseBase db)
        {
            var ability = new ArchMageWaterElemental(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHwe";
            ability.StatsBuffsRaw[2] = "BHwe";
            ability.StatsBuffsRaw[3] = "BHwe";
            ability.StatsBuffsRaw[4] = "BHwe";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "hwat";
            ability.DataSummonedUnitTypeRaw[2] = "hwt2";
            ability.DataSummonedUnitTypeRaw[3] = "hwt3";
            ability.DataSummonedUnitTypeRaw[4] = "hwt3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual BeastMasterStampede LoadBeastMasterStampede(ObjectDatabaseBase db)
        {
            var ability = new BeastMasterStampede(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 20f;
            ability.StatsDurationNormal[3] = 20f;
            ability.StatsDurationNormal[4] = 20f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 20f;
            ability.StatsDurationHero[3] = 20f;
            ability.StatsDurationHero[4] = 20f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 200;
            ability.StatsManaCost[3] = 200;
            ability.StatsManaCost[4] = 200;
            ability.StatsAreaOfEffect[1] = 1000f;
            ability.StatsAreaOfEffect[2] = 600f;
            ability.StatsAreaOfEffect[3] = 600f;
            ability.StatsAreaOfEffect[4] = 600f;
            ability.StatsCastRange[1] = 300f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BNst";
            ability.StatsBuffsRaw[2] = "BNst";
            ability.StatsBuffsRaw[3] = "BNst";
            ability.StatsBuffsRaw[4] = "BNst";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBeastsPerSecond[1] = 2;
            ability.DataBeastsPerSecond[2] = 2;
            ability.DataBeastsPerSecond[3] = 2;
            ability.DataBeastsPerSecond[4] = 2;
            ability.DataBeastCollisionRadius[1] = 55f;
            ability.DataBeastCollisionRadius[2] = 48f;
            ability.DataBeastCollisionRadius[3] = 48f;
            ability.DataBeastCollisionRadius[4] = 48f;
            ability.DataDamageAmount[1] = 60f;
            ability.DataDamageAmount[2] = 50f;
            ability.DataDamageAmount[3] = 50f;
            ability.DataDamageAmount[4] = 50f;
            ability.DataDamageRadius[1] = 275f;
            ability.DataDamageRadius[2] = 200f;
            ability.DataDamageRadius[3] = 200f;
            ability.DataDamageRadius[4] = 200f;
            ability.DataDamageDelay[1] = 0.2f;
            ability.DataDamageDelay[2] = 0.2f;
            ability.DataDamageDelay[3] = 0.2f;
            ability.DataDamageDelay[4] = 0.2f;
            return ability;
        }

        protected virtual BeastMasterSummonBear LoadBeastMasterSummonBear(ObjectDatabaseBase db)
        {
            var ability = new BeastMasterSummonBear(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 70f;
            ability.StatsDurationNormal[3] = 70f;
            ability.StatsDurationNormal[4] = 70f;
            ability.StatsDurationHero[1] = 70f;
            ability.StatsDurationHero[2] = 70f;
            ability.StatsDurationHero[3] = 70f;
            ability.StatsDurationHero[4] = 70f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 40f;
            ability.StatsCooldown[3] = 40f;
            ability.StatsCooldown[4] = 40f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsg";
            ability.StatsBuffsRaw[2] = "BNsg";
            ability.StatsBuffsRaw[3] = "BNsg";
            ability.StatsBuffsRaw[4] = "BNsg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "ngz1";
            ability.DataSummonedUnitTypeRaw[2] = "ngz2";
            ability.DataSummonedUnitTypeRaw[3] = "ngz3";
            ability.DataSummonedUnitTypeRaw[4] = "ngz3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual BeastMasterSummonQuilbeast LoadBeastMasterSummonQuilbeast(ObjectDatabaseBase db)
        {
            var ability = new BeastMasterSummonQuilbeast(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 70f;
            ability.StatsDurationNormal[3] = 70f;
            ability.StatsDurationNormal[4] = 70f;
            ability.StatsDurationHero[1] = 70f;
            ability.StatsDurationHero[2] = 70f;
            ability.StatsDurationHero[3] = 70f;
            ability.StatsDurationHero[4] = 70f;
            ability.StatsCooldown[1] = 25f;
            ability.StatsCooldown[2] = 25f;
            ability.StatsCooldown[3] = 25f;
            ability.StatsCooldown[4] = 25f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsq";
            ability.StatsBuffsRaw[2] = "BNsq";
            ability.StatsBuffsRaw[3] = "BNsq";
            ability.StatsBuffsRaw[4] = "BNsq";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nqb1";
            ability.DataSummonedUnitTypeRaw[2] = "nqb2";
            ability.DataSummonedUnitTypeRaw[3] = "nqb3";
            ability.DataSummonedUnitTypeRaw[4] = "nqb3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual BeastMasterSummonHawk LoadBeastMasterSummonHawk(ObjectDatabaseBase db)
        {
            var ability = new BeastMasterSummonHawk(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 70f;
            ability.StatsDurationNormal[3] = 70f;
            ability.StatsDurationNormal[4] = 70f;
            ability.StatsDurationHero[1] = 70f;
            ability.StatsDurationHero[2] = 70f;
            ability.StatsDurationHero[3] = 70f;
            ability.StatsDurationHero[4] = 70f;
            ability.StatsCooldown[1] = 70f;
            ability.StatsCooldown[2] = 70f;
            ability.StatsCooldown[3] = 70f;
            ability.StatsCooldown[4] = 70f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsw";
            ability.StatsBuffsRaw[2] = "BNsw";
            ability.StatsBuffsRaw[3] = "BNsw";
            ability.StatsBuffsRaw[4] = "BNsw";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nwe1";
            ability.DataSummonedUnitTypeRaw[2] = "nwe2";
            ability.DataSummonedUnitTypeRaw[3] = "nwe3";
            ability.DataSummonedUnitTypeRaw[4] = "nwe3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual BladeMasterBladestorm LoadBladeMasterBladestorm(ObjectDatabaseBase db)
        {
            var ability = new BladeMasterBladestorm(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 7f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 5f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 240f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 200;
            ability.StatsManaCost[2] = 250;
            ability.StatsManaCost[3] = 250;
            ability.StatsManaCost[4] = 250;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOww";
            ability.StatsBuffsRaw[2] = "BOww";
            ability.StatsBuffsRaw[3] = "BOww";
            ability.StatsBuffsRaw[4] = "BOww";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 110f;
            ability.DataDamagePerSecond[2] = 150f;
            ability.DataDamagePerSecond[3] = 150f;
            ability.DataDamagePerSecond[4] = 150f;
            ability.DataMagicDamageReduction[1] = 0f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual BladeMasterCriticalStrike LoadBladeMasterCriticalStrike(ObjectDatabaseBase db)
        {
            var ability = new BladeMasterCriticalStrike(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToCriticalStrike[1] = 15f;
            ability.DataChanceToCriticalStrike[2] = 15f;
            ability.DataChanceToCriticalStrike[3] = 15f;
            ability.DataChanceToCriticalStrike[4] = 15f;
            ability.DataDamageMultiplier[1] = 2f;
            ability.DataDamageMultiplier[2] = 3f;
            ability.DataDamageMultiplier[3] = 4f;
            ability.DataDamageMultiplier[4] = 4f;
            ability.DataDamageBonus[1] = 0f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataChanceToEvade[1] = 0f;
            ability.DataChanceToEvade[2] = 0f;
            ability.DataChanceToEvade[3] = 0f;
            ability.DataChanceToEvade[4] = 0f;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            ability.DataExcludeItemDamageRaw[1] = 0;
            ability.DataExcludeItemDamageRaw[2] = 0;
            ability.DataExcludeItemDamageRaw[3] = 0;
            ability.DataExcludeItemDamageRaw[4] = 0;
            return ability;
        }

        protected virtual BladeMasterMirrorImage LoadBladeMasterMirrorImage(ObjectDatabaseBase db)
        {
            var ability = new BladeMasterMirrorImage(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 3f;
            ability.StatsCooldown[2] = 3f;
            ability.StatsCooldown[3] = 3f;
            ability.StatsCooldown[4] = 3f;
            ability.StatsManaCost[1] = 80;
            ability.StatsManaCost[2] = 80;
            ability.StatsManaCost[3] = 80;
            ability.StatsManaCost[4] = 80;
            ability.StatsAreaOfEffect[1] = 1000f;
            ability.StatsAreaOfEffect[2] = 1000f;
            ability.StatsAreaOfEffect[3] = 1000f;
            ability.StatsAreaOfEffect[4] = 1000f;
            ability.StatsCastRange[1] = 128f;
            ability.StatsCastRange[2] = 128f;
            ability.StatsCastRange[3] = 128f;
            ability.StatsCastRange[4] = 128f;
            ability.StatsBuffsRaw[1] = "BOmi";
            ability.StatsBuffsRaw[2] = "BOmi";
            ability.StatsBuffsRaw[3] = "BOmi";
            ability.StatsBuffsRaw[4] = "BOmi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfImages[1] = 1;
            ability.DataNumberOfImages[2] = 2;
            ability.DataNumberOfImages[3] = 3;
            ability.DataNumberOfImages[4] = 3;
            ability.DataDamageDealt[1] = 0f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataDamageTaken[1] = 2f;
            ability.DataDamageTaken[2] = 2f;
            ability.DataDamageTaken[3] = 2f;
            ability.DataDamageTaken[4] = 2f;
            ability.DataAnimationDelay[1] = 0.5f;
            ability.DataAnimationDelay[2] = 0.5f;
            ability.DataAnimationDelay[3] = 0.5f;
            ability.DataAnimationDelay[4] = 0.5f;
            return ability;
        }

        protected virtual BladeMasterWindWalk LoadBladeMasterWindWalk(ObjectDatabaseBase db)
        {
            var ability = new BladeMasterWindWalk(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 35f;
            ability.StatsDurationNormal[3] = 50f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 35f;
            ability.StatsDurationHero[3] = 50f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 2f;
            ability.StatsCooldown[3] = 2f;
            ability.StatsCooldown[4] = 2f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOwk";
            ability.StatsBuffsRaw[2] = "BOwk";
            ability.StatsBuffsRaw[3] = "BOwk";
            ability.StatsBuffsRaw[4] = "BOwk";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataTransitionTime[1] = 0.6f;
            ability.DataTransitionTime[2] = 0.6f;
            ability.DataTransitionTime[3] = 0.6f;
            ability.DataTransitionTime[4] = 0.6f;
            ability.DataMovementSpeedIncrease[1] = 0.1f;
            ability.DataMovementSpeedIncrease[2] = 0.4f;
            ability.DataMovementSpeedIncrease[3] = 0.7f;
            ability.DataMovementSpeedIncrease[4] = 0.7f;
            ability.DataBackstabDamage_Owk3[1] = 40f;
            ability.DataBackstabDamage_Owk3[2] = 70f;
            ability.DataBackstabDamage_Owk3[3] = 100f;
            ability.DataBackstabDamage_Owk3[4] = 100f;
            ability.DataBackstabDamage_Owk4Raw[1] = 1;
            ability.DataBackstabDamage_Owk4Raw[2] = 1;
            ability.DataBackstabDamage_Owk4Raw[3] = 1;
            ability.DataBackstabDamage_Owk4Raw[4] = 1;
            ability.DataStartCooldownWhenDecloakRaw[1] = 1;
            ability.DataStartCooldownWhenDecloakRaw[2] = 1;
            ability.DataStartCooldownWhenDecloakRaw[3] = 1;
            ability.DataStartCooldownWhenDecloakRaw[4] = 1;
            return ability;
        }

        protected virtual BloodMageBanish LoadBloodMageBanish(ObjectDatabaseBase db)
        {
            var ability = new BloodMageBanish(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonsapper,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonsapper,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonsapper,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonsapper,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 15f;
            ability.StatsDurationNormal[3] = 18f;
            ability.StatsDurationNormal[4] = 18f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 60;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BHbn";
            ability.StatsBuffsRaw[2] = "BHbn";
            ability.StatsBuffsRaw[3] = "BHbn";
            ability.StatsBuffsRaw[4] = "BHbn";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0.5f;
            ability.DataMovementSpeedReduction[2] = 0.5f;
            ability.DataMovementSpeedReduction[3] = 0.5f;
            ability.DataMovementSpeedReduction[4] = 0.5f;
            ability.DataAttackSpeedReduction[1] = 0f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            return ability;
        }

        protected virtual BloodMageFlameStrike LoadBloodMageFlameStrike(ObjectDatabaseBase db)
        {
            var ability = new BloodMageFlameStrike(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,friend,structure,self,tree,debris";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral,friend,structure,self,tree,debris";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral,friend,structure,self,tree,debris";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral,friend,structure,self,tree,debris";
            ability.StatsCastingTime[1] = 0.9f;
            ability.StatsCastingTime[2] = 0.9f;
            ability.StatsCastingTime[3] = 0.9f;
            ability.StatsCastingTime[4] = 0.9f;
            ability.StatsDurationNormal[1] = 9f;
            ability.StatsDurationNormal[2] = 9f;
            ability.StatsDurationNormal[3] = 9f;
            ability.StatsDurationNormal[4] = 9f;
            ability.StatsDurationHero[1] = 2.67f;
            ability.StatsDurationHero[2] = 2.67f;
            ability.StatsDurationHero[3] = 2.67f;
            ability.StatsDurationHero[4] = 2.67f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 135;
            ability.StatsManaCost[2] = 135;
            ability.StatsManaCost[3] = 135;
            ability.StatsManaCost[4] = 135;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BHfs";
            ability.StatsBuffsRaw[2] = "BHfs";
            ability.StatsBuffsRaw[3] = "BHfs";
            ability.StatsBuffsRaw[4] = "BHfs";
            ability.StatsEffectsRaw[1] = "XHfs";
            ability.StatsEffectsRaw[2] = "XHfs";
            ability.StatsEffectsRaw[3] = "XHfs";
            ability.StatsEffectsRaw[4] = "XHfs";
            ability.DataFullDamageDealt[1] = 15f;
            ability.DataFullDamageDealt[2] = 26.666f;
            ability.DataFullDamageDealt[3] = 36.666f;
            ability.DataFullDamageDealt[4] = 36.666f;
            ability.DataFullDamageInterval[1] = 0.33f;
            ability.DataFullDamageInterval[2] = 0.33f;
            ability.DataFullDamageInterval[3] = 0.33f;
            ability.DataFullDamageInterval[4] = 0.33f;
            ability.DataHalfDamageDealt[1] = 4f;
            ability.DataHalfDamageDealt[2] = 6f;
            ability.DataHalfDamageDealt[3] = 8f;
            ability.DataHalfDamageDealt[4] = 8f;
            ability.DataHalfDamageInterval[1] = 1f;
            ability.DataHalfDamageInterval[2] = 1f;
            ability.DataHalfDamageInterval[3] = 1f;
            ability.DataHalfDamageInterval[4] = 1f;
            ability.DataBuildingReduction[1] = 0.75f;
            ability.DataBuildingReduction[2] = 0.75f;
            ability.DataBuildingReduction[3] = 0.75f;
            ability.DataBuildingReduction[4] = 0.75f;
            ability.DataMaximumDamage[1] = 90f;
            ability.DataMaximumDamage[2] = 160f;
            ability.DataMaximumDamage[3] = 220f;
            ability.DataMaximumDamage[4] = 220f;
            return ability;
        }

        protected virtual BloodMageSiphonMana LoadBloodMageSiphonMana(ObjectDatabaseBase db)
        {
            var ability = new BloodMageSiphonMana(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,notself";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,notself";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,notself";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,notself";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 6f;
            ability.StatsDurationNormal[3] = 6f;
            ability.StatsDurationNormal[4] = 6f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 6f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 10;
            ability.StatsManaCost[2] = 10;
            ability.StatsManaCost[3] = 10;
            ability.StatsManaCost[4] = 10;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 800f;
            ability.StatsAreaOfEffect[3] = 800f;
            ability.StatsAreaOfEffect[4] = 800f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 600f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[2] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[3] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[4] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsDrained[1] = 0f;
            ability.DataHitPointsDrained[2] = 0f;
            ability.DataHitPointsDrained[3] = 0f;
            ability.DataHitPointsDrained[4] = 0f;
            ability.DataManaPointsDrained[1] = 15f;
            ability.DataManaPointsDrained[2] = 30f;
            ability.DataManaPointsDrained[3] = 45f;
            ability.DataManaPointsDrained[4] = 55f;
            ability.DataDrainIntervalseconds[1] = 1f;
            ability.DataDrainIntervalseconds[2] = 1f;
            ability.DataDrainIntervalseconds[3] = 1f;
            ability.DataDrainIntervalseconds[4] = 1f;
            ability.DataLifeTransferredPerSecond[1] = 0f;
            ability.DataLifeTransferredPerSecond[2] = 0f;
            ability.DataLifeTransferredPerSecond[3] = 0f;
            ability.DataLifeTransferredPerSecond[4] = 0f;
            ability.DataManaTransferredPerSecond[1] = 30f;
            ability.DataManaTransferredPerSecond[2] = 60f;
            ability.DataManaTransferredPerSecond[3] = 90f;
            ability.DataManaTransferredPerSecond[4] = 50f;
            ability.DataBonusLifeFactor[1] = 0f;
            ability.DataBonusLifeFactor[2] = 0f;
            ability.DataBonusLifeFactor[3] = 0f;
            ability.DataBonusLifeFactor[4] = 0f;
            ability.DataBonusLifeDecay[1] = 0f;
            ability.DataBonusLifeDecay[2] = 0f;
            ability.DataBonusLifeDecay[3] = 0f;
            ability.DataBonusLifeDecay[4] = 0f;
            ability.DataBonusManaFactor[1] = 1f;
            ability.DataBonusManaFactor[2] = 1f;
            ability.DataBonusManaFactor[3] = 1f;
            ability.DataBonusManaFactor[4] = 1f;
            ability.DataBonusManaDecay[1] = 3f;
            ability.DataBonusManaDecay[2] = 3f;
            ability.DataBonusManaDecay[3] = 3f;
            ability.DataBonusManaDecay[4] = 3f;
            return ability;
        }

        protected virtual BloodMagePhoenix LoadBloodMagePhoenix(ObjectDatabaseBase db)
        {
            var ability = new BloodMagePhoenix(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "hphx";
            ability.DataSummonedUnitTypeRaw[2] = "hphx";
            ability.DataSummonedUnitTypeRaw[3] = "hphx";
            ability.DataSummonedUnitTypeRaw[4] = "hphx";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual CryptLordCarrionScarabs LoadCryptLordCarrionScarabs(ObjectDatabaseBase db)
        {
            var ability = new CryptLordCarrionScarabs(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "dead";
            ability.StatsTargetsAllowedRaw[2] = "dead";
            ability.StatsTargetsAllowedRaw[3] = "dead";
            ability.StatsTargetsAllowedRaw[4] = "dead";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 900f;
            ability.StatsCastRange[3] = 900f;
            ability.StatsCastRange[4] = 900f;
            ability.StatsBuffsRaw[1] = "BUcb";
            ability.StatsBuffsRaw[2] = "BUcb";
            ability.StatsBuffsRaw[3] = "BUcb";
            ability.StatsBuffsRaw[4] = "BUcb";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitsSummonedTypeOne[1] = 2;
            ability.DataUnitsSummonedTypeOne[2] = 2;
            ability.DataUnitsSummonedTypeOne[3] = 2;
            ability.DataUnitsSummonedTypeOne[4] = 2;
            ability.DataUnitsSummonedTypeTwo[1] = 0;
            ability.DataUnitsSummonedTypeTwo[2] = 0;
            ability.DataUnitsSummonedTypeTwo[3] = 0;
            ability.DataUnitsSummonedTypeTwo[4] = 0;
            ability.DataUnitTypeOneRaw[1] = "ucs1";
            ability.DataUnitTypeOneRaw[2] = "ucs2";
            ability.DataUnitTypeOneRaw[3] = "ucs3";
            ability.DataUnitTypeOneRaw[4] = "ucs3";
            ability.DataUnitTypeTwoRaw[1] = "-";
            ability.DataUnitTypeTwoRaw[2] = "-";
            ability.DataUnitTypeTwoRaw[3] = "-";
            ability.DataUnitTypeTwoRaw[4] = "-";
            ability.DataMaxUnitsSummoned[1] = 6;
            ability.DataMaxUnitsSummoned[2] = 6;
            ability.DataMaxUnitsSummoned[3] = 6;
            ability.DataMaxUnitsSummoned[4] = 6;
            ability.DataKillOnCasterDeathRaw[1] = 0;
            ability.DataKillOnCasterDeathRaw[2] = 0;
            ability.DataKillOnCasterDeathRaw[3] = 0;
            ability.DataKillOnCasterDeathRaw[4] = 0;
            return ability;
        }

        protected virtual CryptLordImpale LoadCryptLordImpale(ObjectDatabaseBase db)
        {
            var ability = new CryptLordImpale(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 3f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 1.5f;
            ability.StatsDurationHero[3] = 2f;
            ability.StatsDurationHero[4] = 3f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 300f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BUim";
            ability.StatsBuffsRaw[2] = "BUim";
            ability.StatsBuffsRaw[3] = "BUim";
            ability.StatsBuffsRaw[4] = "BUim";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWaveDistance[1] = 600f;
            ability.DataWaveDistance[2] = 600f;
            ability.DataWaveDistance[3] = 600f;
            ability.DataWaveDistance[4] = 600f;
            ability.DataWaveTimeseconds[1] = 0.3f;
            ability.DataWaveTimeseconds[2] = 0.3f;
            ability.DataWaveTimeseconds[3] = 0.3f;
            ability.DataWaveTimeseconds[4] = 0.3f;
            ability.DataDamageDealt[1] = 60f;
            ability.DataDamageDealt[2] = 105f;
            ability.DataDamageDealt[3] = 150f;
            ability.DataDamageDealt[4] = 165f;
            ability.DataAirTimeseconds[1] = 1f;
            ability.DataAirTimeseconds[2] = 1f;
            ability.DataAirTimeseconds[3] = 1f;
            ability.DataAirTimeseconds[4] = 1f;
            ability.DataUninterruptibleRaw[1] = 1;
            ability.DataUninterruptibleRaw[2] = 1;
            ability.DataUninterruptibleRaw[3] = 1;
            ability.DataUninterruptibleRaw[4] = 1;
            ability.DataAirborneTargetsVulnerableRaw[1] = 1;
            ability.DataAirborneTargetsVulnerableRaw[2] = 1;
            ability.DataAirborneTargetsVulnerableRaw[3] = 1;
            ability.DataAirborneTargetsVulnerableRaw[4] = 1;
            return ability;
        }

        protected virtual CryptLordLocustSwarm LoadCryptLordLocustSwarm(ObjectDatabaseBase db)
        {
            var ability = new CryptLordLocustSwarm(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,neutral,enemy";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,neutral,enemy";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,neutral,enemy";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 800f;
            ability.StatsAreaOfEffect[3] = 800f;
            ability.StatsAreaOfEffect[4] = 800f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfSwarmUnits[1] = 20;
            ability.DataNumberOfSwarmUnits[2] = 20;
            ability.DataNumberOfSwarmUnits[3] = 20;
            ability.DataNumberOfSwarmUnits[4] = 20;
            ability.DataUnitReleaseIntervalseconds[1] = 0.2f;
            ability.DataUnitReleaseIntervalseconds[2] = 0.2f;
            ability.DataUnitReleaseIntervalseconds[3] = 0.2f;
            ability.DataUnitReleaseIntervalseconds[4] = 0.2f;
            ability.DataMaxSwarmUnitsPerTarget[1] = 7;
            ability.DataMaxSwarmUnitsPerTarget[2] = 7;
            ability.DataMaxSwarmUnitsPerTarget[3] = 7;
            ability.DataMaxSwarmUnitsPerTarget[4] = 7;
            ability.DataDamageReturnFactor[1] = 0.75f;
            ability.DataDamageReturnFactor[2] = 1f;
            ability.DataDamageReturnFactor[3] = 1f;
            ability.DataDamageReturnFactor[4] = 1f;
            ability.DataDamageReturnThreshold[1] = 20f;
            ability.DataDamageReturnThreshold[2] = 20f;
            ability.DataDamageReturnThreshold[3] = 20f;
            ability.DataDamageReturnThreshold[4] = 20f;
            ability.DataSwarmUnitTypeRaw[1] = "uloc";
            ability.DataSwarmUnitTypeRaw[2] = "uloc";
            ability.DataSwarmUnitTypeRaw[3] = "uloc";
            ability.DataSwarmUnitTypeRaw[4] = "uloc";
            return ability;
        }

        protected virtual CryptLordSpikedCarapace LoadCryptLordSpikedCarapace(ObjectDatabaseBase db)
        {
            var ability = new CryptLordSpikedCarapace(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUts";
            ability.StatsBuffsRaw[2] = "BUts";
            ability.StatsBuffsRaw[3] = "BUts";
            ability.StatsBuffsRaw[4] = "BUts";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataReturnedDamageFactor[1] = 0.15f;
            ability.DataReturnedDamageFactor[2] = 0.25f;
            ability.DataReturnedDamageFactor[3] = 0.35f;
            ability.DataReturnedDamageFactor[4] = 0.35f;
            ability.DataReceivedDamageFactor[1] = 1f;
            ability.DataReceivedDamageFactor[2] = 1f;
            ability.DataReceivedDamageFactor[3] = 1f;
            ability.DataReceivedDamageFactor[4] = 1f;
            ability.DataDefenseBonus[1] = 3f;
            ability.DataDefenseBonus[2] = 5f;
            ability.DataDefenseBonus[3] = 7f;
            ability.DataDefenseBonus[4] = 7f;
            return ability;
        }

        protected virtual DarkRangerBlackArrow LoadDarkRangerBlackArrow(ObjectDatabaseBase db)
        {
            var ability = new DarkRangerBlackArrow(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 2f;
            ability.StatsDurationNormal[3] = 2f;
            ability.StatsDurationNormal[4] = 2f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 6;
            ability.StatsManaCost[2] = 6;
            ability.StatsManaCost[3] = 6;
            ability.StatsManaCost[4] = 6;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BNba,BNdm";
            ability.StatsBuffsRaw[2] = "BNba,BNdm";
            ability.StatsBuffsRaw[3] = "BNba,BNdm";
            ability.StatsBuffsRaw[4] = "BNba,BNdm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 2f;
            ability.DataDamageBonus[2] = 10f;
            ability.DataDamageBonus[3] = 20f;
            ability.DataDamageBonus[4] = 20f;
            ability.DataNumberOfSummonedUnits[1] = 1;
            ability.DataNumberOfSummonedUnits[2] = 1;
            ability.DataNumberOfSummonedUnits[3] = 1;
            ability.DataNumberOfSummonedUnits[4] = 1;
            ability.DataSummonedUnitDurationseconds[1] = 80f;
            ability.DataSummonedUnitDurationseconds[2] = 80f;
            ability.DataSummonedUnitDurationseconds[3] = 80f;
            ability.DataSummonedUnitDurationseconds[4] = 80f;
            ability.DataSummonedUnitTypeRaw[1] = "ndr1";
            ability.DataSummonedUnitTypeRaw[2] = "ndr2";
            ability.DataSummonedUnitTypeRaw[3] = "ndr3";
            ability.DataSummonedUnitTypeRaw[4] = "ndr3";
            return ability;
        }

        protected virtual DarkRangerCharm LoadDarkRangerCharm(ObjectDatabaseBase db)
        {
            var ability = new DarkRangerCharm(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonhero,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonhero,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonhero,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 5;
            ability.DataMaximumCreepLevel[3] = 5;
            ability.DataMaximumCreepLevel[4] = 5;
            return ability;
        }

        protected virtual DarkRangerDrain LoadDarkRangerDrain(ObjectDatabaseBase db)
        {
            var ability = new DarkRangerDrain(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 8f;
            ability.StatsDurationNormal[3] = 8f;
            ability.StatsDurationNormal[4] = 8f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 8f;
            ability.StatsDurationHero[3] = 8f;
            ability.StatsDurationHero[4] = 8f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 800f;
            ability.StatsAreaOfEffect[3] = 800f;
            ability.StatsAreaOfEffect[4] = 800f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[2] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[3] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[4] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsDrained[1] = 30f;
            ability.DataHitPointsDrained[2] = 45f;
            ability.DataHitPointsDrained[3] = 60f;
            ability.DataHitPointsDrained[4] = 60f;
            ability.DataManaPointsDrained[1] = 0f;
            ability.DataManaPointsDrained[2] = 0f;
            ability.DataManaPointsDrained[3] = 0f;
            ability.DataManaPointsDrained[4] = 0f;
            ability.DataDrainIntervalseconds[1] = 1f;
            ability.DataDrainIntervalseconds[2] = 1f;
            ability.DataDrainIntervalseconds[3] = 1f;
            ability.DataDrainIntervalseconds[4] = 1f;
            ability.DataLifeTransferredPerSecond[1] = 0f;
            ability.DataLifeTransferredPerSecond[2] = 0f;
            ability.DataLifeTransferredPerSecond[3] = 0f;
            ability.DataLifeTransferredPerSecond[4] = 0f;
            ability.DataManaTransferredPerSecond[1] = 0f;
            ability.DataManaTransferredPerSecond[2] = 0f;
            ability.DataManaTransferredPerSecond[3] = 0f;
            ability.DataManaTransferredPerSecond[4] = 0f;
            ability.DataBonusLifeFactor[1] = 0f;
            ability.DataBonusLifeFactor[2] = 0f;
            ability.DataBonusLifeFactor[3] = 0f;
            ability.DataBonusLifeFactor[4] = 0f;
            ability.DataBonusLifeDecay[1] = 0f;
            ability.DataBonusLifeDecay[2] = 0f;
            ability.DataBonusLifeDecay[3] = 0f;
            ability.DataBonusLifeDecay[4] = 0f;
            ability.DataBonusManaFactor[1] = 0f;
            ability.DataBonusManaFactor[2] = 0f;
            ability.DataBonusManaFactor[3] = 0f;
            ability.DataBonusManaFactor[4] = 0f;
            ability.DataBonusManaDecay[1] = 0f;
            ability.DataBonusManaDecay[2] = 0f;
            ability.DataBonusManaDecay[3] = 0f;
            ability.DataBonusManaDecay[4] = 0f;
            ability.DataUseBlackArrowEffectRaw[1] = 1;
            ability.DataUseBlackArrowEffectRaw[2] = 1;
            ability.DataUseBlackArrowEffectRaw[3] = 1;
            ability.DataUseBlackArrowEffectRaw[4] = 1;
            return ability;
        }

        protected virtual DarkRangerSilence LoadDarkRangerSilence(ObjectDatabaseBase db)
        {
            var ability = new DarkRangerSilence(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 16f;
            ability.StatsDurationNormal[2] = 20f;
            ability.StatsDurationNormal[3] = 24f;
            ability.StatsDurationNormal[4] = 24f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 10f;
            ability.StatsDurationHero[3] = 12f;
            ability.StatsDurationHero[4] = 12f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 15f;
            ability.StatsCooldown[3] = 15f;
            ability.StatsCooldown[4] = 15f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 275f;
            ability.StatsAreaOfEffect[3] = 350f;
            ability.StatsAreaOfEffect[4] = 350f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 900f;
            ability.StatsCastRange[3] = 900f;
            ability.StatsCastRange[4] = 900f;
            ability.StatsBuffsRaw[1] = "BNsi";
            ability.StatsBuffsRaw[2] = "BNsi";
            ability.StatsBuffsRaw[3] = "BNsi";
            ability.StatsBuffsRaw[4] = "BNsi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 8;
            ability.DataAttacksPreventedRaw[2] = 8;
            ability.DataAttacksPreventedRaw[3] = 8;
            ability.DataAttacksPreventedRaw[4] = 8;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataMovementSpeedModifier[1] = 0f;
            ability.DataMovementSpeedModifier[2] = 0f;
            ability.DataMovementSpeedModifier[3] = 0f;
            ability.DataMovementSpeedModifier[4] = 0f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual DeathKnightAnimateDead LoadDeathKnightAnimateDead(ObjectDatabaseBase db)
        {
            var ability = new DeathKnightAnimateDead(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,dead";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 120f;
            ability.StatsDurationNormal[3] = 120f;
            ability.StatsDurationNormal[4] = 120f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 120f;
            ability.StatsDurationHero[3] = 120f;
            ability.StatsDurationHero[4] = 120f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 240f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 400f;
            ability.StatsCastRange[3] = 400f;
            ability.StatsCastRange[4] = 400f;
            ability.StatsBuffsRaw[1] = "BUan";
            ability.StatsBuffsRaw[2] = "BUan";
            ability.StatsBuffsRaw[3] = "BUan";
            ability.StatsBuffsRaw[4] = "BUan";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfCorpsesRaised[1] = 6;
            ability.DataNumberOfCorpsesRaised[2] = 6;
            ability.DataNumberOfCorpsesRaised[3] = 6;
            ability.DataNumberOfCorpsesRaised[4] = 6;
            ability.DataInheritUpgradesRaw[1] = 0;
            ability.DataInheritUpgradesRaw[2] = 0;
            ability.DataInheritUpgradesRaw[3] = 0;
            ability.DataInheritUpgradesRaw[4] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 1;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 1;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 1;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 1;
            return ability;
        }

        protected virtual DeathKnightDeathCoil LoadDeathKnightDeathCoil(ObjectDatabaseBase db)
        {
            var ability = new DeathKnightDeathCoil(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountHealedDamaged[1] = 200f;
            ability.DataAmountHealedDamaged[2] = 400f;
            ability.DataAmountHealedDamaged[3] = 600f;
            ability.DataAmountHealedDamaged[4] = 600f;
            return ability;
        }

        protected virtual DeathKnightDeathPact LoadDeathKnightDeathPact(ObjectDatabaseBase db)
        {
            var ability = new DeathKnightDeathPact(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 15f;
            ability.StatsCooldown[3] = 15f;
            ability.StatsCooldown[4] = 15f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeConvertedToMana[1] = 0f;
            ability.DataLifeConvertedToMana[2] = 0f;
            ability.DataLifeConvertedToMana[3] = 0f;
            ability.DataLifeConvertedToMana[4] = 0f;
            ability.DataLifeConvertedToLife[1] = 1f;
            ability.DataLifeConvertedToLife[2] = 2f;
            ability.DataLifeConvertedToLife[3] = 3f;
            ability.DataLifeConvertedToLife[4] = 3f;
            ability.DataManaConversionAsPercentRaw[1] = 0;
            ability.DataManaConversionAsPercentRaw[2] = 0;
            ability.DataManaConversionAsPercentRaw[3] = 0;
            ability.DataManaConversionAsPercentRaw[4] = 0;
            ability.DataLifeConversionAsPercentRaw[1] = 0;
            ability.DataLifeConversionAsPercentRaw[2] = 0;
            ability.DataLifeConversionAsPercentRaw[3] = 0;
            ability.DataLifeConversionAsPercentRaw[4] = 0;
            ability.DataLeaveTargetAliveRaw[1] = 0;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            return ability;
        }

        protected virtual DeathKnightUnholyAura LoadDeathKnightUnholyAura(ObjectDatabaseBase db)
        {
            var ability = new DeathKnightUnholyAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUau";
            ability.StatsBuffsRaw[2] = "BUau";
            ability.StatsBuffsRaw[3] = "BUau";
            ability.StatsBuffsRaw[4] = "BUau";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.1f;
            ability.DataMovementSpeedIncrease[2] = 0.175f;
            ability.DataMovementSpeedIncrease[3] = 0.25f;
            ability.DataMovementSpeedIncrease[4] = 0.3f;
            ability.DataLifeRegenerationIncrease[1] = 0.5f;
            ability.DataLifeRegenerationIncrease[2] = 1f;
            ability.DataLifeRegenerationIncrease[3] = 1.5f;
            ability.DataLifeRegenerationIncrease[4] = 1.5f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual DemonHunterEvasion LoadDemonHunterEvasion(ObjectDatabaseBase db)
        {
            var ability = new DemonHunterEvasion(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToEvade[1] = 0.1f;
            ability.DataChanceToEvade[2] = 0.2f;
            ability.DataChanceToEvade[3] = 0.3f;
            ability.DataChanceToEvade[4] = 0.3f;
            return ability;
        }

        protected virtual DemonHunterImmolation LoadDemonHunterImmolation(ObjectDatabaseBase db)
        {
            var ability = new DemonHunterImmolation(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 1f;
            ability.StatsDurationNormal[3] = 1f;
            ability.StatsDurationNormal[4] = 1f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 1f;
            ability.StatsDurationHero[3] = 1f;
            ability.StatsDurationHero[4] = 1f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 160f;
            ability.StatsAreaOfEffect[2] = 160f;
            ability.StatsAreaOfEffect[3] = 160f;
            ability.StatsAreaOfEffect[4] = 160f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEim,BEia";
            ability.StatsBuffsRaw[2] = "BEim,BEia";
            ability.StatsBuffsRaw[3] = "BEim,BEia";
            ability.StatsBuffsRaw[4] = "BEim,BEia";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerInterval[1] = 10f;
            ability.DataDamagePerInterval[2] = 15f;
            ability.DataDamagePerInterval[3] = 20f;
            ability.DataDamagePerInterval[4] = 20f;
            ability.DataManaDrainedPerSecond[1] = 7f;
            ability.DataManaDrainedPerSecond[2] = 7f;
            ability.DataManaDrainedPerSecond[3] = 7f;
            ability.DataManaDrainedPerSecond[4] = 7f;
            ability.DataBufferManaRequired[1] = 10f;
            ability.DataBufferManaRequired[2] = 10f;
            ability.DataBufferManaRequired[3] = 10f;
            ability.DataBufferManaRequired[4] = 10f;
            return ability;
        }

        protected virtual DemonHunterManaBurn LoadDemonHunterManaBurn(ObjectDatabaseBase db)
        {
            var ability = new DemonHunterManaBurn(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 5f;
            ability.StatsCooldown[4] = 5f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 300f;
            ability.StatsCastRange[2] = 300f;
            ability.StatsCastRange[3] = 300f;
            ability.StatsCastRange[4] = 300f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaDrained[1] = 50f;
            ability.DataMaxManaDrained[2] = 100f;
            ability.DataMaxManaDrained[3] = 150f;
            ability.DataMaxManaDrained[4] = 150f;
            ability.DataBoltDelay[1] = 0.25f;
            ability.DataBoltDelay[2] = 0.25f;
            ability.DataBoltDelay[3] = 0.25f;
            ability.DataBoltDelay[4] = 0.25f;
            ability.DataBoltLifetime[1] = 1f;
            ability.DataBoltLifetime[2] = 1f;
            ability.DataBoltLifetime[3] = 1f;
            ability.DataBoltLifetime[4] = 1f;
            return ability;
        }

        protected virtual DemonHunterMetamorphosis LoadDemonHunterMetamorphosis(ObjectDatabaseBase db)
        {
            var ability = new DemonHunterMetamorphosis(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 45f;
            ability.StatsDurationHero[3] = 45f;
            ability.StatsDurationHero[4] = 45f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEme";
            ability.StatsBuffsRaw[2] = "BEme";
            ability.StatsBuffsRaw[3] = "BEme";
            ability.StatsBuffsRaw[4] = "BEme";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Edem";
            ability.DataNormalFormUnitRaw[2] = "Edem";
            ability.DataNormalFormUnitRaw[3] = "Edem";
            ability.DataNormalFormUnitRaw[4] = "Edem";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormHitPointBonus[1] = 500f;
            ability.DataAlternateFormHitPointBonus[2] = 500f;
            ability.DataAlternateFormHitPointBonus[3] = 500f;
            ability.DataAlternateFormHitPointBonus[4] = 500f;
            ability.DataAlternateFormUnitRaw[1] = "Edmm";
            ability.DataAlternateFormUnitRaw[2] = "Edmm";
            ability.DataAlternateFormUnitRaw[3] = "Edmm";
            ability.DataAlternateFormUnitRaw[4] = "Edmm";
            return ability;
        }

        protected virtual DreadlordSleep LoadDreadlordSleep(ObjectDatabaseBase db)
        {
            var ability = new DreadlordSleep(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 35f;
            ability.StatsDurationNormal[3] = 55f;
            ability.StatsDurationNormal[4] = 55f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 8f;
            ability.StatsDurationHero[3] = 12f;
            ability.StatsDurationHero[4] = 12f;
            ability.StatsCooldown[1] = 4f;
            ability.StatsCooldown[2] = 4f;
            ability.StatsCooldown[3] = 4f;
            ability.StatsCooldown[4] = 4f;
            ability.StatsManaCost[1] = 80;
            ability.StatsManaCost[2] = 65;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BUsl,BUsp,Bust";
            ability.StatsBuffsRaw[2] = "BUsl,BUsp,Bust";
            ability.StatsBuffsRaw[3] = "BUsl,BUsp,Bust";
            ability.StatsBuffsRaw[4] = "BUsl,BUsp,Bust";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataStunDuration[1] = 2f;
            ability.DataStunDuration[2] = 2f;
            ability.DataStunDuration[3] = 2f;
            ability.DataStunDuration[4] = 2f;
            return ability;
        }

        protected virtual DreadlordVampiricAura LoadDreadlordVampiricAura(ObjectDatabaseBase db)
        {
            var ability = new DreadlordVampiricAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUav";
            ability.StatsBuffsRaw[2] = "BUav";
            ability.StatsBuffsRaw[3] = "BUav";
            ability.StatsBuffsRaw[4] = "BUav";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackDamageStolen[1] = 0.2f;
            ability.DataAttackDamageStolen[2] = 0.35f;
            ability.DataAttackDamageStolen[3] = 0.5f;
            ability.DataAttackDamageStolen[4] = 0.5f;
            return ability;
        }

        protected virtual DreadlordCarrionSwarm LoadDreadlordCarrionSwarm(ObjectDatabaseBase db)
        {
            var ability = new DreadlordCarrionSwarm(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air";
            ability.StatsTargetsAllowedRaw[2] = "ground,air";
            ability.StatsTargetsAllowedRaw[3] = "ground,air";
            ability.StatsTargetsAllowedRaw[4] = "ground,air";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 100f;
            ability.StatsAreaOfEffect[3] = 100f;
            ability.StatsAreaOfEffect[4] = 100f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BUcs";
            ability.StatsBuffsRaw[2] = "BUcs";
            ability.StatsBuffsRaw[3] = "BUcs";
            ability.StatsBuffsRaw[4] = "BUcs";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 75f;
            ability.DataDamage[2] = 125f;
            ability.DataDamage[3] = 200f;
            ability.DataDamage[4] = 200f;
            ability.DataMaxDamage[1] = 400f;
            ability.DataMaxDamage[2] = 700f;
            ability.DataMaxDamage[3] = 1200f;
            ability.DataMaxDamage[4] = 1000f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 800f;
            ability.DataDistance[3] = 800f;
            ability.DataDistance[4] = 800f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 300f;
            ability.DataFinalArea[3] = 300f;
            ability.DataFinalArea[4] = 300f;
            return ability;
        }

        protected virtual DreadlordInferno LoadDreadlordInferno(ObjectDatabaseBase db)
        {
            var ability = new DreadlordInferno(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 2f;
            ability.StatsDurationHero[3] = 2f;
            ability.StatsDurationHero[4] = 2f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 175;
            ability.StatsManaCost[3] = 175;
            ability.StatsManaCost[4] = 175;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 250f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 900f;
            ability.StatsCastRange[3] = 900f;
            ability.StatsCastRange[4] = 900f;
            ability.StatsBuffsRaw[1] = "BNin";
            ability.StatsBuffsRaw[2] = "BNin";
            ability.StatsBuffsRaw[3] = "BNin";
            ability.StatsBuffsRaw[4] = "BNin";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 50f;
            ability.DataDamage[2] = 50f;
            ability.DataDamage[3] = 50f;
            ability.DataDamage[4] = 50f;
            ability.DataDuration[1] = 180f;
            ability.DataDuration[2] = 180f;
            ability.DataDuration[3] = 180f;
            ability.DataDuration[4] = 180f;
            ability.DataImpactDelay[1] = 1f;
            ability.DataImpactDelay[2] = 1f;
            ability.DataImpactDelay[3] = 1f;
            ability.DataImpactDelay[4] = 1f;
            ability.DataSummonedUnitRaw[1] = "ninf";
            ability.DataSummonedUnitRaw[2] = "ninf";
            ability.DataSummonedUnitRaw[3] = "ninf";
            ability.DataSummonedUnitRaw[4] = "ninf";
            return ability;
        }

        protected virtual FarseerChainLightning LoadFarseerChainLightning(ObjectDatabaseBase db)
        {
            var ability = new FarseerChainLightning(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 120;
            ability.StatsManaCost[2] = 120;
            ability.StatsManaCost[3] = 120;
            ability.StatsManaCost[4] = 120;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 500f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 85f;
            ability.DataDamagePerTarget[2] = 125f;
            ability.DataDamagePerTarget[3] = 180f;
            ability.DataDamagePerTarget[4] = 180f;
            ability.DataNumberOfTargetsHit[1] = 4;
            ability.DataNumberOfTargetsHit[2] = 6;
            ability.DataNumberOfTargetsHit[3] = 8;
            ability.DataNumberOfTargetsHit[4] = 8;
            ability.DataDamageReductionPerTarget[1] = 0.1f;
            ability.DataDamageReductionPerTarget[2] = 0.1f;
            ability.DataDamageReductionPerTarget[3] = 0.1f;
            ability.DataDamageReductionPerTarget[4] = 0.1f;
            return ability;
        }

        protected virtual FarseerEarthquake LoadFarseerEarthquake(ObjectDatabaseBase db)
        {
            var ability = new FarseerEarthquake(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,tree";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,tree";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,tree";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,tree";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 20f;
            ability.StatsDurationNormal[3] = 20f;
            ability.StatsDurationNormal[4] = 20f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 20f;
            ability.StatsDurationHero[3] = 20f;
            ability.StatsDurationHero[4] = 20f;
            ability.StatsCooldown[1] = 90f;
            ability.StatsCooldown[2] = 90f;
            ability.StatsCooldown[3] = 90f;
            ability.StatsCooldown[4] = 90f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 400f;
            ability.StatsAreaOfEffect[3] = 400f;
            ability.StatsAreaOfEffect[4] = 400f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BOeq,BOea";
            ability.StatsBuffsRaw[2] = "BOeq,BOea";
            ability.StatsBuffsRaw[3] = "BOeq,BOea";
            ability.StatsBuffsRaw[4] = "BOeq,BOea";
            ability.StatsEffectsRaw[1] = "XOeq";
            ability.StatsEffectsRaw[2] = "XOeq";
            ability.StatsEffectsRaw[3] = "XOeq";
            ability.StatsEffectsRaw[4] = "XOeq";
            ability.DataEffectDelay[1] = 0.5f;
            ability.DataEffectDelay[2] = 0.5f;
            ability.DataEffectDelay[3] = 0.5f;
            ability.DataEffectDelay[4] = 0.5f;
            ability.DataDamagePerSecondToBuildings[1] = 60f;
            ability.DataDamagePerSecondToBuildings[2] = 60f;
            ability.DataDamagePerSecondToBuildings[3] = 40f;
            ability.DataDamagePerSecondToBuildings[4] = 40f;
            ability.DataUnitsSlowed[1] = 0.75f;
            ability.DataUnitsSlowed[2] = 0.75f;
            ability.DataUnitsSlowed[3] = 0.75f;
            ability.DataUnitsSlowed[4] = 0.75f;
            ability.DataFinalArea[1] = 250f;
            ability.DataFinalArea[2] = 400f;
            ability.DataFinalArea[3] = 400f;
            ability.DataFinalArea[4] = 400f;
            return ability;
        }

        protected virtual FarseerFarSight LoadFarseerFarSight(ObjectDatabaseBase db)
        {
            var ability = new FarseerFarSight(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 8f;
            ability.StatsDurationNormal[3] = 8f;
            ability.StatsDurationNormal[4] = 8f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 8f;
            ability.StatsDurationHero[3] = 8f;
            ability.StatsDurationHero[4] = 8f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 1800f;
            ability.StatsAreaOfEffect[3] = 2700f;
            ability.StatsAreaOfEffect[4] = 2700f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 99999f;
            ability.StatsCastRange[3] = 99999f;
            ability.StatsCastRange[4] = 99999f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbdt";
            ability.StatsEffectsRaw[2] = "Xbdt";
            ability.StatsEffectsRaw[3] = "Xbdt";
            ability.StatsEffectsRaw[4] = "Xbdt";
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 3;
            ability.DataDetectionTypeRaw[3] = 3;
            ability.DataDetectionTypeRaw[4] = 3;
            return ability;
        }

        protected virtual FarseerSpiritWolf LoadFarseerSpiritWolf(ObjectDatabaseBase db)
        {
            var ability = new FarseerSpiritWolf(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = "BOsf";
            ability.StatsBuffsRaw[3] = "BOsf";
            ability.StatsBuffsRaw[4] = "BOsf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitRaw[1] = "osw1";
            ability.DataSummonedUnitRaw[2] = "osw2";
            ability.DataSummonedUnitRaw[3] = "osw3";
            ability.DataSummonedUnitRaw[4] = "osw3";
            ability.DataNumberOfSummonedUnits[1] = 2;
            ability.DataNumberOfSummonedUnits[2] = 2;
            ability.DataNumberOfSummonedUnits[3] = 2;
            ability.DataNumberOfSummonedUnits[4] = 2;
            return ability;
        }

        protected virtual KeeperEntanglingRoots LoadKeeperEntanglingRoots(ObjectDatabaseBase db)
        {
            var ability = new KeeperEntanglingRoots(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 9f;
            ability.StatsDurationNormal[2] = 18f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 36f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 4f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 7f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = "BEer";
            ability.StatsBuffsRaw[2] = "BEer";
            ability.StatsBuffsRaw[3] = "BEer";
            ability.StatsBuffsRaw[4] = "BEer";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 15f;
            ability.DataDamagePerSecond[2] = 20f;
            ability.DataDamagePerSecond[3] = 30f;
            ability.DataDamagePerSecond[4] = 25f;
            return ability;
        }

        protected virtual KeeperForceOfNature LoadKeeperForceOfNature(ObjectDatabaseBase db)
        {
            var ability = new KeeperForceOfNature(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree";
            ability.StatsTargetsAllowedRaw[2] = "tree";
            ability.StatsTargetsAllowedRaw[3] = "tree";
            ability.StatsTargetsAllowedRaw[4] = "tree";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 225f;
            ability.StatsAreaOfEffect[3] = 300f;
            ability.StatsAreaOfEffect[4] = 300f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BEfn";
            ability.StatsBuffsRaw[2] = "BEfn";
            ability.StatsBuffsRaw[3] = "BEfn";
            ability.StatsBuffsRaw[4] = "BEfn";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 2;
            ability.DataNumberOfSummonedUnits[2] = 3;
            ability.DataNumberOfSummonedUnits[3] = 4;
            ability.DataNumberOfSummonedUnits[4] = 4;
            ability.DataSummonedUnitTypeRaw[1] = "efon";
            ability.DataSummonedUnitTypeRaw[2] = "efon";
            ability.DataSummonedUnitTypeRaw[3] = "efon";
            ability.DataSummonedUnitTypeRaw[4] = "efon";
            return ability;
        }

        protected virtual KeeperThornsAura LoadKeeperThornsAura(ObjectDatabaseBase db)
        {
            var ability = new KeeperThornsAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEah";
            ability.StatsBuffsRaw[2] = "BEah";
            ability.StatsBuffsRaw[3] = "BEah";
            ability.StatsBuffsRaw[4] = "BEah";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageDealtToAttackers[1] = 0.1f;
            ability.DataDamageDealtToAttackers[2] = 0.2f;
            ability.DataDamageDealtToAttackers[3] = 0.3f;
            ability.DataDamageDealtToAttackers[4] = 0.3f;
            ability.DataDamageIsPercentReceivedRaw[1] = 1;
            ability.DataDamageIsPercentReceivedRaw[2] = 1;
            ability.DataDamageIsPercentReceivedRaw[3] = 1;
            ability.DataDamageIsPercentReceivedRaw[4] = 1;
            return ability;
        }

        protected virtual KeeperTranquility LoadKeeperTranquility(ObjectDatabaseBase db)
        {
            var ability = new KeeperTranquility(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 15f;
            ability.StatsDurationNormal[3] = 15f;
            ability.StatsDurationNormal[4] = 15f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 15f;
            ability.StatsDurationHero[3] = 15f;
            ability.StatsDurationHero[4] = 15f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 300;
            ability.StatsManaCost[3] = 300;
            ability.StatsManaCost[4] = 300;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "AEtr";
            ability.StatsBuffsRaw[2] = "AEtr";
            ability.StatsBuffsRaw[3] = "AEtr";
            ability.StatsBuffsRaw[4] = "AEtr";
            ability.StatsEffectsRaw[1] = "XEtq";
            ability.StatsEffectsRaw[2] = "XEtq";
            ability.StatsEffectsRaw[3] = "XEtq";
            ability.StatsEffectsRaw[4] = "XEtq";
            ability.DataLifeHealed[1] = 48f;
            ability.DataLifeHealed[2] = 40f;
            ability.DataLifeHealed[3] = 40f;
            ability.DataLifeHealed[4] = 40f;
            ability.DataHealInterval[1] = 1f;
            ability.DataHealInterval[2] = 1f;
            ability.DataHealInterval[3] = 1f;
            ability.DataHealInterval[4] = 1f;
            ability.DataBuildingReduction[1] = 1f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            ability.DataInitialImmunityDuration[1] = 0f;
            ability.DataInitialImmunityDuration[2] = 1f;
            ability.DataInitialImmunityDuration[3] = 1f;
            ability.DataInitialImmunityDuration[4] = 1f;
            return ability;
        }

        protected virtual LichDarkRitual LoadLichDarkRitual(ObjectDatabaseBase db)
        {
            var ability = new LichDarkRitual(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,player,nonhero,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,player,nonhero,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,player,nonhero,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 15f;
            ability.StatsCooldown[3] = 15f;
            ability.StatsCooldown[4] = 15f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeConvertedToMana[1] = 0.33f;
            ability.DataLifeConvertedToMana[2] = 0.66f;
            ability.DataLifeConvertedToMana[3] = 1f;
            ability.DataLifeConvertedToMana[4] = 1f;
            ability.DataLifeConvertedToLife[1] = 0f;
            ability.DataLifeConvertedToLife[2] = 0f;
            ability.DataLifeConvertedToLife[3] = 0f;
            ability.DataLifeConvertedToLife[4] = 0f;
            ability.DataManaConversionAsPercentRaw[1] = 0;
            ability.DataManaConversionAsPercentRaw[2] = 0;
            ability.DataManaConversionAsPercentRaw[3] = 0;
            ability.DataManaConversionAsPercentRaw[4] = 0;
            ability.DataLifeConversionAsPercentRaw[1] = 0;
            ability.DataLifeConversionAsPercentRaw[2] = 0;
            ability.DataLifeConversionAsPercentRaw[3] = 0;
            ability.DataLifeConversionAsPercentRaw[4] = 0;
            ability.DataLeaveTargetAliveRaw[1] = 0;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            return ability;
        }

        protected virtual LichDeathAndDecay LoadLichDeathAndDecay(ObjectDatabaseBase db)
        {
            var ability = new LichDeathAndDecay(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,ward";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 35f;
            ability.StatsDurationNormal[2] = 35f;
            ability.StatsDurationNormal[3] = 35f;
            ability.StatsDurationNormal[4] = 35f;
            ability.StatsDurationHero[1] = 35f;
            ability.StatsDurationHero[2] = 35f;
            ability.StatsDurationHero[3] = 35f;
            ability.StatsDurationHero[4] = 35f;
            ability.StatsCooldown[1] = 150f;
            ability.StatsCooldown[2] = 150f;
            ability.StatsCooldown[3] = 150f;
            ability.StatsCooldown[4] = 150f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 250;
            ability.StatsManaCost[3] = 250;
            ability.StatsManaCost[4] = 250;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 400f;
            ability.StatsAreaOfEffect[3] = 400f;
            ability.StatsAreaOfEffect[4] = 400f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BUdd";
            ability.StatsBuffsRaw[2] = "BUdd";
            ability.StatsBuffsRaw[3] = "BUdd";
            ability.StatsBuffsRaw[4] = "BUdd";
            ability.StatsEffectsRaw[1] = "XUdd";
            ability.StatsEffectsRaw[2] = "XUdd";
            ability.StatsEffectsRaw[3] = "XUdd";
            ability.StatsEffectsRaw[4] = "XUdd";
            ability.DataMaxLifeDrainedPerSecond[1] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[2] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[3] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[4] = 0.04f;
            ability.DataBuildingReduction[1] = 1f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            return ability;
        }

        protected virtual LichFrostArmor LoadLichFrostArmor(ObjectDatabaseBase db)
        {
            var ability = new LichFrostArmor(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 4f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 2f;
            ability.StatsCooldown[3] = 2f;
            ability.StatsCooldown[4] = 2f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 40;
            ability.StatsManaCost[3] = 40;
            ability.StatsManaCost[4] = 40;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BUfa";
            ability.StatsBuffsRaw[2] = "BUfa";
            ability.StatsBuffsRaw[3] = "BUfa";
            ability.StatsBuffsRaw[4] = "BUfa";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorDuration[1] = 45f;
            ability.DataArmorDuration[2] = 45f;
            ability.DataArmorDuration[3] = 45f;
            ability.DataArmorDuration[4] = 45f;
            ability.DataArmorBonus[1] = 3f;
            ability.DataArmorBonus[2] = 5f;
            ability.DataArmorBonus[3] = 7f;
            ability.DataArmorBonus[4] = 7f;
            return ability;
        }

        protected virtual LichFrostArmorAutocast LoadLichFrostArmorAutocast(ObjectDatabaseBase db)
        {
            var ability = new LichFrostArmorAutocast(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 7f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 7f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 2f;
            ability.StatsCooldown[3] = 2f;
            ability.StatsCooldown[4] = 2f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 40;
            ability.StatsManaCost[3] = 40;
            ability.StatsManaCost[4] = 40;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BUfa";
            ability.StatsBuffsRaw[2] = "BUfa";
            ability.StatsBuffsRaw[3] = "BUfa";
            ability.StatsBuffsRaw[4] = "BUfa";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorDuration[1] = 45f;
            ability.DataArmorDuration[2] = 45f;
            ability.DataArmorDuration[3] = 45f;
            ability.DataArmorDuration[4] = 45f;
            ability.DataArmorBonus[1] = 3f;
            ability.DataArmorBonus[2] = 5f;
            ability.DataArmorBonus[3] = 7f;
            ability.DataArmorBonus[4] = 7f;
            return ability;
        }

        protected virtual LichFrostNova LoadLichFrostNova(ObjectDatabaseBase db)
        {
            var ability = new LichFrostNova(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,air,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,air,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,air,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,air,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 6f;
            ability.StatsDurationNormal[3] = 8f;
            ability.StatsDurationNormal[4] = 8f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 8f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = "Bfro";
            ability.StatsBuffsRaw[3] = "Bfro";
            ability.StatsBuffsRaw[4] = "Bfro";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAreaOfEffectDamage[1] = 50f;
            ability.DataAreaOfEffectDamage[2] = 100f;
            ability.DataAreaOfEffectDamage[3] = 150f;
            ability.DataAreaOfEffectDamage[4] = 150f;
            ability.DataSpecificTargetDamage[1] = 100f;
            ability.DataSpecificTargetDamage[2] = 100f;
            ability.DataSpecificTargetDamage[3] = 100f;
            ability.DataSpecificTargetDamage[4] = 100f;
            ability.DataMaximumDamage[1] = 0f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            return ability;
        }

        protected virtual MountainKingAvatar LoadMountainKingAvatar(ObjectDatabaseBase db)
        {
            var ability = new MountainKingAvatar(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0.5f;
            ability.StatsAreaOfEffect[2] = 0.5f;
            ability.StatsAreaOfEffect[3] = 0.5f;
            ability.StatsAreaOfEffect[4] = 0.5f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 5f;
            ability.DataDefenseBonus[2] = 5f;
            ability.DataDefenseBonus[3] = 5f;
            ability.DataDefenseBonus[4] = 5f;
            ability.DataHitPointBonus[1] = 500f;
            ability.DataHitPointBonus[2] = 500f;
            ability.DataHitPointBonus[3] = 500f;
            ability.DataHitPointBonus[4] = 500f;
            ability.DataDamageBonus[1] = 20f;
            ability.DataDamageBonus[2] = 20f;
            ability.DataDamageBonus[3] = 20f;
            ability.DataDamageBonus[4] = 20f;
            ability.DataMagicDamageReduction[1] = 0f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual MountainKingBash LoadMountainKingBash(ObjectDatabaseBase db)
        {
            var ability = new MountainKingBash(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air";
            ability.StatsTargetsAllowedRaw[2] = "ground,air";
            ability.StatsTargetsAllowedRaw[3] = "ground,air";
            ability.StatsTargetsAllowedRaw[4] = "ground,air";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 2f;
            ability.StatsDurationNormal[3] = 2f;
            ability.StatsDurationNormal[4] = 2f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 1f;
            ability.StatsDurationHero[3] = 1f;
            ability.StatsDurationHero[4] = 1f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = "BPSE";
            ability.StatsBuffsRaw[3] = "BPSE";
            ability.StatsBuffsRaw[4] = "BPSE";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToBash[1] = 20f;
            ability.DataChanceToBash[2] = 30f;
            ability.DataChanceToBash[3] = 40f;
            ability.DataChanceToBash[4] = 35f;
            ability.DataDamageMultiplier[1] = 0f;
            ability.DataDamageMultiplier[2] = 0f;
            ability.DataDamageMultiplier[3] = 0f;
            ability.DataDamageMultiplier[4] = 0f;
            ability.DataDamageBonus[1] = 25f;
            ability.DataDamageBonus[2] = 25f;
            ability.DataDamageBonus[3] = 25f;
            ability.DataDamageBonus[4] = 25f;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            return ability;
        }

        protected virtual MountainKingThunderBolt LoadMountainKingThunderBolt(ObjectDatabaseBase db)
        {
            var ability = new MountainKingThunderBolt(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 3f;
            ability.StatsDurationHero[4] = 3f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 600f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = "BPSE";
            ability.StatsBuffsRaw[3] = "BPSE";
            ability.StatsBuffsRaw[4] = "BPSE";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 200f;
            ability.DataDamage[3] = 310f;
            ability.DataDamage[4] = 325f;
            return ability;
        }

        protected virtual MountainKingThunderClap LoadMountainKingThunderClap(ObjectDatabaseBase db)
        {
            var ability = new MountainKingThunderClap(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 3f;
            ability.StatsDurationHero[4] = 3f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 7f;
            ability.StatsCooldown[3] = 7f;
            ability.StatsCooldown[4] = 7f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 90;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 325f;
            ability.StatsAreaOfEffect[3] = 350f;
            ability.StatsAreaOfEffect[4] = 400f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHtc";
            ability.StatsBuffsRaw[2] = "BHtc";
            ability.StatsBuffsRaw[3] = "BHtc";
            ability.StatsBuffsRaw[4] = "BHtc";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAOEDamage[1] = 60f;
            ability.DataAOEDamage[2] = 110f;
            ability.DataAOEDamage[3] = 150f;
            ability.DataAOEDamage[4] = 175f;
            ability.DataSpecificTargetDamage[1] = 0f;
            ability.DataSpecificTargetDamage[2] = 0f;
            ability.DataSpecificTargetDamage[3] = 0f;
            ability.DataSpecificTargetDamage[4] = 0f;
            ability.DataMovementSpeedReduction[1] = 0.5f;
            ability.DataMovementSpeedReduction[2] = 0.5f;
            ability.DataMovementSpeedReduction[3] = 0.5f;
            ability.DataMovementSpeedReduction[4] = 0.5f;
            ability.DataAttackSpeedReduction[1] = 0.5f;
            ability.DataAttackSpeedReduction[2] = 0.5f;
            ability.DataAttackSpeedReduction[3] = 0.5f;
            ability.DataAttackSpeedReduction[4] = 0.5f;
            ability.DataMaximumDamage[1] = 0f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 1400f;
            return ability;
        }

        protected virtual SeaWitchForkedLightning LoadSeaWitchForkedLightning(ObjectDatabaseBase db)
        {
            var ability = new SeaWitchForkedLightning(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.7f;
            ability.StatsDurationNormal[2] = 0.7f;
            ability.StatsDurationNormal[3] = 0.7f;
            ability.StatsDurationNormal[4] = 0.7f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 11f;
            ability.StatsCooldown[2] = 11f;
            ability.StatsCooldown[3] = 11f;
            ability.StatsCooldown[4] = 11f;
            ability.StatsManaCost[1] = 110;
            ability.StatsManaCost[2] = 110;
            ability.StatsManaCost[3] = 110;
            ability.StatsManaCost[4] = 110;
            ability.StatsAreaOfEffect[1] = 125f;
            ability.StatsAreaOfEffect[2] = 125f;
            ability.StatsAreaOfEffect[3] = 125f;
            ability.StatsAreaOfEffect[4] = 125f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 600f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDistance[1] = 900f;
            ability.DataDistance[2] = 900f;
            ability.DataDistance[3] = 900f;
            ability.DataDistance[4] = 900f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 300f;
            ability.DataFinalArea[3] = 300f;
            ability.DataFinalArea[4] = 300f;
            ability.DataDamagePerTarget[1] = 85f;
            ability.DataDamagePerTarget[2] = 160f;
            ability.DataDamagePerTarget[3] = 250f;
            ability.DataDamagePerTarget[4] = 250f;
            ability.DataNumberOfTargetsHit[1] = 3;
            ability.DataNumberOfTargetsHit[2] = 3;
            ability.DataNumberOfTargetsHit[3] = 3;
            ability.DataNumberOfTargetsHit[4] = 3;
            return ability;
        }

        protected virtual SeaWitchFrostArrows LoadSeaWitchFrostArrows(ObjectDatabaseBase db)
        {
            var ability = new SeaWitchFrostArrows(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 1.5f;
            ability.StatsDurationHero[2] = 1.5f;
            ability.StatsDurationHero[3] = 1.5f;
            ability.StatsDurationHero[4] = 1.5f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 10;
            ability.StatsManaCost[2] = 10;
            ability.StatsManaCost[3] = 10;
            ability.StatsManaCost[4] = 7;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 600f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = "BHca,Bcsd";
            ability.StatsBuffsRaw[2] = "BHca,Bcsd";
            ability.StatsBuffsRaw[3] = "BHca,Bcsd";
            ability.StatsBuffsRaw[4] = "BHca,Bcsd,Bcsi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExtraDamage[1] = 5f;
            ability.DataExtraDamage[2] = 10f;
            ability.DataExtraDamage[3] = 15f;
            ability.DataExtraDamage[4] = 15f;
            ability.DataMovementSpeedFactor[1] = 0.3f;
            ability.DataMovementSpeedFactor[2] = 0.5f;
            ability.DataMovementSpeedFactor[3] = 0.7f;
            ability.DataMovementSpeedFactor[4] = 0.7f;
            ability.DataAttackSpeedFactor[1] = 0.3f;
            ability.DataAttackSpeedFactor[2] = 0.5f;
            ability.DataAttackSpeedFactor[3] = 0.7f;
            ability.DataAttackSpeedFactor[4] = 0.7f;
            ability.DataStackFlagsRaw[1] = 7;
            ability.DataStackFlagsRaw[2] = 7;
            ability.DataStackFlagsRaw[3] = 7;
            ability.DataStackFlagsRaw[4] = 7;
            return ability;
        }

        protected virtual SeaWitchTornado LoadSeaWitchTornado(ObjectDatabaseBase db)
        {
            var ability = new SeaWitchTornado(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BNto";
            ability.StatsBuffsRaw[2] = "BNto";
            ability.StatsBuffsRaw[3] = "BNto";
            ability.StatsBuffsRaw[4] = "BNto";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "ntor";
            ability.DataSummonedUnitTypeRaw[2] = "ntor";
            ability.DataSummonedUnitTypeRaw[3] = "ntor";
            ability.DataSummonedUnitTypeRaw[4] = "ntor";
            return ability;
        }

        protected virtual SeaWitchManaShield LoadSeaWitchManaShield(ObjectDatabaseBase db)
        {
            var ability = new SeaWitchManaShield(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "self";
            ability.StatsTargetsAllowedRaw[2] = "self";
            ability.StatsTargetsAllowedRaw[3] = "self";
            ability.StatsTargetsAllowedRaw[4] = "self";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 128f;
            ability.StatsCastRange[2] = 128f;
            ability.StatsCastRange[3] = 128f;
            ability.StatsCastRange[4] = 128f;
            ability.StatsBuffsRaw[1] = "BNms";
            ability.StatsBuffsRaw[2] = "BNms";
            ability.StatsBuffsRaw[3] = "BNms";
            ability.StatsBuffsRaw[4] = "BNms";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPerHitPoint[1] = 2f;
            ability.DataManaPerHitPoint[2] = 3f;
            ability.DataManaPerHitPoint[3] = 4f;
            ability.DataManaPerHitPoint[4] = 4f;
            ability.DataDamageAbsorbed[1] = 1f;
            ability.DataDamageAbsorbed[2] = 1f;
            ability.DataDamageAbsorbed[3] = 1f;
            ability.DataDamageAbsorbed[4] = 1f;
            return ability;
        }

        protected virtual PaladinDevotionAura LoadPaladinDevotionAura(ObjectDatabaseBase db)
        {
            var ability = new PaladinDevotionAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 2f;
            ability.StatsDurationHero[3] = 2f;
            ability.StatsDurationHero[4] = 2f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHad";
            ability.StatsBuffsRaw[2] = "BHad";
            ability.StatsBuffsRaw[3] = "BHad";
            ability.StatsBuffsRaw[4] = "BHad";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorBonus[1] = 2f;
            ability.DataArmorBonus[2] = 3.5f;
            ability.DataArmorBonus[3] = 5f;
            ability.DataArmorBonus[4] = 4.5f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual PaladinDivineShield LoadPaladinDivineShield(ObjectDatabaseBase db)
        {
            var ability = new PaladinDivineShield(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "invu,vuln";
            ability.StatsTargetsAllowedRaw[3] = "invu,vuln";
            ability.StatsTargetsAllowedRaw[4] = "invu,vuln";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 25f;
            ability.StatsDurationNormal[3] = 35f;
            ability.StatsDurationNormal[4] = 45f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 25f;
            ability.StatsDurationHero[3] = 35f;
            ability.StatsDurationHero[4] = 45f;
            ability.StatsCooldown[1] = 35f;
            ability.StatsCooldown[2] = 50f;
            ability.StatsCooldown[3] = 65f;
            ability.StatsCooldown[4] = 65f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHds";
            ability.StatsBuffsRaw[2] = "BHds";
            ability.StatsBuffsRaw[3] = "BHds";
            ability.StatsBuffsRaw[4] = "BHds";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCanDeactivateRaw[1] = 0;
            ability.DataCanDeactivateRaw[2] = 0;
            ability.DataCanDeactivateRaw[3] = 0;
            ability.DataCanDeactivateRaw[4] = 0;
            return ability;
        }

        protected virtual PaladinHolyLight LoadPaladinHolyLight(ObjectDatabaseBase db)
        {
            var ability = new PaladinHolyLight(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 5f;
            ability.StatsCooldown[3] = 5f;
            ability.StatsCooldown[4] = 5f;
            ability.StatsManaCost[1] = 65;
            ability.StatsManaCost[2] = 65;
            ability.StatsManaCost[3] = 65;
            ability.StatsManaCost[4] = 65;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountHealedDamaged[1] = 200f;
            ability.DataAmountHealedDamaged[2] = 400f;
            ability.DataAmountHealedDamaged[3] = 600f;
            ability.DataAmountHealedDamaged[4] = 600f;
            return ability;
        }

        protected virtual PaladinResurrection LoadPaladinResurrection(ObjectDatabaseBase db)
        {
            var ability = new PaladinResurrection(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,dead,friend";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 240f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 400f;
            ability.StatsCastRange[3] = 400f;
            ability.StatsCastRange[4] = 400f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfCorpsesRaised[1] = 6;
            ability.DataNumberOfCorpsesRaised[2] = 6;
            ability.DataNumberOfCorpsesRaised[3] = 6;
            ability.DataNumberOfCorpsesRaised[4] = 6;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            return ability;
        }

        protected virtual BrewmasterBreathOfFire LoadBrewmasterBreathOfFire(ObjectDatabaseBase db)
        {
            var ability = new BrewmasterBreathOfFire(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[2] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[3] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[4] = "ground,air,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 5f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 125f;
            ability.StatsAreaOfEffect[2] = 125f;
            ability.StatsAreaOfEffect[3] = 125f;
            ability.StatsAreaOfEffect[4] = 125f;
            ability.StatsCastRange[1] = 375f;
            ability.StatsCastRange[2] = 375f;
            ability.StatsCastRange[3] = 375f;
            ability.StatsCastRange[4] = 375f;
            ability.StatsBuffsRaw[1] = "BNbf";
            ability.StatsBuffsRaw[2] = "BNbf";
            ability.StatsBuffsRaw[3] = "BNbf";
            ability.StatsBuffsRaw[4] = "BNbf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 65f;
            ability.DataDamage[2] = 125f;
            ability.DataDamage[3] = 170f;
            ability.DataDamage[4] = 170f;
            ability.DataMaxDamage[1] = 480f;
            ability.DataMaxDamage[2] = 800f;
            ability.DataMaxDamage[3] = 1200f;
            ability.DataMaxDamage[4] = 1360f;
            ability.DataDistance[1] = 375f;
            ability.DataDistance[2] = 375f;
            ability.DataDistance[3] = 375f;
            ability.DataDistance[4] = 375f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 300f;
            ability.DataFinalArea[3] = 300f;
            ability.DataFinalArea[4] = 300f;
            ability.DataDamagePerSecond[1] = 7f;
            ability.DataDamagePerSecond[2] = 14f;
            ability.DataDamagePerSecond[3] = 21f;
            ability.DataDamagePerSecond[4] = 21f;
            return ability;
        }

        protected virtual BrewmasterDrunkenBrawler LoadBrewmasterDrunkenBrawler(ObjectDatabaseBase db)
        {
            var ability = new BrewmasterDrunkenBrawler(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToCriticalStrike[1] = 10f;
            ability.DataChanceToCriticalStrike[2] = 10f;
            ability.DataChanceToCriticalStrike[3] = 10f;
            ability.DataChanceToCriticalStrike[4] = 10f;
            ability.DataDamageMultiplier[1] = 2f;
            ability.DataDamageMultiplier[2] = 3f;
            ability.DataDamageMultiplier[3] = 4f;
            ability.DataDamageMultiplier[4] = 5f;
            ability.DataDamageBonus[1] = 0f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataChanceToEvade[1] = 0.07f;
            ability.DataChanceToEvade[2] = 0.14f;
            ability.DataChanceToEvade[3] = 0.21f;
            ability.DataChanceToEvade[4] = 0.2f;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            ability.DataExcludeItemDamageRaw[1] = 0;
            ability.DataExcludeItemDamageRaw[2] = 0;
            ability.DataExcludeItemDamageRaw[3] = 0;
            ability.DataExcludeItemDamageRaw[4] = 0;
            return ability;
        }

        protected virtual BrewmasterDrunkenHaze LoadBrewmasterDrunkenHaze(ObjectDatabaseBase db)
        {
            var ability = new BrewmasterDrunkenHaze(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 12f;
            ability.StatsDurationNormal[3] = 12f;
            ability.StatsDurationNormal[4] = 12f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 5f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 12f;
            ability.StatsCooldown[3] = 12f;
            ability.StatsCooldown[4] = 12f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 550f;
            ability.StatsCastRange[2] = 550f;
            ability.StatsCastRange[3] = 550f;
            ability.StatsCastRange[4] = 550f;
            ability.StatsBuffsRaw[1] = "BNdh";
            ability.StatsBuffsRaw[2] = "BNdh";
            ability.StatsBuffsRaw[3] = "BNdh";
            ability.StatsBuffsRaw[4] = "BNdh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 0;
            ability.DataAttacksPreventedRaw[2] = 0;
            ability.DataAttacksPreventedRaw[3] = 0;
            ability.DataAttacksPreventedRaw[4] = 0;
            ability.DataChanceToMiss[1] = 0.45f;
            ability.DataChanceToMiss[2] = 0.65f;
            ability.DataChanceToMiss[3] = 0.8f;
            ability.DataChanceToMiss[4] = 0.8f;
            ability.DataMovementSpeedModifier[1] = 0.15f;
            ability.DataMovementSpeedModifier[2] = 0.3f;
            ability.DataMovementSpeedModifier[3] = 0.5f;
            ability.DataMovementSpeedModifier[4] = 0.5f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual BrewmasterStormEarthAndFire LoadBrewmasterStormEarthAndFire(ObjectDatabaseBase db)
        {
            var ability = new BrewmasterStormEarthAndFire(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 45f;
            ability.StatsDurationNormal[3] = 45f;
            ability.StatsDurationNormal[4] = 45f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 45f;
            ability.StatsDurationHero[3] = 45f;
            ability.StatsDurationHero[4] = 45f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 128f;
            ability.StatsAreaOfEffect[2] = 128f;
            ability.StatsAreaOfEffect[3] = 128f;
            ability.StatsAreaOfEffect[4] = 128f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNef";
            ability.StatsBuffsRaw[2] = "BNef";
            ability.StatsBuffsRaw[3] = "BNef";
            ability.StatsBuffsRaw[4] = "BNef";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypesRaw[1] = "npn1,npn2,npn3";
            ability.DataSummonedUnitTypesRaw[2] = "npn1,npn2,npn3";
            ability.DataSummonedUnitTypesRaw[3] = "npn1,npn2,npn3";
            ability.DataSummonedUnitTypesRaw[4] = "npn1,npn2,npn3";
            return ability;
        }

        protected virtual PitLordDoom LoadPitLordDoom(ObjectDatabaseBase db)
        {
            var ability = new PitLordDoom(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonhero,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonhero,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonhero,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 650f;
            ability.StatsCastRange[2] = 400f;
            ability.StatsCastRange[3] = 400f;
            ability.StatsCastRange[4] = 400f;
            ability.StatsBuffsRaw[1] = "BNdo,BNdi";
            ability.StatsBuffsRaw[2] = "BNdo,BNdi";
            ability.StatsBuffsRaw[3] = "BNdo,BNdi";
            ability.StatsBuffsRaw[4] = "BNdo,BNdi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 40f;
            ability.DataDamagePerSecond[2] = 5f;
            ability.DataDamagePerSecond[3] = 5f;
            ability.DataDamagePerSecond[4] = 5f;
            ability.DataNumberOfSummonedUnits[1] = 1;
            ability.DataNumberOfSummonedUnits[2] = 1;
            ability.DataNumberOfSummonedUnits[3] = 1;
            ability.DataNumberOfSummonedUnits[4] = 1;
            ability.DataSummonedUnitDurationseconds[1] = 120f;
            ability.DataSummonedUnitDurationseconds[2] = 80f;
            ability.DataSummonedUnitDurationseconds[3] = 80f;
            ability.DataSummonedUnitDurationseconds[4] = 80f;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataMovementSpeedFactor[1] = 0.5f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataSummonedUnitTypeRaw[1] = "nba2";
            ability.DataSummonedUnitTypeRaw[2] = "nba2";
            ability.DataSummonedUnitTypeRaw[3] = "nba2";
            ability.DataSummonedUnitTypeRaw[4] = "nba2";
            return ability;
        }

        protected virtual PitLordHowlOfTerror LoadPitLordHowlOfTerror(ObjectDatabaseBase db)
        {
            var ability = new PitLordHowlOfTerror(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 15f;
            ability.StatsDurationNormal[3] = 15f;
            ability.StatsDurationNormal[4] = 15f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 15f;
            ability.StatsDurationHero[3] = 15f;
            ability.StatsDurationHero[4] = 15f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 12f;
            ability.StatsCooldown[3] = 12f;
            ability.StatsCooldown[4] = 12f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 500f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNht";
            ability.StatsBuffsRaw[2] = "BNht";
            ability.StatsBuffsRaw[3] = "BNht";
            ability.StatsBuffsRaw[4] = "BNht";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.3f;
            ability.DataDamageIncrease[2] = 0.4f;
            ability.DataDamageIncrease[3] = 0.5f;
            ability.DataDamageIncrease[4] = 0.45f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual PitLordCleavingAttack LoadPitLordCleavingAttack(ObjectDatabaseBase db)
        {
            var ability = new PitLordCleavingAttack(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDistributedDamageFactor[1] = 0.4f;
            ability.DataDistributedDamageFactor[2] = 0.65f;
            ability.DataDistributedDamageFactor[3] = 0.9f;
            ability.DataDistributedDamageFactor[4] = 0.8f;
            return ability;
        }

        protected virtual PitLordRainOfFire LoadPitLordRainOfFire(ObjectDatabaseBase db)
        {
            var ability = new PitLordRainOfFire(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 1f;
            ability.StatsCastingTime[3] = 1f;
            ability.StatsCastingTime[4] = 1f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 3f;
            ability.StatsDurationNormal[3] = 3f;
            ability.StatsDurationNormal[4] = 3f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 3f;
            ability.StatsDurationHero[4] = 3f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 85;
            ability.StatsManaCost[2] = 85;
            ability.StatsManaCost[3] = 85;
            ability.StatsManaCost[4] = 85;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNrd,BNrf";
            ability.StatsBuffsRaw[2] = "BNrd,BNrf";
            ability.StatsBuffsRaw[3] = "BNrd,BNrf";
            ability.StatsBuffsRaw[4] = "BNrd,BNrf";
            ability.StatsEffectsRaw[1] = "XErf";
            ability.StatsEffectsRaw[2] = "XErf";
            ability.StatsEffectsRaw[3] = "XErf";
            ability.StatsEffectsRaw[4] = "XErf";
            ability.DataNumberOfWaves[1] = 6;
            ability.DataNumberOfWaves[2] = 8;
            ability.DataNumberOfWaves[3] = 10;
            ability.DataNumberOfWaves[4] = 10;
            ability.DataDamage[1] = 25f;
            ability.DataDamage[2] = 30f;
            ability.DataDamage[3] = 35f;
            ability.DataDamage[4] = 35f;
            ability.DataNumberOfShards[1] = 6;
            ability.DataNumberOfShards[2] = 7;
            ability.DataNumberOfShards[3] = 10;
            ability.DataNumberOfShards[4] = 10;
            ability.DataBuildingReduction[1] = 0.5f;
            ability.DataBuildingReduction[2] = 0.5f;
            ability.DataBuildingReduction[3] = 0.5f;
            ability.DataBuildingReduction[4] = 0.5f;
            ability.DataDamagePerSecond[1] = 5f;
            ability.DataDamagePerSecond[2] = 10f;
            ability.DataDamagePerSecond[3] = 15f;
            ability.DataDamagePerSecond[4] = 15f;
            ability.DataMaximumDamagePerWave[1] = 125f;
            ability.DataMaximumDamagePerWave[2] = 150f;
            ability.DataMaximumDamagePerWave[3] = 175f;
            ability.DataMaximumDamagePerWave[4] = 0f;
            return ability;
        }

        protected virtual PriestessSearingArrows LoadPriestessSearingArrows(ObjectDatabaseBase db)
        {
            var ability = new PriestessSearingArrows(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 8;
            ability.StatsManaCost[2] = 8;
            ability.StatsManaCost[3] = 8;
            ability.StatsManaCost[4] = 8;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 10f;
            ability.DataDamageBonus[2] = 20f;
            ability.DataDamageBonus[3] = 30f;
            ability.DataDamageBonus[4] = 30f;
            return ability;
        }

        protected virtual PriestessScout LoadPriestessScout(ObjectDatabaseBase db)
        {
            var ability = new PriestessScout(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 90f;
            ability.StatsDurationNormal[3] = 120f;
            ability.StatsDurationNormal[4] = 120f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 90f;
            ability.StatsDurationHero[3] = 120f;
            ability.StatsDurationHero[4] = 120f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEst";
            ability.StatsBuffsRaw[2] = "BEst";
            ability.StatsBuffsRaw[3] = "BEst";
            ability.StatsBuffsRaw[4] = "BEst";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nowl";
            ability.DataSummonedUnitTypeRaw[2] = "now2";
            ability.DataSummonedUnitTypeRaw[3] = "now3";
            ability.DataSummonedUnitTypeRaw[4] = "now3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual PriestessStarfall LoadPriestessStarfall(ObjectDatabaseBase db)
        {
            var ability = new PriestessStarfall(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 200;
            ability.StatsManaCost[2] = 300;
            ability.StatsManaCost[3] = 300;
            ability.StatsManaCost[4] = 300;
            ability.StatsAreaOfEffect[1] = 1000f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "AEsd";
            ability.StatsBuffsRaw[2] = "AEsd";
            ability.StatsBuffsRaw[3] = "AEsd";
            ability.StatsBuffsRaw[4] = "AEsd";
            ability.StatsEffectsRaw[1] = "XEsf";
            ability.StatsEffectsRaw[2] = "XEsf";
            ability.StatsEffectsRaw[3] = "XEsf";
            ability.StatsEffectsRaw[4] = "XEsf";
            ability.DataDamageDealt[1] = 50f;
            ability.DataDamageDealt[2] = 30f;
            ability.DataDamageDealt[3] = 30f;
            ability.DataDamageDealt[4] = 30f;
            ability.DataDamageInterval[1] = 1.5f;
            ability.DataDamageInterval[2] = 2f;
            ability.DataDamageInterval[3] = 2f;
            ability.DataDamageInterval[4] = 2f;
            ability.DataBuildingReduction[1] = 0.35f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            return ability;
        }

        protected virtual PriestessTrueshotAura LoadPriestessTrueshotAura(ObjectDatabaseBase db)
        {
            var ability = new PriestessTrueshotAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEar";
            ability.StatsBuffsRaw[2] = "BEar";
            ability.StatsBuffsRaw[3] = "BEar";
            ability.StatsBuffsRaw[4] = "BEar";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 0.1f;
            ability.DataDamageBonus[2] = 0.2f;
            ability.DataDamageBonus[3] = 0.3f;
            ability.DataDamageBonus[4] = 0.3f;
            ability.DataMeleeBonusRaw[1] = 0;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 1;
            ability.DataRangedBonusRaw[3] = 1;
            ability.DataRangedBonusRaw[4] = 1;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ChieftainEnduranceAura LoadChieftainEnduranceAura(ObjectDatabaseBase db)
        {
            var ability = new ChieftainEnduranceAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOae";
            ability.StatsBuffsRaw[2] = "BOae";
            ability.StatsBuffsRaw[3] = "BOae";
            ability.StatsBuffsRaw[4] = "BOae";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.1f;
            ability.DataMovementSpeedIncrease[2] = 0.2f;
            ability.DataMovementSpeedIncrease[3] = 0.3f;
            ability.DataMovementSpeedIncrease[4] = 0.3f;
            ability.DataAttackSpeedIncrease[1] = 0.05f;
            ability.DataAttackSpeedIncrease[2] = 0.1f;
            ability.DataAttackSpeedIncrease[3] = 0.15f;
            ability.DataAttackSpeedIncrease[4] = 0.15f;
            return ability;
        }

        protected virtual ChieftainReincarnation LoadChieftainReincarnation(ObjectDatabaseBase db)
        {
            var ability = new ChieftainReincarnation(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 240f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = "XOre";
            ability.StatsEffectsRaw[3] = "XOre";
            ability.StatsEffectsRaw[4] = "XOre";
            ability.DataReincarnationDelay[1] = 5f;
            ability.DataReincarnationDelay[2] = 5f;
            ability.DataReincarnationDelay[3] = 5f;
            ability.DataReincarnationDelay[4] = 5f;
            return ability;
        }

        protected virtual ChieftainShockWave LoadChieftainShockWave(ObjectDatabaseBase db)
        {
            var ability = new ChieftainShockWave(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 125f;
            ability.StatsAreaOfEffect[2] = 125f;
            ability.StatsAreaOfEffect[3] = 125f;
            ability.StatsAreaOfEffect[4] = 125f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BOsh";
            ability.StatsBuffsRaw[2] = "BOsh";
            ability.StatsBuffsRaw[3] = "BOsh";
            ability.StatsBuffsRaw[4] = "BOsh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 75f;
            ability.DataDamage[2] = 130f;
            ability.DataDamage[3] = 200f;
            ability.DataDamage[4] = 200f;
            ability.DataMaximumDamage[1] = 900f;
            ability.DataMaximumDamage[2] = 1560f;
            ability.DataMaximumDamage[3] = 2400f;
            ability.DataMaximumDamage[4] = 2400f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 800f;
            ability.DataDistance[3] = 800f;
            ability.DataDistance[4] = 800f;
            ability.DataFinalArea[1] = 125f;
            ability.DataFinalArea[2] = 125f;
            ability.DataFinalArea[3] = 125f;
            ability.DataFinalArea[4] = 125f;
            return ability;
        }

        protected virtual ChieftainWarStomp LoadChieftainWarStomp(ObjectDatabaseBase db)
        {
            var ability = new ChieftainWarStomp(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 2.5f;
            ability.StatsDurationHero[3] = 3f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 7f;
            ability.StatsCooldown[3] = 7f;
            ability.StatsCooldown[4] = 7f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 90;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 300f;
            ability.StatsAreaOfEffect[3] = 350f;
            ability.StatsAreaOfEffect[4] = 350f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = "BPSE";
            ability.StatsBuffsRaw[3] = "BPSE";
            ability.StatsBuffsRaw[4] = "BPSE";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 30f;
            ability.DataDamage[2] = 60f;
            ability.DataDamage[3] = 90f;
            ability.DataDamage[4] = 90f;
            return ability;
        }

        protected virtual ShadowHunterHealingWave LoadShadowHunterHealingWave(ObjectDatabaseBase db)
        {
            var ability = new ShadowHunterHealingWave(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 90;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 500f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 130f;
            ability.DataDamagePerTarget[2] = 215f;
            ability.DataDamagePerTarget[3] = 300f;
            ability.DataDamagePerTarget[4] = 300f;
            ability.DataNumberOfTargetsHit[1] = 3;
            ability.DataNumberOfTargetsHit[2] = 4;
            ability.DataNumberOfTargetsHit[3] = 5;
            ability.DataNumberOfTargetsHit[4] = 5;
            ability.DataDamageReductionPerTarget[1] = 0.25f;
            ability.DataDamageReductionPerTarget[2] = 0.25f;
            ability.DataDamageReductionPerTarget[3] = 0.25f;
            ability.DataDamageReductionPerTarget[4] = 0.25f;
            return ability;
        }

        protected virtual ShadowHunterHex LoadShadowHunterHex(ObjectDatabaseBase db)
        {
            var ability = new ShadowHunterHex(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 45f;
            ability.StatsDurationNormal[4] = 45f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 7f;
            ability.StatsCooldown[3] = 7f;
            ability.StatsCooldown[4] = 7f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOhx";
            ability.StatsBuffsRaw[2] = "BOhx";
            ability.StatsBuffsRaw[3] = "BOhx";
            ability.StatsBuffsRaw[4] = "BOhx";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 99;
            ability.DataMaximumCreepLevel[2] = 99;
            ability.DataMaximumCreepLevel[3] = 99;
            ability.DataMaximumCreepLevel[4] = 99;
            ability.DataMorphUnitsGroundRaw[1] = "npig,nsea,ncrb,nhmc,nrat,nfro,nech,necr,nrac";
            ability.DataMorphUnitsGroundRaw[2] = "npig,nsea,ncrb,nhmc,nrat,nfro,nech,necr,nrac";
            ability.DataMorphUnitsGroundRaw[3] = "npig,nsea,ncrb,nhmc,nrat,nfro,nech,necr,nrac";
            ability.DataMorphUnitsGroundRaw[4] = "npig,nsea,ncrb,nhmc,nrat,nfro,nech,necr,nrac";
            ability.DataMorphUnitsAirRaw[1] = "nalb,nvul,nsno";
            ability.DataMorphUnitsAirRaw[2] = "nalb,nvul,nsno";
            ability.DataMorphUnitsAirRaw[3] = "nalb,nvul,nsno";
            ability.DataMorphUnitsAirRaw[4] = "nalb,nvul,nsno";
            ability.DataMorphUnitsAmphibiousRaw[1] = "nsha,npng";
            ability.DataMorphUnitsAmphibiousRaw[2] = "nsha,npng";
            ability.DataMorphUnitsAmphibiousRaw[3] = "nsha,npng";
            ability.DataMorphUnitsAmphibiousRaw[4] = "nsha,npng";
            ability.DataMorphUnitsWaterRaw[1] = "nshw,npnw";
            ability.DataMorphUnitsWaterRaw[2] = "nshw,npnw";
            ability.DataMorphUnitsWaterRaw[3] = "nshw,npnw";
            ability.DataMorphUnitsWaterRaw[4] = "nshw,npnw";
            return ability;
        }

        protected virtual ShadowHunterSerpentWard LoadShadowHunterSerpentWard(ObjectDatabaseBase db)
        {
            var ability = new ShadowHunterSerpentWard(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 6.5f;
            ability.StatsCooldown[2] = 6.5f;
            ability.StatsCooldown[3] = 6.5f;
            ability.StatsCooldown[4] = 6.5f;
            ability.StatsManaCost[1] = 30;
            ability.StatsManaCost[2] = 30;
            ability.StatsManaCost[3] = 30;
            ability.StatsManaCost[4] = 30;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BOwd";
            ability.StatsBuffsRaw[2] = "BOwd";
            ability.StatsBuffsRaw[3] = "BOwd";
            ability.StatsBuffsRaw[4] = "BOwd";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "osp1";
            ability.DataSummonedUnitTypeRaw[2] = "osp2";
            ability.DataSummonedUnitTypeRaw[3] = "osp3";
            ability.DataSummonedUnitTypeRaw[4] = "osp3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            return ability;
        }

        protected virtual ShadowHunterVoodooo LoadShadowHunterVoodooo(ObjectDatabaseBase db)
        {
            var ability = new ShadowHunterVoodooo(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 800f;
            ability.StatsAreaOfEffect[3] = 800f;
            ability.StatsAreaOfEffect[4] = 800f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOvd,BOvc";
            ability.StatsBuffsRaw[2] = "BOvd,BOvc";
            ability.StatsBuffsRaw[3] = "BOvd,BOvc";
            ability.StatsBuffsRaw[4] = "BOvd,BOvc";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual WardenBlink LoadWardenBlink(ObjectDatabaseBase db)
        {
            var ability = new WardenBlink(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.33f;
            ability.StatsDurationNormal[2] = 0.33f;
            ability.StatsDurationNormal[3] = 0.33f;
            ability.StatsDurationNormal[4] = 0.33f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 7f;
            ability.StatsCooldown[3] = 4f;
            ability.StatsCooldown[4] = 4f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 10;
            ability.StatsManaCost[3] = 10;
            ability.StatsManaCost[4] = 10;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 99999f;
            ability.StatsCastRange[3] = 99999f;
            ability.StatsCastRange[4] = 99999f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumRange[1] = 1000f;
            ability.DataMaximumRange[2] = 1075f;
            ability.DataMaximumRange[3] = 1150f;
            ability.DataMaximumRange[4] = 1150f;
            ability.DataMinimumRange[1] = 200f;
            ability.DataMinimumRange[2] = 200f;
            ability.DataMinimumRange[3] = 200f;
            ability.DataMinimumRange[4] = 200f;
            return ability;
        }

        protected virtual WardenFanOfKnives LoadWardenFanOfKnives(ObjectDatabaseBase db)
        {
            var ability = new WardenFanOfKnives(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 400f;
            ability.StatsAreaOfEffect[2] = 450f;
            ability.StatsAreaOfEffect[3] = 475f;
            ability.StatsAreaOfEffect[4] = 475f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 75f;
            ability.DataDamagePerTarget[2] = 125f;
            ability.DataDamagePerTarget[3] = 190f;
            ability.DataDamagePerTarget[4] = 180f;
            ability.DataMaximumTotalDamage[1] = 300f;
            ability.DataMaximumTotalDamage[2] = 625f;
            ability.DataMaximumTotalDamage[3] = 950f;
            ability.DataMaximumTotalDamage[4] = 950f;
            ability.DataMaximumNumberOfTargets[1] = 0;
            ability.DataMaximumNumberOfTargets[2] = 0;
            ability.DataMaximumNumberOfTargets[3] = 0;
            ability.DataMaximumNumberOfTargets[4] = 0;
            ability.DataMaximumSpeedAdjustment[1] = 100f;
            ability.DataMaximumSpeedAdjustment[2] = 100f;
            ability.DataMaximumSpeedAdjustment[3] = 100f;
            ability.DataMaximumSpeedAdjustment[4] = 100f;
            return ability;
        }

        protected virtual WardenShadowStrike LoadWardenShadowStrike(ObjectDatabaseBase db)
        {
            var ability = new WardenShadowStrike(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,air,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,air,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,air,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 3f;
            ability.StatsCastingTime[3] = 3f;
            ability.StatsCastingTime[4] = 3f;
            ability.StatsDurationNormal[1] = 15.1f;
            ability.StatsDurationNormal[2] = 15.1f;
            ability.StatsDurationNormal[3] = 15.1f;
            ability.StatsDurationNormal[4] = 15.1f;
            ability.StatsDurationHero[1] = 15.1f;
            ability.StatsDurationHero[2] = 15.1f;
            ability.StatsDurationHero[3] = 15.1f;
            ability.StatsDurationHero[4] = 15.1f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 65;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 300f;
            ability.StatsCastRange[2] = 300f;
            ability.StatsCastRange[3] = 300f;
            ability.StatsCastRange[4] = 300f;
            ability.StatsBuffsRaw[1] = "BEsh";
            ability.StatsBuffsRaw[2] = "BEsh";
            ability.StatsBuffsRaw[3] = "BEsh";
            ability.StatsBuffsRaw[4] = "BEsh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDecayingDamage[1] = 10f;
            ability.DataDecayingDamage[2] = 30f;
            ability.DataDecayingDamage[3] = 45f;
            ability.DataDecayingDamage[4] = 45f;
            ability.DataMovementSpeedFactor[1] = 0.5f;
            ability.DataMovementSpeedFactor[2] = 0.5f;
            ability.DataMovementSpeedFactor[3] = 0.5f;
            ability.DataMovementSpeedFactor[4] = 0.5f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataDecayPower[1] = 3f;
            ability.DataDecayPower[2] = 3f;
            ability.DataDecayPower[3] = 3f;
            ability.DataDecayPower[4] = 3f;
            ability.DataInitialDamage[1] = 75f;
            ability.DataInitialDamage[2] = 150f;
            ability.DataInitialDamage[3] = 225f;
            ability.DataInitialDamage[4] = 225f;
            return ability;
        }

        protected virtual WardenSpiritOfVengeance LoadWardenSpiritOfVengeance(ObjectDatabaseBase db)
        {
            var ability = new WardenSpiritOfVengeance(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEsv";
            ability.StatsBuffsRaw[2] = "BEsv";
            ability.StatsBuffsRaw[3] = "BEsv";
            ability.StatsBuffsRaw[4] = "BEsv";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 1;
            ability.DataNumberOfSummonedUnits[2] = 1;
            ability.DataNumberOfSummonedUnits[3] = 1;
            ability.DataNumberOfSummonedUnits[4] = 1;
            ability.DataSummonedUnitTypeRaw[1] = "espv";
            ability.DataSummonedUnitTypeRaw[2] = "espv";
            ability.DataSummonedUnitTypeRaw[3] = "espv";
            ability.DataSummonedUnitTypeRaw[4] = "espv";
            return ability;
        }

        protected virtual AlchemistAcidBomb LoadAlchemistAcidBomb(ObjectDatabaseBase db)
        {
            var ability = new AlchemistAcidBomb(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic,air";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral,organic,air";
            ability.StatsTargetsAllowedRaw[3] = "ground,enemy,neutral,organic,air";
            ability.StatsTargetsAllowedRaw[4] = "ground,enemy,neutral,organic,air";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 15f;
            ability.StatsDurationNormal[3] = 15f;
            ability.StatsDurationNormal[4] = 15f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 15f;
            ability.StatsDurationHero[3] = 15f;
            ability.StatsDurationHero[4] = 15f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 12f;
            ability.StatsCooldown[3] = 12f;
            ability.StatsCooldown[4] = 12f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BNab";
            ability.StatsBuffsRaw[2] = "BNab";
            ability.StatsBuffsRaw[3] = "BNab";
            ability.StatsBuffsRaw[4] = "BNab";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            ability.DataArmorPenalty[1] = 3;
            ability.DataArmorPenalty[2] = 4;
            ability.DataArmorPenalty[3] = 5;
            ability.DataArmorPenalty[4] = 4;
            ability.DataPrimaryDamage[1] = 5f;
            ability.DataPrimaryDamage[2] = 10f;
            ability.DataPrimaryDamage[3] = 17f;
            ability.DataPrimaryDamage[4] = 17f;
            ability.DataSecondaryDamage[1] = 3f;
            ability.DataSecondaryDamage[2] = 6f;
            ability.DataSecondaryDamage[3] = 11f;
            ability.DataSecondaryDamage[4] = 11f;
            ability.DataDamageInterval[1] = 1f;
            ability.DataDamageInterval[2] = 1f;
            ability.DataDamageInterval[3] = 1f;
            ability.DataDamageInterval[4] = 1f;
            return ability;
        }

        protected virtual AlchemistChemicalRage LoadAlchemistChemicalRage(ObjectDatabaseBase db)
        {
            var ability = new AlchemistChemicalRage(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.35f;
            ability.StatsDurationNormal[2] = 0.35f;
            ability.StatsDurationNormal[3] = 0.35f;
            ability.StatsDurationNormal[4] = 0.35f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 15f;
            ability.StatsDurationHero[3] = 15f;
            ability.StatsDurationHero[4] = 15f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNcr";
            ability.StatsBuffsRaw[2] = "BNcr";
            ability.StatsBuffsRaw[3] = "BNcr";
            ability.StatsBuffsRaw[4] = "BNcr";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Nalc";
            ability.DataNormalFormUnitRaw[2] = "Nalc";
            ability.DataNormalFormUnitRaw[3] = "Nalc";
            ability.DataNormalFormUnitRaw[4] = "Nalc";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataMoveSpeedBonusInfoPanelOnly[1] = 0.5f;
            ability.DataMoveSpeedBonusInfoPanelOnly[2] = 0.5f;
            ability.DataMoveSpeedBonusInfoPanelOnly[3] = 0.5f;
            ability.DataMoveSpeedBonusInfoPanelOnly[4] = 0.5f;
            ability.DataAttackSpeedBonusInfoPanelOnly[1] = 0.25f;
            ability.DataAttackSpeedBonusInfoPanelOnly[2] = 0.75f;
            ability.DataAttackSpeedBonusInfoPanelOnly[3] = 1.25f;
            ability.DataAttackSpeedBonusInfoPanelOnly[4] = 1.25f;
            ability.DataAlternateFormUnitRaw[1] = "Nalm";
            ability.DataAlternateFormUnitRaw[2] = "Nal2";
            ability.DataAlternateFormUnitRaw[3] = "Nal3";
            ability.DataAlternateFormUnitRaw[4] = "Nal3";
            return ability;
        }

        protected virtual AlchemistHealingSpray LoadAlchemistHealingSpray(ObjectDatabaseBase db)
        {
            var ability = new AlchemistHealingSpray(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "friend,self,ground,air,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "friend,self,ground,air,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "friend,self,ground,air,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "friend,self,ground,air,organic,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNhs";
            ability.StatsBuffsRaw[2] = "BNhs";
            ability.StatsBuffsRaw[3] = "BNhs";
            ability.StatsBuffsRaw[4] = "BNhs";
            ability.StatsEffectsRaw[1] = "XNhs";
            ability.StatsEffectsRaw[2] = "XNhs";
            ability.StatsEffectsRaw[3] = "XNhs";
            ability.StatsEffectsRaw[4] = "XNhs";
            ability.DataWaveCount[1] = 3;
            ability.DataWaveCount[2] = 4;
            ability.DataWaveCount[3] = 5;
            ability.DataWaveCount[4] = 10;
            ability.DataDamageAmount[1] = 30f;
            ability.DataDamageAmount[2] = 45f;
            ability.DataDamageAmount[3] = 60f;
            ability.DataDamageAmount[4] = 70f;
            ability.DataDamageInterval[1] = 1f;
            ability.DataDamageInterval[2] = 1f;
            ability.DataDamageInterval[3] = 1f;
            ability.DataDamageInterval[4] = 1f;
            ability.DataMissileCount[1] = 6;
            ability.DataMissileCount[2] = 6;
            ability.DataMissileCount[3] = 6;
            ability.DataMissileCount[4] = 6;
            ability.DataMaxDamage[1] = 280f;
            ability.DataMaxDamage[2] = 385f;
            ability.DataMaxDamage[3] = 490f;
            ability.DataMaxDamage[4] = 490f;
            ability.DataBuildingDamageFactor[1] = 1f;
            ability.DataBuildingDamageFactor[2] = 1f;
            ability.DataBuildingDamageFactor[3] = 1f;
            ability.DataBuildingDamageFactor[4] = 1f;
            return ability;
        }

        protected virtual AlchemistTransmute LoadAlchemistTransmute(ObjectDatabaseBase db)
        {
            var ability = new AlchemistTransmute(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 45f;
            ability.StatsCooldown[3] = 45f;
            ability.StatsCooldown[4] = 45f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 200;
            ability.StatsManaCost[3] = 200;
            ability.StatsManaCost[4] = 200;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 650f;
            ability.StatsCastRange[2] = 200f;
            ability.StatsCastRange[3] = 200f;
            ability.StatsCastRange[4] = 200f;
            ability.StatsBuffsRaw[1] = "BNtm";
            ability.StatsBuffsRaw[2] = "BNtm";
            ability.StatsBuffsRaw[3] = "BNtm";
            ability.StatsBuffsRaw[4] = "BNtm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldCostFactor[1] = 1f;
            ability.DataGoldCostFactor[2] = 2f;
            ability.DataGoldCostFactor[3] = 2f;
            ability.DataGoldCostFactor[4] = 2f;
            ability.DataLumberCostFactor[1] = 0f;
            ability.DataLumberCostFactor[2] = 0f;
            ability.DataLumberCostFactor[3] = 0f;
            ability.DataLumberCostFactor[4] = 0f;
            ability.DataMaxCreepLevel[1] = 5;
            ability.DataMaxCreepLevel[2] = 5;
            ability.DataMaxCreepLevel[3] = 5;
            ability.DataMaxCreepLevel[4] = 5;
            ability.DataAllowBountyRaw[1] = 1;
            ability.DataAllowBountyRaw[2] = 1;
            ability.DataAllowBountyRaw[3] = 1;
            ability.DataAllowBountyRaw[4] = 1;
            return ability;
        }

        protected virtual TinkererEngineeringUpgrade LoadTinkererEngineeringUpgrade(ObjectDatabaseBase db)
        {
            var ability = new TinkererEngineeringUpgrade(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNeg";
            ability.StatsBuffsRaw[2] = "BNeg";
            ability.StatsBuffsRaw[3] = "BNeg";
            ability.StatsBuffsRaw[4] = "BNeg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMoveSpeedBonus[1] = 0.1f;
            ability.DataMoveSpeedBonus[2] = 0.2f;
            ability.DataMoveSpeedBonus[3] = 0.3f;
            ability.DataMoveSpeedBonus[4] = 0.3f;
            ability.DataDamageBonus[1] = 2f;
            ability.DataDamageBonus[2] = 4f;
            ability.DataDamageBonus[3] = 6f;
            ability.DataDamageBonus[4] = 9f;
            ability.DataAbilityUpgrade1Raw[1] = "ANsy,ANs1";
            ability.DataAbilityUpgrade1Raw[2] = "ANs1,ANs2";
            ability.DataAbilityUpgrade1Raw[3] = "ANs2,ANs3";
            ability.DataAbilityUpgrade1Raw[4] = "ANs2,ANs3";
            ability.DataAbilityUpgrade2Raw[1] = "ANcs,ANc1";
            ability.DataAbilityUpgrade2Raw[2] = "ANc1,ANc2";
            ability.DataAbilityUpgrade2Raw[3] = "ANc2,ANc3";
            ability.DataAbilityUpgrade2Raw[4] = "ANc2,ANc3";
            ability.DataAbilityUpgrade3Raw[1] = "ANrg,ANg1";
            ability.DataAbilityUpgrade3Raw[2] = "ANg1,ANg2";
            ability.DataAbilityUpgrade3Raw[3] = "ANg2,ANg3";
            ability.DataAbilityUpgrade3Raw[4] = "ANg2,ANg3";
            ability.DataAbilityUpgrade4Raw[1] = "ANde,ANd1";
            ability.DataAbilityUpgrade4Raw[2] = "ANd1,ANd2";
            ability.DataAbilityUpgrade4Raw[3] = "ANd2,ANd3";
            ability.DataAbilityUpgrade4Raw[4] = "ANd2,ANd3";
            return ability;
        }

        protected virtual TinkererClusterRocketsLevel0 LoadTinkererClusterRocketsLevel0(ObjectDatabaseBase db)
        {
            var ability = new TinkererClusterRocketsLevel0(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.01f;
            ability.StatsDurationNormal[2] = 1.01f;
            ability.StatsDurationNormal[3] = 1.01f;
            ability.StatsDurationNormal[4] = 1.01f;
            ability.StatsDurationHero[1] = 1.01f;
            ability.StatsDurationHero[2] = 1.01f;
            ability.StatsDurationHero[3] = 1.01f;
            ability.StatsDurationHero[4] = 1.01f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNcs";
            ability.StatsBuffsRaw[2] = "BNcs";
            ability.StatsBuffsRaw[3] = "BNcs";
            ability.StatsBuffsRaw[4] = "BNcs";
            ability.StatsEffectsRaw[1] = "XNcs";
            ability.StatsEffectsRaw[2] = "XNcs";
            ability.StatsEffectsRaw[3] = "XNcs";
            ability.StatsEffectsRaw[4] = "XNcs";
            ability.DataDamageAmount[1] = 11.25f;
            ability.DataDamageAmount[2] = 19.75f;
            ability.DataDamageAmount[3] = 30.5f;
            ability.DataDamageAmount[4] = 27.5f;
            ability.DataDamageInterval[1] = 0.25f;
            ability.DataDamageInterval[2] = 0.25f;
            ability.DataDamageInterval[3] = 0.25f;
            ability.DataDamageInterval[4] = 0.25f;
            ability.DataMissileCount[1] = 6;
            ability.DataMissileCount[2] = 12;
            ability.DataMissileCount[3] = 18;
            ability.DataMissileCount[4] = 24;
            ability.DataMaxDamage[1] = 105f;
            ability.DataMaxDamage[2] = 195f;
            ability.DataMaxDamage[3] = 300f;
            ability.DataMaxDamage[4] = 300f;
            ability.DataBuildingDamageFactor[1] = 1f;
            ability.DataBuildingDamageFactor[2] = 1f;
            ability.DataBuildingDamageFactor[3] = 1f;
            ability.DataBuildingDamageFactor[4] = 1f;
            ability.DataEffectDuration[1] = 1.01f;
            ability.DataEffectDuration[2] = 1.01f;
            ability.DataEffectDuration[3] = 1.01f;
            ability.DataEffectDuration[4] = 1.01f;
            return ability;
        }

        protected virtual TinkererClusterRocketsLevel1 LoadTinkererClusterRocketsLevel1(ObjectDatabaseBase db)
        {
            var ability = new TinkererClusterRocketsLevel1(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.01f;
            ability.StatsDurationNormal[2] = 1.01f;
            ability.StatsDurationNormal[3] = 1.01f;
            ability.StatsDurationNormal[4] = 1.01f;
            ability.StatsDurationHero[1] = 1.01f;
            ability.StatsDurationHero[2] = 1.01f;
            ability.StatsDurationHero[3] = 1.01f;
            ability.StatsDurationHero[4] = 1.01f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 230f;
            ability.StatsAreaOfEffect[2] = 230f;
            ability.StatsAreaOfEffect[3] = 230f;
            ability.StatsAreaOfEffect[4] = 230f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNcs";
            ability.StatsBuffsRaw[2] = "BNcs";
            ability.StatsBuffsRaw[3] = "BNcs";
            ability.StatsBuffsRaw[4] = "BNcs";
            ability.StatsEffectsRaw[1] = "XNcs";
            ability.StatsEffectsRaw[2] = "XNcs";
            ability.StatsEffectsRaw[3] = "XNcs";
            ability.StatsEffectsRaw[4] = "XNcs";
            ability.DataDamageAmount[1] = 11.25f;
            ability.DataDamageAmount[2] = 19.75f;
            ability.DataDamageAmount[3] = 30.5f;
            ability.DataDamageAmount[4] = 27.5f;
            ability.DataDamageInterval[1] = 0.25f;
            ability.DataDamageInterval[2] = 0.25f;
            ability.DataDamageInterval[3] = 0.25f;
            ability.DataDamageInterval[4] = 0.25f;
            ability.DataMissileCount[1] = 6;
            ability.DataMissileCount[2] = 12;
            ability.DataMissileCount[3] = 18;
            ability.DataMissileCount[4] = 24;
            ability.DataMaxDamage[1] = 105f;
            ability.DataMaxDamage[2] = 195f;
            ability.DataMaxDamage[3] = 300f;
            ability.DataMaxDamage[4] = 300f;
            ability.DataBuildingDamageFactor[1] = 1f;
            ability.DataBuildingDamageFactor[2] = 1f;
            ability.DataBuildingDamageFactor[3] = 1f;
            ability.DataBuildingDamageFactor[4] = 1f;
            ability.DataEffectDuration[1] = 1.01f;
            ability.DataEffectDuration[2] = 1.01f;
            ability.DataEffectDuration[3] = 1.01f;
            ability.DataEffectDuration[4] = 1.01f;
            return ability;
        }

        protected virtual TinkererClusterRocketsLevel2 LoadTinkererClusterRocketsLevel2(ObjectDatabaseBase db)
        {
            var ability = new TinkererClusterRocketsLevel2(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.01f;
            ability.StatsDurationNormal[2] = 1.01f;
            ability.StatsDurationNormal[3] = 1.01f;
            ability.StatsDurationNormal[4] = 1.01f;
            ability.StatsDurationHero[1] = 1.01f;
            ability.StatsDurationHero[2] = 1.01f;
            ability.StatsDurationHero[3] = 1.01f;
            ability.StatsDurationHero[4] = 1.01f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 260f;
            ability.StatsAreaOfEffect[2] = 260f;
            ability.StatsAreaOfEffect[3] = 260f;
            ability.StatsAreaOfEffect[4] = 260f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNcs";
            ability.StatsBuffsRaw[2] = "BNcs";
            ability.StatsBuffsRaw[3] = "BNcs";
            ability.StatsBuffsRaw[4] = "BNcs";
            ability.StatsEffectsRaw[1] = "XNcs";
            ability.StatsEffectsRaw[2] = "XNcs";
            ability.StatsEffectsRaw[3] = "XNcs";
            ability.StatsEffectsRaw[4] = "XNcs";
            ability.DataDamageAmount[1] = 11.25f;
            ability.DataDamageAmount[2] = 19.75f;
            ability.DataDamageAmount[3] = 30.5f;
            ability.DataDamageAmount[4] = 27.5f;
            ability.DataDamageInterval[1] = 0.25f;
            ability.DataDamageInterval[2] = 0.25f;
            ability.DataDamageInterval[3] = 0.25f;
            ability.DataDamageInterval[4] = 0.25f;
            ability.DataMissileCount[1] = 6;
            ability.DataMissileCount[2] = 12;
            ability.DataMissileCount[3] = 18;
            ability.DataMissileCount[4] = 24;
            ability.DataMaxDamage[1] = 105f;
            ability.DataMaxDamage[2] = 195f;
            ability.DataMaxDamage[3] = 300f;
            ability.DataMaxDamage[4] = 300f;
            ability.DataBuildingDamageFactor[1] = 1f;
            ability.DataBuildingDamageFactor[2] = 1f;
            ability.DataBuildingDamageFactor[3] = 1f;
            ability.DataBuildingDamageFactor[4] = 1f;
            ability.DataEffectDuration[1] = 1.01f;
            ability.DataEffectDuration[2] = 1.01f;
            ability.DataEffectDuration[3] = 1.01f;
            ability.DataEffectDuration[4] = 1.01f;
            return ability;
        }

        protected virtual TinkererClusterRocketsLevel3 LoadTinkererClusterRocketsLevel3(ObjectDatabaseBase db)
        {
            var ability = new TinkererClusterRocketsLevel3(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,structure";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.01f;
            ability.StatsDurationNormal[2] = 1.01f;
            ability.StatsDurationNormal[3] = 1.01f;
            ability.StatsDurationNormal[4] = 1.01f;
            ability.StatsDurationHero[1] = 1.01f;
            ability.StatsDurationHero[2] = 1.01f;
            ability.StatsDurationHero[3] = 1.01f;
            ability.StatsDurationHero[4] = 1.01f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 70;
            ability.StatsAreaOfEffect[1] = 290f;
            ability.StatsAreaOfEffect[2] = 290f;
            ability.StatsAreaOfEffect[3] = 290f;
            ability.StatsAreaOfEffect[4] = 290f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNcs";
            ability.StatsBuffsRaw[2] = "BNcs";
            ability.StatsBuffsRaw[3] = "BNcs";
            ability.StatsBuffsRaw[4] = "BNcs";
            ability.StatsEffectsRaw[1] = "XNcs";
            ability.StatsEffectsRaw[2] = "XNcs";
            ability.StatsEffectsRaw[3] = "XNcs";
            ability.StatsEffectsRaw[4] = "XNcs";
            ability.DataDamageAmount[1] = 11.25f;
            ability.DataDamageAmount[2] = 19.75f;
            ability.DataDamageAmount[3] = 30.5f;
            ability.DataDamageAmount[4] = 27.5f;
            ability.DataDamageInterval[1] = 0.25f;
            ability.DataDamageInterval[2] = 0.25f;
            ability.DataDamageInterval[3] = 0.25f;
            ability.DataDamageInterval[4] = 0.25f;
            ability.DataMissileCount[1] = 6;
            ability.DataMissileCount[2] = 12;
            ability.DataMissileCount[3] = 18;
            ability.DataMissileCount[4] = 24;
            ability.DataMaxDamage[1] = 105f;
            ability.DataMaxDamage[2] = 195f;
            ability.DataMaxDamage[3] = 300f;
            ability.DataMaxDamage[4] = 300f;
            ability.DataBuildingDamageFactor[1] = 1f;
            ability.DataBuildingDamageFactor[2] = 1f;
            ability.DataBuildingDamageFactor[3] = 1f;
            ability.DataBuildingDamageFactor[4] = 1f;
            ability.DataEffectDuration[1] = 1.01f;
            ability.DataEffectDuration[2] = 1.01f;
            ability.DataEffectDuration[3] = 1.01f;
            ability.DataEffectDuration[4] = 1.01f;
            return ability;
        }

        protected virtual TinkererRoboGoblinLevel0 LoadTinkererRoboGoblinLevel0(ObjectDatabaseBase db)
        {
            var ability = new TinkererRoboGoblinLevel0(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 1f;
            ability.StatsCooldown[3] = 1f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Ntin";
            ability.DataNormalFormUnitRaw[2] = "Ntin";
            ability.DataNormalFormUnitRaw[3] = "Ntin";
            ability.DataNormalFormUnitRaw[4] = "Ntin";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataStrengthBonus[1] = 5;
            ability.DataStrengthBonus[2] = 7;
            ability.DataStrengthBonus[3] = 7;
            ability.DataStrengthBonus[4] = 7;
            ability.DataDefenseBonus[1] = 1;
            ability.DataDefenseBonus[2] = 3;
            ability.DataDefenseBonus[3] = 3;
            ability.DataDefenseBonus[4] = 3;
            ability.DataAlternateFormUnitRaw[1] = "Nrob";
            ability.DataAlternateFormUnitRaw[2] = "Nrob";
            ability.DataAlternateFormUnitRaw[3] = "Nrob";
            ability.DataAlternateFormUnitRaw[4] = "Nrob";
            return ability;
        }

        protected virtual TinkererRoboGoblinLevel1 LoadTinkererRoboGoblinLevel1(ObjectDatabaseBase db)
        {
            var ability = new TinkererRoboGoblinLevel1(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 1f;
            ability.StatsCooldown[3] = 1f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Ntin";
            ability.DataNormalFormUnitRaw[2] = "Ntin";
            ability.DataNormalFormUnitRaw[3] = "Ntin";
            ability.DataNormalFormUnitRaw[4] = "Ntin";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataStrengthBonus[1] = 7;
            ability.DataStrengthBonus[2] = 10;
            ability.DataStrengthBonus[3] = 10;
            ability.DataStrengthBonus[4] = 10;
            ability.DataDefenseBonus[1] = 2;
            ability.DataDefenseBonus[2] = 4;
            ability.DataDefenseBonus[3] = 4;
            ability.DataDefenseBonus[4] = 4;
            ability.DataAlternateFormUnitRaw[1] = "Nrob";
            ability.DataAlternateFormUnitRaw[2] = "Nrob";
            ability.DataAlternateFormUnitRaw[3] = "Nrob";
            ability.DataAlternateFormUnitRaw[4] = "Nrob";
            return ability;
        }

        protected virtual TinkererRoboGoblinLevel2 LoadTinkererRoboGoblinLevel2(ObjectDatabaseBase db)
        {
            var ability = new TinkererRoboGoblinLevel2(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 1f;
            ability.StatsCooldown[3] = 1f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Ntin";
            ability.DataNormalFormUnitRaw[2] = "Ntin";
            ability.DataNormalFormUnitRaw[3] = "Ntin";
            ability.DataNormalFormUnitRaw[4] = "Ntin";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataStrengthBonus[1] = 9;
            ability.DataStrengthBonus[2] = 13;
            ability.DataStrengthBonus[3] = 13;
            ability.DataStrengthBonus[4] = 13;
            ability.DataDefenseBonus[1] = 3;
            ability.DataDefenseBonus[2] = 5;
            ability.DataDefenseBonus[3] = 5;
            ability.DataDefenseBonus[4] = 5;
            ability.DataAlternateFormUnitRaw[1] = "Nrob";
            ability.DataAlternateFormUnitRaw[2] = "Nrob";
            ability.DataAlternateFormUnitRaw[3] = "Nrob";
            ability.DataAlternateFormUnitRaw[4] = "Nrob";
            return ability;
        }

        protected virtual TinkererRoboGoblinLevel3 LoadTinkererRoboGoblinLevel3(ObjectDatabaseBase db)
        {
            var ability = new TinkererRoboGoblinLevel3(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 1f;
            ability.StatsCooldown[3] = 1f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 25;
            ability.StatsManaCost[3] = 25;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Ntin";
            ability.DataNormalFormUnitRaw[2] = "Ntin";
            ability.DataNormalFormUnitRaw[3] = "Ntin";
            ability.DataNormalFormUnitRaw[4] = "Ntin";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataStrengthBonus[1] = 11;
            ability.DataStrengthBonus[2] = 16;
            ability.DataStrengthBonus[3] = 16;
            ability.DataStrengthBonus[4] = 16;
            ability.DataDefenseBonus[1] = 4;
            ability.DataDefenseBonus[2] = 6;
            ability.DataDefenseBonus[3] = 6;
            ability.DataDefenseBonus[4] = 6;
            ability.DataAlternateFormUnitRaw[1] = "Nrob";
            ability.DataAlternateFormUnitRaw[2] = "Nrob";
            ability.DataAlternateFormUnitRaw[3] = "Nrob";
            ability.DataAlternateFormUnitRaw[4] = "Nrob";
            return ability;
        }

        protected virtual TinkererSummonFactoryLevel0 LoadTinkererSummonFactoryLevel0(ObjectDatabaseBase db)
        {
            var ability = new TinkererSummonFactoryLevel0(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 35f;
            ability.StatsCooldown[2] = 35f;
            ability.StatsCooldown[3] = 35f;
            ability.StatsCooldown[4] = 35f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BNfy,BNcg";
            ability.StatsBuffsRaw[2] = "BNfy,BNcg";
            ability.StatsBuffsRaw[3] = "BNfy,BNcg";
            ability.StatsBuffsRaw[4] = "BNfy,BNcg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnInterval[1] = 5f;
            ability.DataSpawnInterval[2] = 5f;
            ability.DataSpawnInterval[3] = 5f;
            ability.DataSpawnInterval[4] = 5f;
            ability.DataSpawnUnitIDRaw[1] = "ncgb";
            ability.DataSpawnUnitIDRaw[2] = "ncg1";
            ability.DataSpawnUnitIDRaw[3] = "ncg2";
            ability.DataSpawnUnitIDRaw[4] = "ncg3";
            ability.DataSpawnUnitDuration[1] = 12f;
            ability.DataSpawnUnitDuration[2] = 12f;
            ability.DataSpawnUnitDuration[3] = 12f;
            ability.DataSpawnUnitDuration[4] = 12f;
            ability.DataSpawnUnitOffset[1] = 200f;
            ability.DataSpawnUnitOffset[2] = 200f;
            ability.DataSpawnUnitOffset[3] = 200f;
            ability.DataSpawnUnitOffset[4] = 200f;
            ability.DataLeashRange[1] = 1100f;
            ability.DataLeashRange[2] = 1100f;
            ability.DataLeashRange[3] = 1100f;
            ability.DataLeashRange[4] = 1100f;
            ability.DataFactoryUnitIDRaw[1] = "nfac";
            ability.DataFactoryUnitIDRaw[2] = "nfa1";
            ability.DataFactoryUnitIDRaw[3] = "nfa2";
            ability.DataFactoryUnitIDRaw[4] = "nfa2";
            return ability;
        }

        protected virtual TinkererSummonFactoryLevel1 LoadTinkererSummonFactoryLevel1(ObjectDatabaseBase db)
        {
            var ability = new TinkererSummonFactoryLevel1(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 35f;
            ability.StatsCooldown[2] = 35f;
            ability.StatsCooldown[3] = 35f;
            ability.StatsCooldown[4] = 35f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BNfy,BNcg";
            ability.StatsBuffsRaw[2] = "BNfy,BNcg";
            ability.StatsBuffsRaw[3] = "BNfy,BNcg";
            ability.StatsBuffsRaw[4] = "BNfy,BNcg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnInterval[1] = 4.5f;
            ability.DataSpawnInterval[2] = 4.5f;
            ability.DataSpawnInterval[3] = 4.5f;
            ability.DataSpawnInterval[4] = 4.5f;
            ability.DataSpawnUnitIDRaw[1] = "ncgb";
            ability.DataSpawnUnitIDRaw[2] = "ncg1";
            ability.DataSpawnUnitIDRaw[3] = "ncg2";
            ability.DataSpawnUnitIDRaw[4] = "ncg3";
            ability.DataSpawnUnitDuration[1] = 12f;
            ability.DataSpawnUnitDuration[2] = 12f;
            ability.DataSpawnUnitDuration[3] = 12f;
            ability.DataSpawnUnitDuration[4] = 12f;
            ability.DataSpawnUnitOffset[1] = 200f;
            ability.DataSpawnUnitOffset[2] = 200f;
            ability.DataSpawnUnitOffset[3] = 200f;
            ability.DataSpawnUnitOffset[4] = 200f;
            ability.DataLeashRange[1] = 1100f;
            ability.DataLeashRange[2] = 1100f;
            ability.DataLeashRange[3] = 1100f;
            ability.DataLeashRange[4] = 1100f;
            ability.DataFactoryUnitIDRaw[1] = "nfac";
            ability.DataFactoryUnitIDRaw[2] = "nfa1";
            ability.DataFactoryUnitIDRaw[3] = "nfa2";
            ability.DataFactoryUnitIDRaw[4] = "nfa2";
            return ability;
        }

        protected virtual TinkererSummonFactoryLevel2 LoadTinkererSummonFactoryLevel2(ObjectDatabaseBase db)
        {
            var ability = new TinkererSummonFactoryLevel2(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 35f;
            ability.StatsCooldown[2] = 35f;
            ability.StatsCooldown[3] = 35f;
            ability.StatsCooldown[4] = 35f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BNfy,BNcg";
            ability.StatsBuffsRaw[2] = "BNfy,BNcg";
            ability.StatsBuffsRaw[3] = "BNfy,BNcg";
            ability.StatsBuffsRaw[4] = "BNfy,BNcg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnInterval[1] = 3.5f;
            ability.DataSpawnInterval[2] = 3.5f;
            ability.DataSpawnInterval[3] = 3.5f;
            ability.DataSpawnInterval[4] = 3.5f;
            ability.DataSpawnUnitIDRaw[1] = "ncgb";
            ability.DataSpawnUnitIDRaw[2] = "ncg1";
            ability.DataSpawnUnitIDRaw[3] = "ncg2";
            ability.DataSpawnUnitIDRaw[4] = "ncg3";
            ability.DataSpawnUnitDuration[1] = 12f;
            ability.DataSpawnUnitDuration[2] = 12f;
            ability.DataSpawnUnitDuration[3] = 12f;
            ability.DataSpawnUnitDuration[4] = 12f;
            ability.DataSpawnUnitOffset[1] = 200f;
            ability.DataSpawnUnitOffset[2] = 200f;
            ability.DataSpawnUnitOffset[3] = 200f;
            ability.DataSpawnUnitOffset[4] = 200f;
            ability.DataLeashRange[1] = 1100f;
            ability.DataLeashRange[2] = 1100f;
            ability.DataLeashRange[3] = 1100f;
            ability.DataLeashRange[4] = 1100f;
            ability.DataFactoryUnitIDRaw[1] = "nfac";
            ability.DataFactoryUnitIDRaw[2] = "nfa1";
            ability.DataFactoryUnitIDRaw[3] = "nfa2";
            ability.DataFactoryUnitIDRaw[4] = "nfa2";
            return ability;
        }

        protected virtual TinkererSummonFactoryLevel3 LoadTinkererSummonFactoryLevel3(ObjectDatabaseBase db)
        {
            var ability = new TinkererSummonFactoryLevel3(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 35f;
            ability.StatsCooldown[2] = 35f;
            ability.StatsCooldown[3] = 35f;
            ability.StatsCooldown[4] = 35f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BNfy,BNcg";
            ability.StatsBuffsRaw[2] = "BNfy,BNcg";
            ability.StatsBuffsRaw[3] = "BNfy,BNcg";
            ability.StatsBuffsRaw[4] = "BNfy,BNcg";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnInterval[1] = 3f;
            ability.DataSpawnInterval[2] = 3f;
            ability.DataSpawnInterval[3] = 3f;
            ability.DataSpawnInterval[4] = 3f;
            ability.DataSpawnUnitIDRaw[1] = "ncgb";
            ability.DataSpawnUnitIDRaw[2] = "ncg1";
            ability.DataSpawnUnitIDRaw[3] = "ncg2";
            ability.DataSpawnUnitIDRaw[4] = "ncg3";
            ability.DataSpawnUnitDuration[1] = 12f;
            ability.DataSpawnUnitDuration[2] = 12f;
            ability.DataSpawnUnitDuration[3] = 12f;
            ability.DataSpawnUnitDuration[4] = 12f;
            ability.DataSpawnUnitOffset[1] = 200f;
            ability.DataSpawnUnitOffset[2] = 200f;
            ability.DataSpawnUnitOffset[3] = 200f;
            ability.DataSpawnUnitOffset[4] = 200f;
            ability.DataLeashRange[1] = 1100f;
            ability.DataLeashRange[2] = 1100f;
            ability.DataLeashRange[3] = 1100f;
            ability.DataLeashRange[4] = 1100f;
            ability.DataFactoryUnitIDRaw[1] = "nfac";
            ability.DataFactoryUnitIDRaw[2] = "nfa1";
            ability.DataFactoryUnitIDRaw[3] = "nfa2";
            ability.DataFactoryUnitIDRaw[4] = "nfa2";
            return ability;
        }

        protected virtual TinkererDemolishLevel0 LoadTinkererDemolishLevel0(ObjectDatabaseBase db)
        {
            var ability = new TinkererDemolishLevel0(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToDemolish[1] = 100f;
            ability.DataChanceToDemolish[2] = 0f;
            ability.DataChanceToDemolish[3] = 0f;
            ability.DataChanceToDemolish[4] = 0f;
            ability.DataDamageMultiplierBuildings[1] = 2f;
            ability.DataDamageMultiplierBuildings[2] = 0f;
            ability.DataDamageMultiplierBuildings[3] = 0f;
            ability.DataDamageMultiplierBuildings[4] = 0f;
            ability.DataDamageMultiplierUnits[1] = 0f;
            ability.DataDamageMultiplierUnits[2] = 0f;
            ability.DataDamageMultiplierUnits[3] = 0f;
            ability.DataDamageMultiplierUnits[4] = 0f;
            ability.DataDamageMultiplierHeroes[1] = 0f;
            ability.DataDamageMultiplierHeroes[2] = 0f;
            ability.DataDamageMultiplierHeroes[3] = 0f;
            ability.DataDamageMultiplierHeroes[4] = 0f;
            return ability;
        }

        protected virtual TinkererDemolishLevel1 LoadTinkererDemolishLevel1(ObjectDatabaseBase db)
        {
            var ability = new TinkererDemolishLevel1(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToDemolish[1] = 100f;
            ability.DataChanceToDemolish[2] = 0f;
            ability.DataChanceToDemolish[3] = 0f;
            ability.DataChanceToDemolish[4] = 0f;
            ability.DataDamageMultiplierBuildings[1] = 2.5f;
            ability.DataDamageMultiplierBuildings[2] = 0f;
            ability.DataDamageMultiplierBuildings[3] = 0f;
            ability.DataDamageMultiplierBuildings[4] = 0f;
            ability.DataDamageMultiplierUnits[1] = 0f;
            ability.DataDamageMultiplierUnits[2] = 0f;
            ability.DataDamageMultiplierUnits[3] = 0f;
            ability.DataDamageMultiplierUnits[4] = 0f;
            ability.DataDamageMultiplierHeroes[1] = 0f;
            ability.DataDamageMultiplierHeroes[2] = 0f;
            ability.DataDamageMultiplierHeroes[3] = 0f;
            ability.DataDamageMultiplierHeroes[4] = 0f;
            return ability;
        }

        protected virtual TinkererDemolishLevel2 LoadTinkererDemolishLevel2(ObjectDatabaseBase db)
        {
            var ability = new TinkererDemolishLevel2(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToDemolish[1] = 100f;
            ability.DataChanceToDemolish[2] = 0f;
            ability.DataChanceToDemolish[3] = 0f;
            ability.DataChanceToDemolish[4] = 0f;
            ability.DataDamageMultiplierBuildings[1] = 3f;
            ability.DataDamageMultiplierBuildings[2] = 0f;
            ability.DataDamageMultiplierBuildings[3] = 0f;
            ability.DataDamageMultiplierBuildings[4] = 0f;
            ability.DataDamageMultiplierUnits[1] = 0f;
            ability.DataDamageMultiplierUnits[2] = 0f;
            ability.DataDamageMultiplierUnits[3] = 0f;
            ability.DataDamageMultiplierUnits[4] = 0f;
            ability.DataDamageMultiplierHeroes[1] = 0f;
            ability.DataDamageMultiplierHeroes[2] = 0f;
            ability.DataDamageMultiplierHeroes[3] = 0f;
            ability.DataDamageMultiplierHeroes[4] = 0f;
            return ability;
        }

        protected virtual TinkererDemolishLevel3 LoadTinkererDemolishLevel3(ObjectDatabaseBase db)
        {
            var ability = new TinkererDemolishLevel3(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToDemolish[1] = 100f;
            ability.DataChanceToDemolish[2] = 0f;
            ability.DataChanceToDemolish[3] = 0f;
            ability.DataChanceToDemolish[4] = 0f;
            ability.DataDamageMultiplierBuildings[1] = 3.5f;
            ability.DataDamageMultiplierBuildings[2] = 0f;
            ability.DataDamageMultiplierBuildings[3] = 0f;
            ability.DataDamageMultiplierBuildings[4] = 0f;
            ability.DataDamageMultiplierUnits[1] = 0f;
            ability.DataDamageMultiplierUnits[2] = 0f;
            ability.DataDamageMultiplierUnits[3] = 0f;
            ability.DataDamageMultiplierUnits[4] = 0f;
            ability.DataDamageMultiplierHeroes[1] = 0f;
            ability.DataDamageMultiplierHeroes[2] = 0f;
            ability.DataDamageMultiplierHeroes[3] = 0f;
            ability.DataDamageMultiplierHeroes[4] = 0f;
            return ability;
        }

        protected virtual FirelordIncinerate_ANic LoadFirelordIncinerate_ANic(ObjectDatabaseBase db)
        {
            var ability = new FirelordIncinerate_ANic(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "enemy,neutral,organic,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 4f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNic";
            ability.StatsBuffsRaw[2] = "BNic";
            ability.StatsBuffsRaw[3] = "BNic";
            ability.StatsBuffsRaw[4] = "BNic";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBonusDamageMultiplier[1] = 2f;
            ability.DataBonusDamageMultiplier[2] = 3f;
            ability.DataBonusDamageMultiplier[3] = 4f;
            ability.DataBonusDamageMultiplier[4] = 4f;
            ability.DataDeathDamageFullAmount[1] = 30f;
            ability.DataDeathDamageFullAmount[2] = 45f;
            ability.DataDeathDamageFullAmount[3] = 60f;
            ability.DataDeathDamageFullAmount[4] = 80f;
            ability.DataDeathDamageFullArea[1] = 120f;
            ability.DataDeathDamageFullArea[2] = 120f;
            ability.DataDeathDamageFullArea[3] = 120f;
            ability.DataDeathDamageFullArea[4] = 120f;
            ability.DataDeathDamageHalfAmount[1] = 15f;
            ability.DataDeathDamageHalfAmount[2] = 22f;
            ability.DataDeathDamageHalfAmount[3] = 30f;
            ability.DataDeathDamageHalfAmount[4] = 40f;
            ability.DataDeathDamageHalfArea[1] = 240f;
            ability.DataDeathDamageHalfArea[2] = 240f;
            ability.DataDeathDamageHalfArea[3] = 240f;
            ability.DataDeathDamageHalfArea[4] = 240f;
            ability.DataDeathDamageDelay[1] = 0.2f;
            ability.DataDeathDamageDelay[2] = 0.2f;
            ability.DataDeathDamageDelay[3] = 0.2f;
            ability.DataDeathDamageDelay[4] = 0.2f;
            return ability;
        }

        protected virtual FirelordIncinerate_ANia LoadFirelordIncinerate_ANia(ObjectDatabaseBase db)
        {
            var ability = new FirelordIncinerate_ANia(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "enemy,neutral,organic,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "enemy,neutral,organic,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 4f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 6;
            ability.StatsManaCost[2] = 6;
            ability.StatsManaCost[3] = 6;
            ability.StatsManaCost[4] = 6;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 550f;
            ability.StatsCastRange[2] = 550f;
            ability.StatsCastRange[3] = 550f;
            ability.StatsCastRange[4] = 550f;
            ability.StatsBuffsRaw[1] = "BNic";
            ability.StatsBuffsRaw[2] = "BNic";
            ability.StatsBuffsRaw[3] = "BNic";
            ability.StatsBuffsRaw[4] = "BNic";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FirelordSoulBurn LoadFirelordSoulBurn(ObjectDatabaseBase db)
        {
            var ability = new FirelordSoulBurn(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 16f;
            ability.StatsDurationNormal[2] = 18f;
            ability.StatsDurationNormal[3] = 20f;
            ability.StatsDurationNormal[4] = 20f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 8f;
            ability.StatsDurationHero[3] = 9f;
            ability.StatsDurationHero[4] = 9f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 12f;
            ability.StatsCooldown[3] = 12f;
            ability.StatsCooldown[4] = 12f;
            ability.StatsManaCost[1] = 65;
            ability.StatsManaCost[2] = 65;
            ability.StatsManaCost[3] = 65;
            ability.StatsManaCost[4] = 65;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BNso";
            ability.StatsBuffsRaw[2] = "BNso";
            ability.StatsBuffsRaw[3] = "BNso";
            ability.StatsBuffsRaw[4] = "BNso";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageAmount[1] = 5f;
            ability.DataDamageAmount[2] = 11.11f;
            ability.DataDamageAmount[3] = 17f;
            ability.DataDamageAmount[4] = 17f;
            ability.DataDamagePeriod[1] = 1f;
            ability.DataDamagePeriod[2] = 1f;
            ability.DataDamagePeriod[3] = 1f;
            ability.DataDamagePeriod[4] = 1f;
            ability.DataDamagePenalty[1] = 0.5f;
            ability.DataDamagePenalty[2] = 0.5f;
            ability.DataDamagePenalty[3] = 0.5f;
            ability.DataDamagePenalty[4] = 0.5f;
            ability.DataMovementSpeedReduction[1] = 0f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            return ability;
        }

        protected virtual FirelordSummonLavaSpawn LoadFirelordSummonLavaSpawn(ObjectDatabaseBase db)
        {
            var ability = new FirelordSummonLavaSpawn(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,neutral,air,ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "enemy,neutral,air,ground,ward";
            ability.StatsTargetsAllowedRaw[3] = "enemy,neutral,air,ground,ward";
            ability.StatsTargetsAllowedRaw[4] = "enemy,neutral,air,ground,ward";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 70f;
            ability.StatsDurationNormal[3] = 70f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 70f;
            ability.StatsDurationHero[2] = 70f;
            ability.StatsDurationHero[3] = 70f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 32f;
            ability.StatsCooldown[2] = 32f;
            ability.StatsCooldown[3] = 32f;
            ability.StatsCooldown[4] = 35f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNlm";
            ability.StatsBuffsRaw[2] = "BNlm";
            ability.StatsBuffsRaw[3] = "BNlm";
            ability.StatsBuffsRaw[4] = "BNlm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nlv1";
            ability.DataSummonedUnitTypeRaw[2] = "nlv2";
            ability.DataSummonedUnitTypeRaw[3] = "nlv3";
            ability.DataSummonedUnitTypeRaw[4] = "nlv3";
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 1;
            ability.DataSummonedUnitCount[3] = 1;
            ability.DataSummonedUnitCount[4] = 1;
            ability.DataSplitDelay[1] = 5f;
            ability.DataSplitDelay[2] = 5f;
            ability.DataSplitDelay[3] = 5f;
            ability.DataSplitDelay[4] = 5f;
            ability.DataSplitAttackCount[1] = 15;
            ability.DataSplitAttackCount[2] = 15;
            ability.DataSplitAttackCount[3] = 15;
            ability.DataSplitAttackCount[4] = 15;
            ability.DataMaxHitpointFactor[1] = 0.5f;
            ability.DataMaxHitpointFactor[2] = 0.5f;
            ability.DataMaxHitpointFactor[3] = 0.5f;
            ability.DataMaxHitpointFactor[4] = 0.5f;
            ability.DataLifeDurationSplitBonus[1] = 12f;
            ability.DataLifeDurationSplitBonus[2] = 12f;
            ability.DataLifeDurationSplitBonus[3] = 12f;
            ability.DataLifeDurationSplitBonus[4] = 12f;
            ability.DataGenerationCount[1] = 3;
            ability.DataGenerationCount[2] = 3;
            ability.DataGenerationCount[3] = 3;
            ability.DataGenerationCount[4] = 3;
            return ability;
        }

        protected virtual FirelordVolcano LoadFirelordVolcano(ObjectDatabaseBase db)
        {
            var ability = new FirelordVolcano(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,enemy,tree,debris";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,enemy,tree,debris";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,enemy,tree,debris";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,enemy,tree,debris";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 2f;
            ability.StatsDurationNormal[3] = 2f;
            ability.StatsDurationNormal[4] = 2f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 1f;
            ability.StatsDurationHero[3] = 1f;
            ability.StatsDurationHero[4] = 1f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 200;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 500f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BNvc,BNva";
            ability.StatsBuffsRaw[2] = "BNvc,BNva";
            ability.StatsBuffsRaw[3] = "BNvc,BNva";
            ability.StatsBuffsRaw[4] = "BNvc,BNva";
            ability.StatsEffectsRaw[1] = "XNvc";
            ability.StatsEffectsRaw[2] = "XNvc";
            ability.StatsEffectsRaw[3] = "XNvc";
            ability.StatsEffectsRaw[4] = "XNvc";
            ability.DataRockRingCount[1] = 3;
            ability.DataRockRingCount[2] = 3;
            ability.DataRockRingCount[3] = 3;
            ability.DataRockRingCount[4] = 3;
            ability.DataWaveCount[1] = 5;
            ability.DataWaveCount[2] = 5;
            ability.DataWaveCount[3] = 5;
            ability.DataWaveCount[4] = 5;
            ability.DataWaveInterval[1] = 3f;
            ability.DataWaveInterval[2] = 3f;
            ability.DataWaveInterval[3] = 3f;
            ability.DataWaveInterval[4] = 3f;
            ability.DataBuildingDamageFactor[1] = 3f;
            ability.DataBuildingDamageFactor[2] = 3f;
            ability.DataBuildingDamageFactor[3] = 3f;
            ability.DataBuildingDamageFactor[4] = 3f;
            ability.DataFullDamageAmount[1] = 100f;
            ability.DataFullDamageAmount[2] = 100f;
            ability.DataFullDamageAmount[3] = 100f;
            ability.DataFullDamageAmount[4] = 100f;
            ability.DataHalfDamageFactor[1] = 0.5f;
            ability.DataHalfDamageFactor[2] = 0.5f;
            ability.DataHalfDamageFactor[3] = 0.5f;
            ability.DataHalfDamageFactor[4] = 0.5f;
            ability.DataDestructibleIDRaw[1] = "Volc";
            ability.DataDestructibleIDRaw[2] = "Volc";
            ability.DataDestructibleIDRaw[3] = "Volc";
            ability.DataDestructibleIDRaw[4] = "Volc";
            return ability;
        }

        protected virtual Inferno LoadInferno(ObjectDatabaseBase db)
        {
            var ability = new Inferno(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 2f;
            ability.StatsDurationHero[3] = 2f;
            ability.StatsDurationHero[4] = 2f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 175;
            ability.StatsManaCost[3] = 175;
            ability.StatsManaCost[4] = 175;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 250f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 900f;
            ability.StatsCastRange[3] = 900f;
            ability.StatsCastRange[4] = 900f;
            ability.StatsBuffsRaw[1] = "BNin";
            ability.StatsBuffsRaw[2] = "BNin";
            ability.StatsBuffsRaw[3] = "BNin";
            ability.StatsBuffsRaw[4] = "BNin";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 50f;
            ability.DataDamage[2] = 50f;
            ability.DataDamage[3] = 50f;
            ability.DataDamage[4] = 50f;
            ability.DataDuration[1] = 360f;
            ability.DataDuration[2] = 360f;
            ability.DataDuration[3] = 360f;
            ability.DataDuration[4] = 360f;
            ability.DataImpactDelay[1] = 1f;
            ability.DataImpactDelay[2] = 1f;
            ability.DataImpactDelay[3] = 1f;
            ability.DataImpactDelay[4] = 1f;
            ability.DataSummonedUnitRaw[1] = "ninf";
            ability.DataSummonedUnitRaw[2] = "ninf";
            ability.DataSummonedUnitRaw[3] = "ninf";
            ability.DataSummonedUnitRaw[4] = "ninf";
            return ability;
        }

        protected virtual TichondriusInferno LoadTichondriusInferno(ObjectDatabaseBase db)
        {
            var ability = new TichondriusInferno(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 2f;
            ability.StatsDurationHero[3] = 2f;
            ability.StatsDurationHero[4] = 2f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 250f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 900f;
            ability.StatsCastRange[3] = 900f;
            ability.StatsCastRange[4] = 900f;
            ability.StatsBuffsRaw[1] = "BNin";
            ability.StatsBuffsRaw[2] = "BNin";
            ability.StatsBuffsRaw[3] = "BNin";
            ability.StatsBuffsRaw[4] = "BNin";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 50f;
            ability.DataDamage[2] = 50f;
            ability.DataDamage[3] = 50f;
            ability.DataDamage[4] = 50f;
            ability.DataDuration[1] = 360f;
            ability.DataDuration[2] = 360f;
            ability.DataDuration[3] = 360f;
            ability.DataDuration[4] = 360f;
            ability.DataImpactDelay[1] = 1f;
            ability.DataImpactDelay[2] = 1f;
            ability.DataImpactDelay[3] = 1f;
            ability.DataImpactDelay[4] = 1f;
            ability.DataSummonedUnitRaw[1] = "ninf";
            ability.DataSummonedUnitRaw[2] = "ninf";
            ability.DataSummonedUnitRaw[3] = "ninf";
            ability.DataSummonedUnitRaw[4] = "ninf";
            return ability;
        }

        protected virtual FireBolt LoadFireBolt(ObjectDatabaseBase db)
        {
            var ability = new FireBolt(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 3f;
            ability.StatsDurationNormal[3] = 4f;
            ability.StatsDurationNormal[4] = 4f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 4f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 150f;
            ability.DataDamage[3] = 200f;
            ability.DataDamage[4] = 200f;
            return ability;
        }

        protected virtual FingerOfDeath_ANfd LoadFingerOfDeath_ANfd(ObjectDatabaseBase db)
        {
            var ability = new FingerOfDeath_ANfd(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 15f;
            ability.StatsCooldown[3] = 15f;
            ability.StatsCooldown[4] = 15f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGraphicDelay[1] = 0.25f;
            ability.DataGraphicDelay[2] = 0.25f;
            ability.DataGraphicDelay[3] = 0.25f;
            ability.DataGraphicDelay[4] = 0.25f;
            ability.DataGraphicDuration[1] = 1f;
            ability.DataGraphicDuration[2] = 1f;
            ability.DataGraphicDuration[3] = 1f;
            ability.DataGraphicDuration[4] = 1f;
            ability.DataDamage[1] = 500f;
            ability.DataDamage[2] = 500f;
            ability.DataDamage[3] = 500f;
            ability.DataDamage[4] = 500f;
            return ability;
        }

        protected virtual FingerOfPain LoadFingerOfPain(ObjectDatabaseBase db)
        {
            var ability = new FingerOfPain(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FingerOfPain21Button LoadFingerOfPain21Button(ObjectDatabaseBase db)
        {
            var ability = new FingerOfPain21Button(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DarkPortal LoadDarkPortal(ObjectDatabaseBase db)
        {
            var ability = new DarkPortal(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 1f;
            ability.StatsDurationNormal[3] = 1f;
            ability.StatsDurationNormal[4] = 1f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 100f;
            ability.StatsCooldown[2] = 100f;
            ability.StatsCooldown[3] = 100f;
            ability.StatsCooldown[4] = 100f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnedUnitsRaw[1] = "nbal,nfel";
            ability.DataSpawnedUnitsRaw[2] = "nbal,nfel";
            ability.DataSpawnedUnitsRaw[3] = "nbal,nfel";
            ability.DataSpawnedUnitsRaw[4] = "nbal,nfel";
            ability.DataMinimumNumberOfUnits[1] = 3;
            ability.DataMinimumNumberOfUnits[2] = 3;
            ability.DataMinimumNumberOfUnits[3] = 5;
            ability.DataMinimumNumberOfUnits[4] = 5;
            ability.DataMaximumNumberOfUnits[1] = 5;
            ability.DataMaximumNumberOfUnits[2] = 6;
            ability.DataMaximumNumberOfUnits[3] = 6;
            ability.DataMaximumNumberOfUnits[4] = 6;
            return ability;
        }

        protected virtual RainOfChaos LoadRainOfChaos(ObjectDatabaseBase db)
        {
            var ability = new RainOfChaos(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0.8f;
            ability.StatsDurationNormal[3] = 0.6f;
            ability.StatsDurationNormal[4] = 0.6f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XErc";
            ability.StatsEffectsRaw[2] = "XErc";
            ability.StatsEffectsRaw[3] = "XErc";
            ability.StatsEffectsRaw[4] = "XErc";
            ability.DataAbilityForUnitCreationRaw[1] = "ANin";
            ability.DataAbilityForUnitCreationRaw[2] = "ANin";
            ability.DataAbilityForUnitCreationRaw[3] = "ANin";
            ability.DataAbilityForUnitCreationRaw[4] = "ANin";
            ability.DataNumberOfUnitsCreated[1] = 2;
            ability.DataNumberOfUnitsCreated[2] = 3;
            ability.DataNumberOfUnitsCreated[3] = 4;
            ability.DataNumberOfUnitsCreated[4] = 4;
            return ability;
        }

        protected virtual RainOfChaosButton02 LoadRainOfChaosButton02(ObjectDatabaseBase db)
        {
            var ability = new RainOfChaosButton02(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0.8f;
            ability.StatsDurationNormal[3] = 0.6f;
            ability.StatsDurationNormal[4] = 0.6f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XErc";
            ability.StatsEffectsRaw[2] = "XErc";
            ability.StatsEffectsRaw[3] = "XErc";
            ability.StatsEffectsRaw[4] = "XErc";
            return ability;
        }

        protected virtual CenariusBeefyStarfall LoadCenariusBeefyStarfall(ObjectDatabaseBase db)
        {
            var ability = new CenariusBeefyStarfall(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 35f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 35f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 100f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 300;
            ability.StatsManaCost[2] = 300;
            ability.StatsManaCost[3] = 300;
            ability.StatsManaCost[4] = 300;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "AEsd";
            ability.StatsBuffsRaw[2] = "AEsd";
            ability.StatsBuffsRaw[3] = "AEsd";
            ability.StatsBuffsRaw[4] = "AEsd";
            ability.StatsEffectsRaw[1] = "XEsf";
            ability.StatsEffectsRaw[2] = "XEsf";
            ability.StatsEffectsRaw[3] = "XEsf";
            ability.StatsEffectsRaw[4] = "XEsf";
            ability.DataDamageDealt[1] = 50f;
            ability.DataDamageDealt[2] = 30f;
            ability.DataDamageDealt[3] = 30f;
            ability.DataDamageDealt[4] = 30f;
            ability.DataDamageInterval[1] = 2f;
            ability.DataDamageInterval[2] = 2f;
            ability.DataDamageInterval[3] = 2f;
            ability.DataDamageInterval[4] = 2f;
            ability.DataBuildingReduction[1] = 0.35f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            return ability;
        }

        protected virtual MannorothReincarnation LoadMannorothReincarnation(ObjectDatabaseBase db)
        {
            var ability = new MannorothReincarnation(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 3f;
            ability.StatsCastingTime[3] = 3f;
            ability.StatsCastingTime[4] = 3f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 240f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = "XOre";
            ability.StatsEffectsRaw[3] = "XOre";
            ability.StatsEffectsRaw[4] = "XOre";
            ability.DataReincarnationDelay[1] = 7f;
            ability.DataReincarnationDelay[2] = 7f;
            ability.DataReincarnationDelay[3] = 7f;
            ability.DataReincarnationDelay[4] = 7f;
            return ability;
        }

        protected virtual MalganisDarkConversion LoadMalganisDarkConversion(ObjectDatabaseBase db)
        {
            var ability = new MalganisDarkConversion(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,nonhero";
            ability.StatsCastingTime[1] = 5f;
            ability.StatsCastingTime[2] = 5f;
            ability.StatsCastingTime[3] = 5f;
            ability.StatsCastingTime[4] = 5f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 6f;
            ability.StatsDurationNormal[3] = 6f;
            ability.StatsDurationNormal[4] = 6f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 6f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 0.1f;
            ability.StatsCooldown[2] = 0.1f;
            ability.StatsCooldown[3] = 0.1f;
            ability.StatsCooldown[4] = 0.1f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BNdc";
            ability.StatsBuffsRaw[2] = "BNdc";
            ability.StatsBuffsRaw[3] = "BNdc";
            ability.StatsBuffsRaw[4] = "BNdc";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRaceToConvertRaw[1] = "commoner";
            ability.DataRaceToConvertRaw[2] = "commoner";
            ability.DataRaceToConvertRaw[3] = "commoner";
            ability.DataRaceToConvertRaw[4] = "commoner";
            ability.DataConversionUnitRaw[1] = "nzom";
            ability.DataConversionUnitRaw[2] = "nzom";
            ability.DataConversionUnitRaw[3] = "nzom";
            ability.DataConversionUnitRaw[4] = "nzom";
            return ability;
        }

        protected virtual DarkConversionFast LoadDarkConversionFast(ObjectDatabaseBase db)
        {
            var ability = new DarkConversionFast(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,nonhero";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 6f;
            ability.StatsDurationNormal[3] = 6f;
            ability.StatsDurationNormal[4] = 6f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 6f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 0.1f;
            ability.StatsCooldown[2] = 0.1f;
            ability.StatsCooldown[3] = 0.1f;
            ability.StatsCooldown[4] = 0.1f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BNdc";
            ability.StatsBuffsRaw[2] = "BNdc";
            ability.StatsBuffsRaw[3] = "BNdc";
            ability.StatsBuffsRaw[4] = "BNdc";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRaceToConvertRaw[1] = "commoner";
            ability.DataRaceToConvertRaw[2] = "commoner";
            ability.DataRaceToConvertRaw[3] = "commoner";
            ability.DataRaceToConvertRaw[4] = "commoner";
            ability.DataConversionUnitRaw[1] = "nzom";
            ability.DataConversionUnitRaw[2] = "nzom";
            ability.DataConversionUnitRaw[3] = "nzom";
            ability.DataConversionUnitRaw[4] = "nzom";
            return ability;
        }

        protected virtual MalganisSoulPreservation LoadMalganisSoulPreservation(ObjectDatabaseBase db)
        {
            var ability = new MalganisSoulPreservation(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic,nonhero";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic,nonhero";
            ability.StatsCastingTime[1] = 0.5f;
            ability.StatsCastingTime[2] = 0.5f;
            ability.StatsCastingTime[3] = 0.5f;
            ability.StatsCastingTime[4] = 0.5f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 3f;
            ability.StatsDurationNormal[3] = 3f;
            ability.StatsDurationNormal[4] = 3f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 3f;
            ability.StatsDurationHero[4] = 3f;
            ability.StatsCooldown[1] = 0.1f;
            ability.StatsCooldown[2] = 0.1f;
            ability.StatsCooldown[3] = 0.1f;
            ability.StatsCooldown[4] = 0.1f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BNsl";
            ability.StatsBuffsRaw[2] = "BNsl";
            ability.StatsBuffsRaw[3] = "BNsl";
            ability.StatsBuffsRaw[4] = "BNsl";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitToPreserveRaw[1] = "nzom";
            ability.DataUnitToPreserveRaw[2] = "nzom";
            ability.DataUnitToPreserveRaw[3] = "nzom";
            ability.DataUnitToPreserveRaw[4] = "nzom";
            return ability;
        }

        protected virtual IllidanMetamorphosis LoadIllidanMetamorphosis(ObjectDatabaseBase db)
        {
            var ability = new IllidanMetamorphosis(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEme";
            ability.StatsBuffsRaw[2] = "BEme";
            ability.StatsBuffsRaw[3] = "BEme";
            ability.StatsBuffsRaw[4] = "BEme";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Eill";
            ability.DataNormalFormUnitRaw[2] = "Eill";
            ability.DataNormalFormUnitRaw[3] = "Eill";
            ability.DataNormalFormUnitRaw[4] = "Eill";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormHitPointBonus[1] = 500f;
            ability.DataAlternateFormHitPointBonus[2] = 500f;
            ability.DataAlternateFormHitPointBonus[3] = 500f;
            ability.DataAlternateFormHitPointBonus[4] = 500f;
            ability.DataAlternateFormUnitRaw[1] = "Eilm";
            ability.DataAlternateFormUnitRaw[2] = "Eilm";
            ability.DataAlternateFormUnitRaw[3] = "Eilm";
            ability.DataAlternateFormUnitRaw[4] = "Eilm";
            return ability;
        }

        protected virtual EvilIllidanMetamorphosis LoadEvilIllidanMetamorphosis(ObjectDatabaseBase db)
        {
            var ability = new EvilIllidanMetamorphosis(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 1.5f;
            ability.StatsDurationNormal[3] = 1.5f;
            ability.StatsDurationNormal[4] = 1.5f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 120f;
            ability.StatsCooldown[4] = 120f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEme";
            ability.StatsBuffsRaw[2] = "BEme";
            ability.StatsBuffsRaw[3] = "BEme";
            ability.StatsBuffsRaw[4] = "BEme";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "Eevi";
            ability.DataNormalFormUnitRaw[2] = "Eevi";
            ability.DataNormalFormUnitRaw[3] = "Eevi";
            ability.DataNormalFormUnitRaw[4] = "Eevi";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 1;
            ability.DataMorphingFlagsRaw[3] = 1;
            ability.DataMorphingFlagsRaw[4] = 1;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormHitPointBonus[1] = 500f;
            ability.DataAlternateFormHitPointBonus[2] = 500f;
            ability.DataAlternateFormHitPointBonus[3] = 500f;
            ability.DataAlternateFormHitPointBonus[4] = 500f;
            ability.DataAlternateFormUnitRaw[1] = "Eevm";
            ability.DataAlternateFormUnitRaw[2] = "Eevm";
            ability.DataAlternateFormUnitRaw[3] = "Eevm";
            ability.DataAlternateFormUnitRaw[4] = "Eevm";
            return ability;
        }

        protected virtual SuperEarthquake LoadSuperEarthquake(ObjectDatabaseBase db)
        {
            var ability = new SuperEarthquake(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,tree";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,debris,tree";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,debris,tree";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,debris,tree";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 25f;
            ability.StatsDurationNormal[2] = 25f;
            ability.StatsDurationNormal[3] = 25f;
            ability.StatsDurationNormal[4] = 25f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 20f;
            ability.StatsDurationHero[3] = 20f;
            ability.StatsDurationHero[4] = 20f;
            ability.StatsCooldown[1] = 90f;
            ability.StatsCooldown[2] = 90f;
            ability.StatsCooldown[3] = 90f;
            ability.StatsCooldown[4] = 90f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 250f;
            ability.StatsAreaOfEffect[3] = 250f;
            ability.StatsAreaOfEffect[4] = 250f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BOeq";
            ability.StatsBuffsRaw[2] = "BOeq";
            ability.StatsBuffsRaw[3] = "BOeq";
            ability.StatsBuffsRaw[4] = "BOeq";
            ability.StatsEffectsRaw[1] = "XOeq";
            ability.StatsEffectsRaw[2] = "XOeq";
            ability.StatsEffectsRaw[3] = "XOeq";
            ability.StatsEffectsRaw[4] = "XOeq";
            ability.DataEffectDelay[1] = 0.5f;
            ability.DataEffectDelay[2] = 0.5f;
            ability.DataEffectDelay[3] = 0.5f;
            ability.DataEffectDelay[4] = 0.5f;
            ability.DataDamagePerSecondToBuildings[1] = 50f;
            ability.DataDamagePerSecondToBuildings[2] = 50f;
            ability.DataDamagePerSecondToBuildings[3] = 50f;
            ability.DataDamagePerSecondToBuildings[4] = 50f;
            ability.DataUnitsSlowed[1] = 0.75f;
            ability.DataUnitsSlowed[2] = 0.75f;
            ability.DataUnitsSlowed[3] = 0.75f;
            ability.DataUnitsSlowed[4] = 0.75f;
            ability.DataFinalArea[1] = 250f;
            ability.DataFinalArea[2] = 250f;
            ability.DataFinalArea[3] = 250f;
            ability.DataFinalArea[4] = 250f;
            return ability;
        }

        protected virtual SuperDeathAndDecay LoadSuperDeathAndDecay(ObjectDatabaseBase db)
        {
            var ability = new SuperDeathAndDecay(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,ward";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,ward";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 35f;
            ability.StatsDurationNormal[2] = 35f;
            ability.StatsDurationNormal[3] = 35f;
            ability.StatsDurationNormal[4] = 35f;
            ability.StatsDurationHero[1] = 35f;
            ability.StatsDurationHero[2] = 35f;
            ability.StatsDurationHero[3] = 35f;
            ability.StatsDurationHero[4] = 35f;
            ability.StatsCooldown[1] = 150f;
            ability.StatsCooldown[2] = 150f;
            ability.StatsCooldown[3] = 150f;
            ability.StatsCooldown[4] = 150f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 250;
            ability.StatsManaCost[3] = 250;
            ability.StatsManaCost[4] = 250;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 300f;
            ability.StatsAreaOfEffect[3] = 300f;
            ability.StatsAreaOfEffect[4] = 300f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 1000f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BUdd";
            ability.StatsBuffsRaw[2] = "BUdd";
            ability.StatsBuffsRaw[3] = "BUdd";
            ability.StatsBuffsRaw[4] = "BUdd";
            ability.StatsEffectsRaw[1] = "XUdd";
            ability.StatsEffectsRaw[2] = "XUdd";
            ability.StatsEffectsRaw[3] = "XUdd";
            ability.StatsEffectsRaw[4] = "XUdd";
            ability.DataMaxLifeDrainedPerSecond[1] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[2] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[3] = 0.04f;
            ability.DataMaxLifeDrainedPerSecond[4] = 0.04f;
            ability.DataBuildingReduction[1] = 1f;
            ability.DataBuildingReduction[2] = 1f;
            ability.DataBuildingReduction[3] = 1f;
            ability.DataBuildingReduction[4] = 1f;
            return ability;
        }

        protected virtual Monsoon LoadMonsoon(ObjectDatabaseBase db)
        {
            var ability = new Monsoon(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 15f;
            ability.StatsDurationNormal[3] = 15f;
            ability.StatsDurationNormal[4] = 15f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 15f;
            ability.StatsDurationHero[3] = 15f;
            ability.StatsDurationHero[4] = 15f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 400f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 300f;
            ability.StatsCastRange[3] = 300f;
            ability.StatsCastRange[4] = 300f;
            ability.StatsBuffsRaw[1] = "ANmd";
            ability.StatsBuffsRaw[2] = "ANmd";
            ability.StatsBuffsRaw[3] = "ANmd";
            ability.StatsBuffsRaw[4] = "ANmd";
            ability.StatsEffectsRaw[1] = "XNmo";
            ability.StatsEffectsRaw[2] = "XNmo";
            ability.StatsEffectsRaw[3] = "XNmo";
            ability.StatsEffectsRaw[4] = "XNmo";
            ability.DataDamageDealt[1] = 20f;
            ability.DataDamageDealt[2] = 20f;
            ability.DataDamageDealt[3] = 20f;
            ability.DataDamageDealt[4] = 20f;
            ability.DataDamageInterval[1] = 1.5f;
            ability.DataDamageInterval[2] = 1.5f;
            ability.DataDamageInterval[3] = 1.5f;
            ability.DataDamageInterval[4] = 1.5f;
            ability.DataBuildingReduction[1] = 0.35f;
            ability.DataBuildingReduction[2] = 0.35f;
            ability.DataBuildingReduction[3] = 0.35f;
            ability.DataBuildingReduction[4] = 0.35f;
            return ability;
        }

        protected virtual PoisonArrows LoadPoisonArrows(ObjectDatabaseBase db)
        {
            var ability = new PoisonArrows(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 10f;
            ability.StatsDurationNormal[3] = 10f;
            ability.StatsDurationNormal[4] = 10f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 10f;
            ability.StatsDurationHero[3] = 10f;
            ability.StatsDurationHero[4] = 10f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpoi,Bpsd,Bpsi";
            ability.StatsBuffsRaw[2] = "Bpoi,Bpsd,Bpsi";
            ability.StatsBuffsRaw[3] = "Bpoi,Bpsd,Bpsi";
            ability.StatsBuffsRaw[4] = "Bpoi,Bpsd,Bpsi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExtraDamage[1] = 10f;
            ability.DataExtraDamage[2] = 20f;
            ability.DataExtraDamage[3] = 30f;
            ability.DataExtraDamage[4] = 30f;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 6f;
            ability.DataDamagePerSecond[3] = 8f;
            ability.DataDamagePerSecond[4] = 8f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 0;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual WateryMinion LoadWateryMinion(ObjectDatabaseBase db)
        {
            var ability = new WateryMinion(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNwm";
            ability.StatsBuffsRaw[2] = "BNwm";
            ability.StatsBuffsRaw[3] = "BNwm";
            ability.StatsBuffsRaw[4] = "BNwm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "ncfs";
            ability.DataSummonedUnitTypeRaw[2] = "ntws";
            ability.DataSummonedUnitTypeRaw[3] = "nsns";
            ability.DataSummonedUnitTypeRaw[4] = "nsns";
            ability.DataSummonedUnitCount[1] = 2;
            ability.DataSummonedUnitCount[2] = 2;
            ability.DataSummonedUnitCount[3] = 2;
            ability.DataSummonedUnitCount[4] = 2;
            return ability;
        }

        protected virtual ColdArrows LoadColdArrows(ObjectDatabaseBase db)
        {
            var ability = new ColdArrows(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 6f;
            ability.StatsDurationNormal[3] = 6f;
            ability.StatsDurationNormal[4] = 6f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 1f;
            ability.StatsDurationHero[3] = 1f;
            ability.StatsDurationHero[4] = 1f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 8;
            ability.StatsManaCost[2] = 8;
            ability.StatsManaCost[3] = 8;
            ability.StatsManaCost[4] = 8;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BHca,Bcsd,Bcsi";
            ability.StatsBuffsRaw[2] = "BHca,Bcsd,Bcsi";
            ability.StatsBuffsRaw[3] = "BHca,Bcsd,Bcsi";
            ability.StatsBuffsRaw[4] = "BHca,Bcsd,Bcsi";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExtraDamage[1] = 5f;
            ability.DataExtraDamage[2] = 10f;
            ability.DataExtraDamage[3] = 15f;
            ability.DataExtraDamage[4] = 15f;
            ability.DataMovementSpeedFactor[1] = 0.3f;
            ability.DataMovementSpeedFactor[2] = 0.5f;
            ability.DataMovementSpeedFactor[3] = 0.7f;
            ability.DataMovementSpeedFactor[4] = 0.7f;
            ability.DataAttackSpeedFactor[1] = 0.3f;
            ability.DataAttackSpeedFactor[2] = 0.5f;
            ability.DataAttackSpeedFactor[3] = 0.7f;
            ability.DataAttackSpeedFactor[4] = 0.7f;
            ability.DataStackFlagsRaw[1] = 7;
            ability.DataStackFlagsRaw[2] = 7;
            ability.DataStackFlagsRaw[3] = 7;
            ability.DataStackFlagsRaw[4] = 7;
            return ability;
        }

        protected virtual BattleRoar LoadBattleRoar(ObjectDatabaseBase db)
        {
            var ability = new BattleRoar(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 10f;
            ability.StatsDurationNormal[3] = 10f;
            ability.StatsDurationNormal[4] = 10f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 10f;
            ability.StatsDurationHero[3] = 10f;
            ability.StatsDurationHero[4] = 10f;
            ability.StatsCooldown[1] = 25f;
            ability.StatsCooldown[2] = 25f;
            ability.StatsCooldown[3] = 25f;
            ability.StatsCooldown[4] = 25f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 650f;
            ability.StatsAreaOfEffect[2] = 650f;
            ability.StatsAreaOfEffect[3] = 650f;
            ability.StatsAreaOfEffect[4] = 650f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNbr";
            ability.StatsBuffsRaw[2] = "BNbr";
            ability.StatsBuffsRaw[3] = "BNbr";
            ability.StatsBuffsRaw[4] = "BNbr";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            ability.DataDamageIncrease[1] = 10f;
            ability.DataDamageIncrease[2] = 20f;
            ability.DataDamageIncrease[3] = 30f;
            ability.DataDamageIncrease[4] = 40f;
            return ability;
        }

        protected virtual RexxarSummonBear LoadRexxarSummonBear(ObjectDatabaseBase db)
        {
            var ability = new RexxarSummonBear(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 30f;
            ability.StatsCooldown[3] = 30f;
            ability.StatsCooldown[4] = 30f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = "BOsf";
            ability.StatsBuffsRaw[3] = "BOsf";
            ability.StatsBuffsRaw[4] = "BOsf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AttributeModifierSkill LoadAttributeModifierSkill(ObjectDatabaseBase db)
        {
            var ability = new AttributeModifierSkill(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 3;
            ability.DataAgilityBonus[2] = 6;
            ability.DataAgilityBonus[3] = 9;
            ability.DataAgilityBonus[4] = 12;
            ability.DataIntelligenceBonus[1] = 3;
            ability.DataIntelligenceBonus[2] = 6;
            ability.DataIntelligenceBonus[3] = 9;
            ability.DataIntelligenceBonus[4] = 12;
            ability.DataStrengthBonus[1] = 3;
            ability.DataStrengthBonus[2] = 6;
            ability.DataStrengthBonus[3] = 9;
            ability.DataStrengthBonus[4] = 12;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual RexxarSummonQuilbeast LoadRexxarSummonQuilbeast(ObjectDatabaseBase db)
        {
            var ability = new RexxarSummonQuilbeast(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 70f;
            ability.StatsDurationNormal[3] = 70f;
            ability.StatsDurationNormal[4] = 70f;
            ability.StatsDurationHero[1] = 70f;
            ability.StatsDurationHero[2] = 70f;
            ability.StatsDurationHero[3] = 70f;
            ability.StatsDurationHero[4] = 70f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 50;
            ability.StatsManaCost[3] = 50;
            ability.StatsManaCost[4] = 50;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsq";
            ability.StatsBuffsRaw[2] = "BNsq";
            ability.StatsBuffsRaw[3] = "BNsq";
            ability.StatsBuffsRaw[4] = "BNsq";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RexxarStampede LoadRexxarStampede(ObjectDatabaseBase db)
        {
            var ability = new RexxarStampede(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 6;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 20f;
            ability.StatsDurationNormal[4] = 20f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 20f;
            ability.StatsDurationHero[4] = 20f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 200;
            ability.StatsManaCost[4] = 200;
            ability.StatsAreaOfEffect[1] = 1000f;
            ability.StatsAreaOfEffect[2] = 1300f;
            ability.StatsAreaOfEffect[3] = 600f;
            ability.StatsAreaOfEffect[4] = 600f;
            ability.StatsCastRange[1] = 300f;
            ability.StatsCastRange[2] = 400f;
            ability.StatsCastRange[3] = 1000f;
            ability.StatsCastRange[4] = 1000f;
            ability.StatsBuffsRaw[1] = "BNst";
            ability.StatsBuffsRaw[2] = "BNst";
            ability.StatsBuffsRaw[3] = "BNst";
            ability.StatsBuffsRaw[4] = "BNst";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RexxarStormBolt LoadRexxarStormBolt(ObjectDatabaseBase db)
        {
            var ability = new RexxarStormBolt(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,debris,enemy,neutral,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 7f;
            ability.StatsDurationNormal[3] = 9f;
            ability.StatsDurationNormal[4] = 12f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 4f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 600f;
            ability.StatsCastRange[4] = 600f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = "BPSE";
            ability.StatsBuffsRaw[3] = "BPSE";
            ability.StatsBuffsRaw[4] = "BPSE";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RokhanHealingWave LoadRokhanHealingWave(ObjectDatabaseBase db)
        {
            var ability = new RokhanHealingWave(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 9f;
            ability.StatsCooldown[3] = 9f;
            ability.StatsCooldown[4] = 9f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 90;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 500f;
            ability.StatsAreaOfEffect[3] = 500f;
            ability.StatsAreaOfEffect[4] = 500f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RokhanSerpentWard LoadRokhanSerpentWard(ObjectDatabaseBase db)
        {
            var ability = new RokhanSerpentWard(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 40f;
            ability.StatsDurationNormal[3] = 40f;
            ability.StatsDurationNormal[4] = 40f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 40f;
            ability.StatsDurationHero[3] = 40f;
            ability.StatsDurationHero[4] = 40f;
            ability.StatsCooldown[1] = 6.5f;
            ability.StatsCooldown[2] = 6.5f;
            ability.StatsCooldown[3] = 6.5f;
            ability.StatsCooldown[4] = 6.5f;
            ability.StatsManaCost[1] = 30;
            ability.StatsManaCost[2] = 30;
            ability.StatsManaCost[3] = 30;
            ability.StatsManaCost[4] = 30;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = "BOwd";
            ability.StatsBuffsRaw[2] = "BOwd";
            ability.StatsBuffsRaw[3] = "BOwd";
            ability.StatsBuffsRaw[4] = "BOwd";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RokhanHex LoadRokhanHex(ObjectDatabaseBase db)
        {
            var ability = new RokhanHex(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 45f;
            ability.StatsDurationNormal[4] = 45f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 6f;
            ability.StatsDurationHero[4] = 6f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 7f;
            ability.StatsCooldown[3] = 7f;
            ability.StatsCooldown[4] = 7f;
            ability.StatsManaCost[1] = 70;
            ability.StatsManaCost[2] = 70;
            ability.StatsManaCost[3] = 70;
            ability.StatsManaCost[4] = 25;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOhx";
            ability.StatsBuffsRaw[2] = "BOhx";
            ability.StatsBuffsRaw[3] = "BOhx";
            ability.StatsBuffsRaw[4] = "BOhx";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RokhanVoodooSpirits LoadRokhanVoodooSpirits(ObjectDatabaseBase db)
        {
            var ability = new RokhanVoodooSpirits(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 6;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,neutral,enemy";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,structure,neutral,enemy";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,structure,neutral,enemy";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,structure,neutral,enemy";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 30f;
            ability.StatsDurationNormal[3] = 30f;
            ability.StatsDurationNormal[4] = 30f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 30f;
            ability.StatsDurationHero[3] = 30f;
            ability.StatsDurationHero[4] = 30f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 800f;
            ability.StatsAreaOfEffect[3] = 800f;
            ability.StatsAreaOfEffect[4] = 800f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChenBreathOfFire LoadChenBreathOfFire(ObjectDatabaseBase db)
        {
            var ability = new ChenBreathOfFire(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[2] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[3] = "ground,air,structure";
            ability.StatsTargetsAllowedRaw[4] = "ground,air,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 5f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 5f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 5f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 10f;
            ability.StatsCooldown[4] = 10f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 150f;
            ability.StatsAreaOfEffect[3] = 150f;
            ability.StatsAreaOfEffect[4] = 150f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BNbf";
            ability.StatsBuffsRaw[2] = "BNbf";
            ability.StatsBuffsRaw[3] = "BNbf";
            ability.StatsBuffsRaw[4] = "BNbf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChenDrunkenBrawler LoadChenDrunkenBrawler(ObjectDatabaseBase db)
        {
            var ability = new ChenDrunkenBrawler(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChenDrunkenHaze LoadChenDrunkenHaze(ObjectDatabaseBase db)
        {
            var ability = new ChenDrunkenHaze(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,organic,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 12f;
            ability.StatsDurationNormal[3] = 12f;
            ability.StatsDurationNormal[4] = 12f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 5f;
            ability.StatsDurationHero[3] = 5f;
            ability.StatsDurationHero[4] = 5f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 12f;
            ability.StatsCooldown[3] = 12f;
            ability.StatsCooldown[4] = 12f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 75;
            ability.StatsManaCost[4] = 75;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 550f;
            ability.StatsCastRange[2] = 550f;
            ability.StatsCastRange[3] = 550f;
            ability.StatsCastRange[4] = 550f;
            ability.StatsBuffsRaw[1] = "BNdh";
            ability.StatsBuffsRaw[2] = "BNdh";
            ability.StatsBuffsRaw[3] = "BNdh";
            ability.StatsBuffsRaw[4] = "BNdh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChenStormEarthAndFire LoadChenStormEarthAndFire(ObjectDatabaseBase db)
        {
            var ability = new ChenStormEarthAndFire(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 6;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 128f;
            ability.StatsAreaOfEffect[2] = 128f;
            ability.StatsAreaOfEffect[3] = 128f;
            ability.StatsAreaOfEffect[4] = 128f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNef";
            ability.StatsBuffsRaw[2] = "BNef";
            ability.StatsBuffsRaw[3] = "BNef";
            ability.StatsBuffsRaw[4] = "BNef";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CairneEnduranceAura LoadCairneEnduranceAura(ObjectDatabaseBase db)
        {
            var ability = new CairneEnduranceAura(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,friend,self,vuln,invu";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 900f;
            ability.StatsAreaOfEffect[4] = 900f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOae";
            ability.StatsBuffsRaw[2] = "BOae";
            ability.StatsBuffsRaw[3] = "BOae";
            ability.StatsBuffsRaw[4] = "BOae";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CairneReincarnation LoadCairneReincarnation(ObjectDatabaseBase db)
        {
            var ability = new CairneReincarnation(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 6;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 120f;
            ability.StatsCooldown[3] = 240f;
            ability.StatsCooldown[4] = 240f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = "XOre";
            ability.StatsEffectsRaw[3] = "XOre";
            ability.StatsEffectsRaw[4] = "XOre";
            return ability;
        }

        protected virtual CairneShockWave LoadCairneShockWave(ObjectDatabaseBase db)
        {
            var ability = new CairneShockWave(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure";
            ability.StatsTargetsAllowedRaw[2] = "ground,structure";
            ability.StatsTargetsAllowedRaw[3] = "ground,structure";
            ability.StatsTargetsAllowedRaw[4] = "ground,structure";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 150f;
            ability.StatsAreaOfEffect[3] = 150f;
            ability.StatsAreaOfEffect[4] = 150f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BOsh";
            ability.StatsBuffsRaw[2] = "BOsh";
            ability.StatsBuffsRaw[3] = "BOsh";
            ability.StatsBuffsRaw[4] = "BOsh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CairneWarStomp LoadCairneWarStomp(ObjectDatabaseBase db)
        {
            var ability = new CairneWarStomp(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 4;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "ground,organic";
            ability.StatsTargetsAllowedRaw[3] = "ground,organic";
            ability.StatsTargetsAllowedRaw[4] = "ground,organic";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 4f;
            ability.StatsDurationNormal[3] = 5f;
            ability.StatsDurationNormal[4] = 6f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 3f;
            ability.StatsDurationHero[3] = 4f;
            ability.StatsDurationHero[4] = 4.5f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 6f;
            ability.StatsCooldown[3] = 6f;
            ability.StatsCooldown[4] = 6f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 90;
            ability.StatsManaCost[3] = 90;
            ability.StatsManaCost[4] = 90;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 300f;
            ability.StatsAreaOfEffect[3] = 350f;
            ability.StatsAreaOfEffect[4] = 350f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = "BPSE";
            ability.StatsBuffsRaw[3] = "BPSE";
            ability.StatsBuffsRaw[4] = "BPSE";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual IllidanChannel LoadIllidanChannel(ObjectDatabaseBase db)
        {
            var ability = new IllidanChannel(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 500f;
            ability.StatsCastRange[3] = 500f;
            ability.StatsCastRange[4] = 500f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFollowThroughTime[1] = 180f;
            ability.DataFollowThroughTime[2] = 180f;
            ability.DataFollowThroughTime[3] = 180f;
            ability.DataFollowThroughTime[4] = 180f;
            ability.DataTargetTypeRaw[1] = 0;
            ability.DataTargetTypeRaw[2] = 0;
            ability.DataTargetTypeRaw[3] = 0;
            ability.DataTargetTypeRaw[4] = 0;
            ability.DataOptionsRaw[1] = 0;
            ability.DataOptionsRaw[2] = 0;
            ability.DataOptionsRaw[3] = 0;
            ability.DataOptionsRaw[4] = 0;
            ability.DataArtDuration[1] = 0.98f;
            ability.DataArtDuration[2] = 0.98f;
            ability.DataArtDuration[3] = 0.98f;
            ability.DataArtDuration[4] = 0.98f;
            ability.DataDisableOtherAbilitiesRaw[1] = 1;
            ability.DataDisableOtherAbilitiesRaw[2] = 1;
            ability.DataDisableOtherAbilitiesRaw[3] = 1;
            ability.DataDisableOtherAbilitiesRaw[4] = 1;
            ability.DataBaseOrderIDRaw[1] = "channel";
            ability.DataBaseOrderIDRaw[2] = "-";
            ability.DataBaseOrderIDRaw[3] = "-";
            ability.DataBaseOrderIDRaw[4] = "-";
            return ability;
        }

        protected virtual AbolishMagic LoadAbolishMagic(ObjectDatabaseBase db)
        {
            var ability = new AbolishMagic(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0f;
            ability.DataManaLoss[2] = 0f;
            ability.DataManaLoss[3] = 0f;
            ability.DataManaLoss[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 250f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual AbolishMagicNaga LoadAbolishMagicNaga(ObjectDatabaseBase db)
        {
            var ability = new AbolishMagicNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AbolishMagicCreep LoadAbolishMagicCreep(ObjectDatabaseBase db)
        {
            var ability = new AbolishMagicCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0f;
            ability.DataManaLoss[2] = 0f;
            ability.DataManaLoss[3] = 0f;
            ability.DataManaLoss[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 250f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual AbolishMagicCreep12Pos LoadAbolishMagicCreep12Pos(ObjectDatabaseBase db)
        {
            var ability = new AbolishMagicCreep12Pos(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AbsorbMana LoadAbsorbMana(ObjectDatabaseBase db)
        {
            var ability = new AbsorbMana(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "player,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumLifeAbsorbed[1] = 0f;
            ability.DataMaximumLifeAbsorbed[2] = 0f;
            ability.DataMaximumLifeAbsorbed[3] = 0f;
            ability.DataMaximumLifeAbsorbed[4] = 0f;
            ability.DataMaximumManaAbsorbed[1] = 99999f;
            ability.DataMaximumManaAbsorbed[2] = 0f;
            ability.DataMaximumManaAbsorbed[3] = 0f;
            ability.DataMaximumManaAbsorbed[4] = 0f;
            return ability;
        }

        protected virtual AcolyteHarvest LoadAcolyteHarvest(ObjectDatabaseBase db)
        {
            var ability = new AcolyteHarvest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AvatarGarithos LoadAvatarGarithos(ObjectDatabaseBase db)
        {
            var ability = new AvatarGarithos(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 6;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 180f;
            ability.StatsCooldown[3] = 180f;
            ability.StatsCooldown[4] = 180f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 150;
            ability.StatsManaCost[3] = 150;
            ability.StatsManaCost[4] = 150;
            ability.StatsAreaOfEffect[1] = 0.5f;
            ability.StatsAreaOfEffect[2] = 0.5f;
            ability.StatsAreaOfEffect[3] = 0.5f;
            ability.StatsAreaOfEffect[4] = 0.5f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Alarm LoadAlarm(ObjectDatabaseBase db)
        {
            var ability = new Alarm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AlliedBuilding LoadAlliedBuilding(ObjectDatabaseBase db)
        {
            var ability = new AlliedBuilding(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataActivationRadius[1] = 600f;
            ability.DataActivationRadius[2] = 0f;
            ability.DataActivationRadius[3] = 0f;
            ability.DataActivationRadius[4] = 0f;
            ability.DataInteractionTypeRaw[1] = 1;
            ability.DataInteractionTypeRaw[2] = 0;
            ability.DataInteractionTypeRaw[3] = 0;
            ability.DataInteractionTypeRaw[4] = 0;
            ability.DataShowSelectUnitButtonRaw[1] = 1;
            ability.DataShowSelectUnitButtonRaw[2] = 0;
            ability.DataShowSelectUnitButtonRaw[3] = 0;
            ability.DataShowSelectUnitButtonRaw[4] = 0;
            ability.DataShowUnitIndicatorRaw[1] = 1;
            ability.DataShowUnitIndicatorRaw[2] = 0;
            ability.DataShowUnitIndicatorRaw[3] = 0;
            ability.DataShowUnitIndicatorRaw[4] = 0;
            return ability;
        }

        protected virtual AncestralSpirit LoadAncestralSpirit(ObjectDatabaseBase db)
        {
            var ability = new AncestralSpirit(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRestoredFactor[1] = 1f;
            ability.DataLifeRestoredFactor[2] = 0f;
            ability.DataLifeRestoredFactor[3] = 0f;
            ability.DataLifeRestoredFactor[4] = 0f;
            ability.DataManaRestoredFactor[1] = 0.25f;
            ability.DataManaRestoredFactor[2] = 0f;
            ability.DataManaRestoredFactor[3] = 0f;
            ability.DataManaRestoredFactor[4] = 0f;
            return ability;
        }

        protected virtual AnimateDeadCreep LoadAnimateDeadCreep(ObjectDatabaseBase db)
        {
            var ability = new AnimateDeadCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 120f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 120f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUan";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInheritUpgradesRaw[1] = 0;
            ability.DataInheritUpgradesRaw[2] = 0;
            ability.DataInheritUpgradesRaw[3] = 0;
            ability.DataInheritUpgradesRaw[4] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            ability.DataNumberOfCorpsesRaised[1] = 6;
            ability.DataNumberOfCorpsesRaised[2] = 0;
            ability.DataNumberOfCorpsesRaised[3] = 0;
            ability.DataNumberOfCorpsesRaised[4] = 0;
            return ability;
        }

        protected virtual AntiMagicShield_Aams LoadAntiMagicShield_Aams(ObjectDatabaseBase db)
        {
            var ability = new AntiMagicShield_Aams(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 90f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 90f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bams,Bam2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitDamage[1] = 0f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataMagicDamageReduction[1] = 0f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataShieldLife[1] = 0;
            ability.DataShieldLife[2] = 0;
            ability.DataShieldLife[3] = 0;
            ability.DataShieldLife[4] = 0;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual AntiMagicShieldMatrix LoadAntiMagicShieldMatrix(ObjectDatabaseBase db)
        {
            var ability = new AntiMagicShieldMatrix(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,vuln,invu,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 90f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 90f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bams,Bam2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual AntiMagicShieldCreep LoadAntiMagicShieldCreep(ObjectDatabaseBase db)
        {
            var ability = new AntiMagicShieldCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 90f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 90f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bams,Bam2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitDamage[1] = 0f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataMagicDamageReduction[1] = 0f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataShieldLife[1] = 0;
            ability.DataShieldLife[2] = 0;
            ability.DataShieldLife[3] = 0;
            ability.DataShieldLife[4] = 0;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual Attack LoadAttack(ObjectDatabaseBase db)
        {
            var ability = new Attack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AuraBrillianceCreep LoadAuraBrillianceCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraBrillianceCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHab";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegenerationIncrease[1] = 1f;
            ability.DataManaRegenerationIncrease[2] = 0f;
            ability.DataManaRegenerationIncrease[3] = 0f;
            ability.DataManaRegenerationIncrease[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual AuraCommandCreep LoadAuraCommandCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraCommandCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOac";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMeleeBonusRaw[1] = 1;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 0;
            ability.DataRangedBonusRaw[3] = 0;
            ability.DataRangedBonusRaw[4] = 0;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            ability.DataAttackDamageIncrease[1] = 0.1f;
            ability.DataAttackDamageIncrease[2] = 0f;
            ability.DataAttackDamageIncrease[3] = 0f;
            ability.DataAttackDamageIncrease[4] = 0f;
            return ability;
        }

        protected virtual AuraDevotionCreep LoadAuraDevotionCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraDevotionCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHad";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorBonus[1] = 3f;
            ability.DataArmorBonus[2] = 0f;
            ability.DataArmorBonus[3] = 0f;
            ability.DataArmorBonus[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual AuraEnduranceCreep LoadAuraEnduranceCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraEnduranceCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOae";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.1f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataAttackSpeedIncrease[1] = 0.05f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual AuraPlagueAbomination LoadAuraPlagueAbomination(ObjectDatabaseBase db)
        {
            var ability = new AuraPlagueAbomination(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 176f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bapl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAuraDuration[1] = 90f;
            ability.DataAuraDuration[2] = 0f;
            ability.DataAuraDuration[3] = 0f;
            ability.DataAuraDuration[4] = 0f;
            ability.DataDamagePerSecond[1] = 2f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataDurationOfPlagueWard[1] = 10f;
            ability.DataDurationOfPlagueWard[2] = 0f;
            ability.DataDurationOfPlagueWard[3] = 0f;
            ability.DataDurationOfPlagueWard[4] = 0f;
            ability.DataPlagueWardUnitTypeRaw[1] = "uplg";
            ability.DataPlagueWardUnitTypeRaw[2] = null;
            ability.DataPlagueWardUnitTypeRaw[3] = null;
            ability.DataPlagueWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual AuraPlaguePlagueWard LoadAuraPlaguePlagueWard(ObjectDatabaseBase db)
        {
            var ability = new AuraPlaguePlagueWard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bapl,Bplg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAuraDuration[1] = 90f;
            ability.DataAuraDuration[2] = 0f;
            ability.DataAuraDuration[3] = 0f;
            ability.DataAuraDuration[4] = 0f;
            ability.DataDamagePerSecond[1] = 2f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataDurationOfPlagueWard[1] = -1f;
            ability.DataDurationOfPlagueWard[2] = 0f;
            ability.DataDurationOfPlagueWard[3] = 0f;
            ability.DataDurationOfPlagueWard[4] = 0f;
            ability.DataPlagueWardUnitTypeRaw[1] = null;
            ability.DataPlagueWardUnitTypeRaw[2] = null;
            ability.DataPlagueWardUnitTypeRaw[3] = null;
            ability.DataPlagueWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual AuraPlagueCreep LoadAuraPlagueCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraPlagueCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bapl,Bplg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAuraDuration[1] = 120f;
            ability.DataAuraDuration[2] = 0f;
            ability.DataAuraDuration[3] = 0f;
            ability.DataAuraDuration[4] = 0f;
            ability.DataDamagePerSecond[1] = 1f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataDurationOfPlagueWard[1] = 10f;
            ability.DataDurationOfPlagueWard[2] = 0f;
            ability.DataDurationOfPlagueWard[3] = 0f;
            ability.DataDurationOfPlagueWard[4] = 0f;
            ability.DataPlagueWardUnitTypeRaw[1] = "uplg";
            ability.DataPlagueWardUnitTypeRaw[2] = null;
            ability.DataPlagueWardUnitTypeRaw[3] = null;
            ability.DataPlagueWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual AuraPlagueCreepGfx LoadAuraPlagueCreepGfx(ObjectDatabaseBase db)
        {
            var ability = new AuraPlagueCreepGfx(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bapl,Bplg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAuraDuration[1] = 0f;
            ability.DataAuraDuration[2] = 0f;
            ability.DataAuraDuration[3] = 0f;
            ability.DataAuraDuration[4] = 0f;
            ability.DataDamagePerSecond[1] = 0f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataDurationOfPlagueWard[1] = -1f;
            ability.DataDurationOfPlagueWard[2] = 0f;
            ability.DataDurationOfPlagueWard[3] = 0f;
            ability.DataDurationOfPlagueWard[4] = 0f;
            ability.DataPlagueWardUnitTypeRaw[1] = null;
            ability.DataPlagueWardUnitTypeRaw[2] = null;
            ability.DataPlagueWardUnitTypeRaw[3] = null;
            ability.DataPlagueWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual AuraRegenerationWard LoadAuraRegenerationWard(ObjectDatabaseBase db)
        {
            var ability = new AuraRegenerationWard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic,vuln,invu,friend,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Boar";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountOfHitPointsRegenerated[1] = 0.02f;
            ability.DataAmountOfHitPointsRegenerated[2] = 0f;
            ability.DataAmountOfHitPointsRegenerated[3] = 0f;
            ability.DataAmountOfHitPointsRegenerated[4] = 0f;
            ability.DataPercentageRaw[1] = 1;
            ability.DataPercentageRaw[2] = 0;
            ability.DataPercentageRaw[3] = 0;
            ability.DataPercentageRaw[4] = 0;
            return ability;
        }

        protected virtual AuraRegenerationStatue LoadAuraRegenerationStatue(ObjectDatabaseBase db)
        {
            var ability = new AuraRegenerationStatue(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic,vuln,invu,friend,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Babr";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountOfHitPointsRegenerated[1] = 0.004f;
            ability.DataAmountOfHitPointsRegenerated[2] = 0f;
            ability.DataAmountOfHitPointsRegenerated[3] = 0f;
            ability.DataAmountOfHitPointsRegenerated[4] = 0f;
            ability.DataPercentageRaw[1] = 1;
            ability.DataPercentageRaw[2] = 0;
            ability.DataPercentageRaw[3] = 0;
            ability.DataPercentageRaw[4] = 0;
            return ability;
        }

        protected virtual AuraSlow LoadAuraSlow(ObjectDatabaseBase db)
        {
            var ability = new AuraSlow(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Basl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedFactor[1] = -0.6f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual AuraTrueshotCreep LoadAuraTrueshotCreep(ObjectDatabaseBase db)
        {
            var ability = new AuraTrueshotCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEar";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 0.1f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataMeleeBonusRaw[1] = 0;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 0;
            ability.DataRangedBonusRaw[3] = 0;
            ability.DataRangedBonusRaw[4] = 0;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            return ability;
        }

        protected virtual AuraWarDrums LoadAuraWarDrums(ObjectDatabaseBase db)
        {
            var ability = new AuraWarDrums(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bakb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMeleeBonusRaw[1] = 1;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 0;
            ability.DataRangedBonusRaw[3] = 0;
            ability.DataRangedBonusRaw[4] = 0;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            ability.DataAttackDamageIncrease[1] = 0.1f;
            ability.DataAttackDamageIncrease[2] = 0f;
            ability.DataAttackDamageIncrease[3] = 0f;
            ability.DataAttackDamageIncrease[4] = 0f;
            ability.DataPlayChannelAnimationRaw[1] = 1;
            ability.DataPlayChannelAnimationRaw[2] = 0;
            ability.DataPlayChannelAnimationRaw[3] = 0;
            ability.DataPlayChannelAnimationRaw[4] = 0;
            return ability;
        }

        protected virtual AvengerForm LoadAvengerForm(ObjectDatabaseBase db)
        {
            var ability = new AvengerForm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "uobs";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 31;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 1f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataLifeRegenerationRateperSecond[1] = 8f;
            ability.DataLifeRegenerationRateperSecond[2] = 0f;
            ability.DataLifeRegenerationRateperSecond[3] = 0f;
            ability.DataLifeRegenerationRateperSecond[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ubsp";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual Awaken LoadAwaken(ObjectDatabaseBase db)
        {
            var ability = new Awaken(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BallsOfFire LoadBallsOfFire(ObjectDatabaseBase db)
        {
            var ability = new BallsOfFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,friend,structure,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2.51f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bbof";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbof";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageDealt[1] = 6f;
            ability.DataFullDamageDealt[2] = 0f;
            ability.DataFullDamageDealt[3] = 0f;
            ability.DataFullDamageDealt[4] = 0f;
            ability.DataFullDamageInterval[1] = 0.5f;
            ability.DataFullDamageInterval[2] = 0f;
            ability.DataFullDamageInterval[3] = 0f;
            ability.DataFullDamageInterval[4] = 0f;
            ability.DataHalfDamageDealt[1] = 3f;
            ability.DataHalfDamageDealt[2] = 0f;
            ability.DataHalfDamageDealt[3] = 0f;
            ability.DataHalfDamageDealt[4] = 0f;
            ability.DataHalfDamageInterval[1] = 1f;
            ability.DataHalfDamageInterval[2] = 0f;
            ability.DataHalfDamageInterval[3] = 0f;
            ability.DataHalfDamageInterval[4] = 0f;
            ability.DataBuildingReduction[1] = 1f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            ability.DataMaximumDamage[1] = 0f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            return ability;
        }

        protected virtual BanishCreep LoadBanishCreep(ObjectDatabaseBase db)
        {
            var ability = new BanishCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonsapper,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 24f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHbn";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BashCreep LoadBashCreep(ObjectDatabaseBase db)
        {
            var ability = new BashCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToBash[1] = 15f;
            ability.DataChanceToBash[2] = 0f;
            ability.DataChanceToBash[3] = 0f;
            ability.DataChanceToBash[4] = 0f;
            ability.DataDamageMultiplier[1] = 0f;
            ability.DataDamageMultiplier[2] = 0f;
            ability.DataDamageMultiplier[3] = 0f;
            ability.DataDamageMultiplier[4] = 0f;
            ability.DataDamageBonus[1] = 25f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            return ability;
        }

        protected virtual BashBeastmasterBear LoadBashBeastmasterBear(ObjectDatabaseBase db)
        {
            var ability = new BashBeastmasterBear(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            return ability;
        }

        protected virtual BashMaulSPBearLevel3 LoadBashMaulSPBearLevel3(ObjectDatabaseBase db)
        {
            var ability = new BashMaulSPBearLevel3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            return ability;
        }

        protected virtual Battlestations LoadBattlestations(ObjectDatabaseBase db)
        {
            var ability = new Battlestations(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 2000f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = "opeo";
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            ability.DataSummonBusyUnitsRaw[1] = 1;
            ability.DataSummonBusyUnitsRaw[2] = 0;
            ability.DataSummonBusyUnitsRaw[3] = 0;
            ability.DataSummonBusyUnitsRaw[4] = 0;
            return ability;
        }

        protected virtual BattlestationsChaos LoadBattlestationsChaos(ObjectDatabaseBase db)
        {
            var ability = new BattlestationsChaos(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 2000f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = "ncpn";
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            ability.DataSummonBusyUnitsRaw[1] = 1;
            ability.DataSummonBusyUnitsRaw[2] = 0;
            ability.DataSummonBusyUnitsRaw[3] = 0;
            ability.DataSummonBusyUnitsRaw[4] = 0;
            return ability;
        }

        protected virtual Bearform LoadBearform(ObjectDatabaseBase db)
        {
            var ability = new Bearform(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "edoc";
            ability.DataNormalFormUnitRaw[2] = " - ";
            ability.DataNormalFormUnitRaw[3] = " - ";
            ability.DataNormalFormUnitRaw[4] = " - ";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "edcm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual Beserk LoadBeserk(ObjectDatabaseBase db)
        {
            var ability = new Beserk(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bbsk";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.2f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataAttackSpeedIncrease[1] = 0.5f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            ability.DataDamageTakenIncrease[1] = 0.4f;
            ability.DataDamageTakenIncrease[2] = 0f;
            ability.DataDamageTakenIncrease[3] = 0f;
            ability.DataDamageTakenIncrease[4] = 0f;
            return ability;
        }

        protected virtual BerserkerUpgrade LoadBerserkerUpgrade(ObjectDatabaseBase db)
        {
            var ability = new BerserkerUpgrade(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "otbk";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual BlackArrowMeleeCreep LoadBlackArrowMeleeCreep(ObjectDatabaseBase db)
        {
            var ability = new BlackArrowMeleeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 6;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNba,BNdm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BlightDispelSmall LoadBlightDispelSmall(ObjectDatabaseBase db)
        {
            var ability = new BlightDispelSmall(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.08f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.08f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 768f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExpansionAmount[1] = 64f;
            ability.DataExpansionAmount[2] = 0f;
            ability.DataExpansionAmount[3] = 0f;
            ability.DataExpansionAmount[4] = 0f;
            ability.DataCreatesBlightRaw[1] = 0;
            ability.DataCreatesBlightRaw[2] = 0;
            ability.DataCreatesBlightRaw[3] = 0;
            ability.DataCreatesBlightRaw[4] = 0;
            return ability;
        }

        protected virtual BlightDispelLarge LoadBlightDispelLarge(ObjectDatabaseBase db)
        {
            var ability = new BlightDispelLarge(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.08f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.08f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 960f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExpansionAmount[1] = 64f;
            ability.DataExpansionAmount[2] = 0f;
            ability.DataExpansionAmount[3] = 0f;
            ability.DataExpansionAmount[4] = 0f;
            ability.DataCreatesBlightRaw[1] = 0;
            ability.DataCreatesBlightRaw[2] = 0;
            ability.DataCreatesBlightRaw[3] = 0;
            ability.DataCreatesBlightRaw[4] = 0;
            return ability;
        }

        protected virtual BlightGrowthSmall LoadBlightGrowthSmall(ObjectDatabaseBase db)
        {
            var ability = new BlightGrowthSmall(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.08f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.08f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 768f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExpansionAmount[1] = 64f;
            ability.DataExpansionAmount[2] = 0f;
            ability.DataExpansionAmount[3] = 0f;
            ability.DataExpansionAmount[4] = 0f;
            ability.DataCreatesBlightRaw[1] = 1;
            ability.DataCreatesBlightRaw[2] = 0;
            ability.DataCreatesBlightRaw[3] = 0;
            ability.DataCreatesBlightRaw[4] = 0;
            return ability;
        }

        protected virtual BlightGrowthLarge LoadBlightGrowthLarge(ObjectDatabaseBase db)
        {
            var ability = new BlightGrowthLarge(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.08f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.08f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 960f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExpansionAmount[1] = 64f;
            ability.DataExpansionAmount[2] = 0f;
            ability.DataExpansionAmount[3] = 0f;
            ability.DataExpansionAmount[4] = 0f;
            ability.DataCreatesBlightRaw[1] = 1;
            ability.DataCreatesBlightRaw[2] = 0;
            ability.DataCreatesBlightRaw[3] = 0;
            ability.DataCreatesBlightRaw[4] = 0;
            return ability;
        }

        protected virtual BlightedGoldMine LoadBlightedGoldMine(ObjectDatabaseBase db)
        {
            var ability = new BlightedGoldMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldPerInterval[1] = 10;
            ability.DataGoldPerInterval[2] = 0;
            ability.DataGoldPerInterval[3] = 0;
            ability.DataGoldPerInterval[4] = 0;
            ability.DataIntervalDuration[1] = 1f;
            ability.DataIntervalDuration[2] = 0f;
            ability.DataIntervalDuration[3] = 0f;
            ability.DataIntervalDuration[4] = 0f;
            ability.DataMaxNumberOfMiners[1] = 5;
            ability.DataMaxNumberOfMiners[2] = 0;
            ability.DataMaxNumberOfMiners[3] = 0;
            ability.DataMaxNumberOfMiners[4] = 0;
            ability.DataRadiusOfMiningRing[1] = 200f;
            ability.DataRadiusOfMiningRing[2] = 0f;
            ability.DataRadiusOfMiningRing[3] = 0f;
            ability.DataRadiusOfMiningRing[4] = 0f;
            return ability;
        }

        protected virtual BlinkBeastmasterBear LoadBlinkBeastmasterBear(ObjectDatabaseBase db)
        {
            var ability = new BlinkBeastmasterBear(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.33f;
            ability.StatsDurationNormal[2] = 0.33f;
            ability.StatsDurationNormal[3] = 0.33f;
            ability.StatsDurationNormal[4] = 0.33f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 10f;
            ability.StatsCooldown[3] = 1f;
            ability.StatsCooldown[4] = 1f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 10;
            ability.StatsManaCost[3] = 10;
            ability.StatsManaCost[4] = 10;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 99999f;
            ability.StatsCastRange[3] = 99999f;
            ability.StatsCastRange[4] = 99999f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BlizzardCreep LoadBlizzardCreep(ObjectDatabaseBase db)
        {
            var ability = new BlizzardCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHbd,BHbz";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XHbz";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfWaves[1] = 6;
            ability.DataNumberOfWaves[2] = 0;
            ability.DataNumberOfWaves[3] = 0;
            ability.DataNumberOfWaves[4] = 0;
            ability.DataDamage[1] = 15f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataNumberOfShards[1] = 6;
            ability.DataNumberOfShards[2] = 0;
            ability.DataNumberOfShards[3] = 0;
            ability.DataNumberOfShards[4] = 0;
            ability.DataBuildingReduction[1] = 0.5f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            ability.DataDamagePerSecond[1] = 0f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMaximumDamagePerWave[1] = 0f;
            ability.DataMaximumDamagePerWave[2] = 0f;
            ability.DataMaximumDamagePerWave[3] = 0f;
            ability.DataMaximumDamagePerWave[4] = 0f;
            return ability;
        }

        protected virtual Bloodlust LoadBloodlust(ObjectDatabaseBase db)
        {
            var ability = new Bloodlust(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 11;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,organic,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 35;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bblo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedIncrease[1] = 0.4f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            ability.DataMovementSpeedIncrease[1] = 0.25f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataScalingFactor[1] = 0.3f;
            ability.DataScalingFactor[2] = 0f;
            ability.DataScalingFactor[3] = 0f;
            ability.DataScalingFactor[4] = 0f;
            return ability;
        }

        protected virtual BloodlustCreep LoadBloodlustCreep(ObjectDatabaseBase db)
        {
            var ability = new BloodlustCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 11;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,organic,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bblo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedIncrease[1] = 0.4f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            ability.DataScalingFactor[1] = 0.3f;
            ability.DataScalingFactor[2] = 0f;
            ability.DataScalingFactor[3] = 0f;
            ability.DataScalingFactor[4] = 0f;
            return ability;
        }

        protected virtual BloodlustCreepHotkeyB LoadBloodlustCreepHotkeyB(ObjectDatabaseBase db)
        {
            var ability = new BloodlustCreepHotkeyB(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 11;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,organic,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bblo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BreathOfFireCreep LoadBreathOfFireCreep(ObjectDatabaseBase db)
        {
            var ability = new BreathOfFireCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNbf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 150f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaxDamage[1] = 99999f;
            ability.DataMaxDamage[2] = 0f;
            ability.DataMaxDamage[3] = 0f;
            ability.DataMaxDamage[4] = 0f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 150f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            ability.DataDamagePerSecond[1] = 21f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual BreathOfFrostCreep LoadBreathOfFrostCreep(ObjectDatabaseBase db)
        {
            var ability = new BreathOfFrostCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 125f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 375f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BCbf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 50f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaxDamage[1] = 99999f;
            ability.DataMaxDamage[2] = 0f;
            ability.DataMaxDamage[3] = 0f;
            ability.DataMaxDamage[4] = 0f;
            ability.DataDistance[1] = 375f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            ability.DataDamagePerSecond[1] = 7f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual BuildNeutral LoadBuildNeutral(ObjectDatabaseBase db)
        {
            var ability = new BuildNeutral(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildHuman LoadBuildHuman(ObjectDatabaseBase db)
        {
            var ability = new BuildHuman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildOrc LoadBuildOrc(ObjectDatabaseBase db)
        {
            var ability = new BuildOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildNightElf LoadBuildNightElf(ObjectDatabaseBase db)
        {
            var ability = new BuildNightElf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildUndead LoadBuildUndead(ObjectDatabaseBase db)
        {
            var ability = new BuildUndead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildNaga LoadBuildNaga(ObjectDatabaseBase db)
        {
            var ability = new BuildNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Burrow LoadBurrow(ObjectDatabaseBase db)
        {
            var ability = new Burrow(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ucry";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ucrm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual BurrowScarabLvl2 LoadBurrowScarabLvl2(ObjectDatabaseBase db)
        {
            var ability = new BurrowScarabLvl2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ucs2";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ucsB";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual BurrowScarabLvl3 LoadBurrowScarabLvl3(ObjectDatabaseBase db)
        {
            var ability = new BurrowScarabLvl3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ucs3";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ucsC";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual BurrowBarbedArachnathid LoadBurrowBarbedArachnathid(ObjectDatabaseBase db)
        {
            var ability = new BurrowBarbedArachnathid(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BurrowDetectionFlyers LoadBurrowDetectionFlyers(ObjectDatabaseBase db)
        {
            var ability = new BurrowDetectionFlyers(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 0;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual Cannibalize LoadCannibalize(ObjectDatabaseBase db)
        {
            var ability = new Cannibalize(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,dead,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsPerSecond[1] = 16f;
            ability.DataHitPointsPerSecond[2] = 0f;
            ability.DataHitPointsPerSecond[3] = 0f;
            ability.DataHitPointsPerSecond[4] = 0f;
            ability.DataMaxHitPoints[1] = 800f;
            ability.DataMaxHitPoints[2] = 0f;
            ability.DataMaxHitPoints[3] = 0f;
            ability.DataMaxHitPoints[4] = 0f;
            return ability;
        }

        protected virtual CannibalizeAbomination LoadCannibalizeAbomination(ObjectDatabaseBase db)
        {
            var ability = new CannibalizeAbomination(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,dead,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CannibalizeCreep LoadCannibalizeCreep(ObjectDatabaseBase db)
        {
            var ability = new CannibalizeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,dead,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsPerSecond[1] = 12f;
            ability.DataHitPointsPerSecond[2] = 0f;
            ability.DataHitPointsPerSecond[3] = 0f;
            ability.DataHitPointsPerSecond[4] = 0f;
            ability.DataMaxHitPoints[1] = 800f;
            ability.DataMaxHitPoints[2] = 0f;
            ability.DataMaxHitPoints[3] = 0f;
            ability.DataMaxHitPoints[4] = 0f;
            return ability;
        }

        protected virtual CargoHoldBurrow LoadCargoHoldBurrow(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldBurrow(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 120f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 4;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldDevour LoadCargoHoldDevour(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldDevour(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 120f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 4;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            ability.DataDamagePerSecond[1] = 5f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            return ability;
        }

        protected virtual CargoHoldMeatWagon LoadCargoHoldMeatWagon(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldMeatWagon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 160f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 8;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldShip LoadCargoHoldShip(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldShip(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,vuln,invu,nonsapper";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 10;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldTank LoadCargoHoldTank(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldTank(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 160f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 4;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldTransport LoadCargoHoldTransport(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldTransport(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,vuln,invu,nonsapper";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 160f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 8;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldGoldMine LoadCargoHoldGoldMine(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldGoldMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 120f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCargoCapacity[1] = 5;
            ability.DataCargoCapacity[2] = 0;
            ability.DataCargoCapacity[3] = 0;
            ability.DataCargoCapacity[4] = 0;
            return ability;
        }

        protected virtual CargoHoldDeath LoadCargoHoldDeath(ObjectDatabaseBase db)
        {
            var ability = new CargoHoldDeath(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementUpdateFrequency[1] = 10f;
            ability.DataMovementUpdateFrequency[2] = 0f;
            ability.DataMovementUpdateFrequency[3] = 0f;
            ability.DataMovementUpdateFrequency[4] = 0f;
            ability.DataAttackUpdateFrequency[1] = 10f;
            ability.DataAttackUpdateFrequency[2] = 0f;
            ability.DataAttackUpdateFrequency[3] = 0f;
            ability.DataAttackUpdateFrequency[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 0f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual CarrionSwarmCreep LoadCarrionSwarmCreep(ObjectDatabaseBase db)
        {
            var ability = new CarrionSwarmCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUcs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 75f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaxDamage[1] = 300f;
            ability.DataMaxDamage[2] = 0f;
            ability.DataMaxDamage[3] = 0f;
            ability.DataMaxDamage[4] = 0f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            return ability;
        }

        protected virtual CrushingWave LoadCrushingWave(ObjectDatabaseBase db)
        {
            var ability = new CrushingWave(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUcs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 150f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaxDamage[1] = 900f;
            ability.DataMaxDamage[2] = 0f;
            ability.DataMaxDamage[3] = 0f;
            ability.DataMaxDamage[4] = 0f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 300f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            return ability;
        }

        protected virtual CrushingWaveDragonTurtle LoadCrushingWaveDragonTurtle(ObjectDatabaseBase db)
        {
            var ability = new CrushingWaveDragonTurtle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUcs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CrushingWaveLesser LoadCrushingWaveLesser(ObjectDatabaseBase db)
        {
            var ability = new CrushingWaveLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUcs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChainLightningCreep LoadChainLightningCreep(ObjectDatabaseBase db)
        {
            var ability = new ChainLightningCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 120;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 100f;
            ability.DataDamagePerTarget[2] = 0f;
            ability.DataDamagePerTarget[3] = 0f;
            ability.DataDamagePerTarget[4] = 0f;
            ability.DataNumberOfTargetsHit[1] = 4;
            ability.DataNumberOfTargetsHit[2] = 0;
            ability.DataNumberOfTargetsHit[3] = 0;
            ability.DataNumberOfTargetsHit[4] = 0;
            ability.DataDamageReductionPerTarget[1] = 0.25f;
            ability.DataDamageReductionPerTarget[2] = 0f;
            ability.DataDamageReductionPerTarget[3] = 0f;
            ability.DataDamageReductionPerTarget[4] = 0f;
            return ability;
        }

        protected virtual ChainDispel LoadChainDispel(ObjectDatabaseBase db)
        {
            var ability = new ChainDispel(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,enemy,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChaosGrunt LoadChaosGrunt(ObjectDatabaseBase db)
        {
            var ability = new ChaosGrunt(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "nchg";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosRaider LoadChaosRaider(ObjectDatabaseBase db)
        {
            var ability = new ChaosRaider(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "nchr";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosShaman LoadChaosShaman(ObjectDatabaseBase db)
        {
            var ability = new ChaosShaman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "nchw";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosKodo LoadChaosKodo(ObjectDatabaseBase db)
        {
            var ability = new ChaosKodo(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "nckb";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosPeon LoadChaosPeon(ObjectDatabaseBase db)
        {
            var ability = new ChaosPeon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "ncpn";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosGrom LoadChaosGrom(ObjectDatabaseBase db)
        {
            var ability = new ChaosGrom(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "Opgh";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ChaosCargoLoad LoadChaosCargoLoad(ObjectDatabaseBase db)
        {
            var ability = new ChaosCargoLoad(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitTypeAllowedRaw[1] = "ncpn";
            ability.DataUnitTypeAllowedRaw[2] = null;
            ability.DataUnitTypeAllowedRaw[3] = null;
            ability.DataUnitTypeAllowedRaw[4] = null;
            return ability;
        }

        protected virtual Charm LoadCharm(ObjectDatabaseBase db)
        {
            var ability = new Charm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 6;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            return ability;
        }

        protected virtual CleavingAttackCreep LoadCleavingAttackCreep(ObjectDatabaseBase db)
        {
            var ability = new CleavingAttackCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CloudOfFog LoadCloudOfFog(ObjectDatabaseBase db)
        {
            var ability = new CloudOfFog(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bclf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xclf";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 2;
            ability.DataAttacksPreventedRaw[2] = 0;
            ability.DataAttacksPreventedRaw[3] = 0;
            ability.DataAttacksPreventedRaw[4] = 0;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataMovementSpeedModifier[1] = 0f;
            ability.DataMovementSpeedModifier[2] = 0f;
            ability.DataMovementSpeedModifier[3] = 0f;
            ability.DataMovementSpeedModifier[4] = 0f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual ColdArrowsCreep LoadColdArrowsCreep(ObjectDatabaseBase db)
        {
            var ability = new ColdArrowsCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.75f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHca,Bcsd,Bcsi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExtraDamage[1] = 0.25f;
            ability.DataExtraDamage[2] = 0f;
            ability.DataExtraDamage[3] = 0f;
            ability.DataExtraDamage[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0.25f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackFlagsRaw[1] = 0;
            ability.DataStackFlagsRaw[2] = 0;
            ability.DataStackFlagsRaw[3] = 0;
            ability.DataStackFlagsRaw[4] = 0;
            return ability;
        }

        protected virtual ControlMagic LoadControlMagic(ObjectDatabaseBase db)
        {
            var ability = new ControlMagic(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,ward,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcmg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataManaPerSummonedHitpoint[1] = 0.45f;
            ability.DataManaPerSummonedHitpoint[2] = 0f;
            ability.DataManaPerSummonedHitpoint[3] = 0f;
            ability.DataManaPerSummonedHitpoint[4] = 0f;
            ability.DataChargeForCurrentLife[1] = 1f;
            ability.DataChargeForCurrentLife[2] = 0f;
            ability.DataChargeForCurrentLife[3] = 0f;
            ability.DataChargeForCurrentLife[4] = 0f;
            return ability;
        }

        protected virtual CorporealForm LoadCorporealForm(ObjectDatabaseBase db)
        {
            var ability = new CorporealForm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.7f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ospm";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ospw";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual CorrosiveBreath LoadCorrosiveBreath(ObjectDatabaseBase db)
        {
            var ability = new CorrosiveBreath(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 50f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual CoupleArcher LoadCoupleArcher(ObjectDatabaseBase db)
        {
            var ability = new CoupleArcher(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataResultingUnitTypeRaw[1] = "ehpr";
            ability.DataResultingUnitTypeRaw[2] = null;
            ability.DataResultingUnitTypeRaw[3] = null;
            ability.DataResultingUnitTypeRaw[4] = null;
            ability.DataPartnerUnitTypeRaw[1] = "ehip";
            ability.DataPartnerUnitTypeRaw[2] = "-";
            ability.DataPartnerUnitTypeRaw[3] = "-";
            ability.DataPartnerUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual CoupleHippogryph LoadCoupleHippogryph(ObjectDatabaseBase db)
        {
            var ability = new CoupleHippogryph(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataResultingUnitTypeRaw[1] = "ehpr";
            ability.DataResultingUnitTypeRaw[2] = null;
            ability.DataResultingUnitTypeRaw[3] = null;
            ability.DataResultingUnitTypeRaw[4] = null;
            ability.DataPartnerUnitTypeRaw[1] = "earc";
            ability.DataPartnerUnitTypeRaw[2] = "-";
            ability.DataPartnerUnitTypeRaw[3] = "-";
            ability.DataPartnerUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual CoupleInstantArcher LoadCoupleInstantArcher(ObjectDatabaseBase db)
        {
            var ability = new CoupleInstantArcher(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataResultingUnitTypeRaw[1] = "ehpr";
            ability.DataResultingUnitTypeRaw[2] = null;
            ability.DataResultingUnitTypeRaw[3] = null;
            ability.DataResultingUnitTypeRaw[4] = null;
            ability.DataPartnerUnitTypeRaw[1] = "ehip";
            ability.DataPartnerUnitTypeRaw[2] = "-";
            ability.DataPartnerUnitTypeRaw[3] = "-";
            ability.DataPartnerUnitTypeRaw[4] = "-";
            ability.DataMoveToPartnerRaw[1] = 0;
            ability.DataMoveToPartnerRaw[2] = 0;
            ability.DataMoveToPartnerRaw[3] = 0;
            ability.DataMoveToPartnerRaw[4] = 0;
            return ability;
        }

        protected virtual CoupleInstantHippogryph LoadCoupleInstantHippogryph(ObjectDatabaseBase db)
        {
            var ability = new CoupleInstantHippogryph(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataResultingUnitTypeRaw[1] = "ehpr";
            ability.DataResultingUnitTypeRaw[2] = null;
            ability.DataResultingUnitTypeRaw[3] = null;
            ability.DataResultingUnitTypeRaw[4] = null;
            ability.DataPartnerUnitTypeRaw[1] = "earc";
            ability.DataPartnerUnitTypeRaw[2] = "-";
            ability.DataPartnerUnitTypeRaw[3] = "-";
            ability.DataPartnerUnitTypeRaw[4] = "-";
            ability.DataMoveToPartnerRaw[1] = 1;
            ability.DataMoveToPartnerRaw[2] = 0;
            ability.DataMoveToPartnerRaw[3] = 0;
            ability.DataMoveToPartnerRaw[4] = 0;
            return ability;
        }

        protected virtual CreepSleep LoadCreepSleep(ObjectDatabaseBase db)
        {
            var ability = new CreepSleep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Cripple LoadCripple(ObjectDatabaseBase db)
        {
            var ability = new Cripple(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcri";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0.75f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.5f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            ability.DataDamageReduction[1] = 0.5f;
            ability.DataDamageReduction[2] = 0f;
            ability.DataDamageReduction[3] = 0f;
            ability.DataDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual CrippleWarlock LoadCrippleWarlock(ObjectDatabaseBase db)
        {
            var ability = new CrippleWarlock(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcri";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0.75f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.5f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            ability.DataDamageReduction[1] = 0.5f;
            ability.DataDamageReduction[2] = 0f;
            ability.DataDamageReduction[3] = 0f;
            ability.DataDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual CrippleCreep LoadCrippleCreep(ObjectDatabaseBase db)
        {
            var ability = new CrippleCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcri";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0.75f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.5f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            ability.DataDamageReduction[1] = 0.5f;
            ability.DataDamageReduction[2] = 0f;
            ability.DataDamageReduction[3] = 0f;
            ability.DataDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual CriticalStrikeCreep LoadCriticalStrikeCreep(ObjectDatabaseBase db)
        {
            var ability = new CriticalStrikeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToCriticalStrike[1] = 20f;
            ability.DataChanceToCriticalStrike[2] = 0f;
            ability.DataChanceToCriticalStrike[3] = 0f;
            ability.DataChanceToCriticalStrike[4] = 0f;
            ability.DataDamageMultiplier[1] = 2f;
            ability.DataDamageMultiplier[2] = 0f;
            ability.DataDamageMultiplier[3] = 0f;
            ability.DataDamageMultiplier[4] = 0f;
            ability.DataDamageBonus[1] = 0f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataChanceToEvade[1] = 0f;
            ability.DataChanceToEvade[2] = 0f;
            ability.DataChanceToEvade[3] = 0f;
            ability.DataChanceToEvade[4] = 0f;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            ability.DataExcludeItemDamageRaw[1] = 0;
            ability.DataExcludeItemDamageRaw[2] = 0;
            ability.DataExcludeItemDamageRaw[3] = 0;
            ability.DataExcludeItemDamageRaw[4] = 0;
            return ability;
        }

        protected virtual Curse LoadCurse(ObjectDatabaseBase db)
        {
            var ability = new Curse(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 1;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 120f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcrs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToMiss[1] = 0.33f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            return ability;
        }

        protected virtual CurseCreep LoadCurseCreep(ObjectDatabaseBase db)
        {
            var ability = new CurseCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 1;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcrs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToMiss[1] = 0.33f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            return ability;
        }

        protected virtual Cyclone_Acyc LoadCyclone_Acyc(ObjectDatabaseBase db)
        {
            var ability = new Cyclone_Acyc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcyc,Bcy2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCanBeDispelledRaw[1] = 1;
            ability.DataCanBeDispelledRaw[2] = 0;
            ability.DataCanBeDispelledRaw[3] = 0;
            ability.DataCanBeDispelledRaw[4] = 0;
            return ability;
        }

        protected virtual CycloneNaga LoadCycloneNaga(ObjectDatabaseBase db)
        {
            var ability = new CycloneNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcyc,Bcy2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CycloneCreep LoadCycloneCreep(ObjectDatabaseBase db)
        {
            var ability = new CycloneCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcyc,Bcy2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCanBeDispelledRaw[1] = 1;
            ability.DataCanBeDispelledRaw[2] = 0;
            ability.DataCanBeDispelledRaw[3] = 0;
            ability.DataCanBeDispelledRaw[4] = 0;
            return ability;
        }

        protected virtual CycloneCenarius LoadCycloneCenarius(ObjectDatabaseBase db)
        {
            var ability = new CycloneCenarius(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcyc,Bcy2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCanBeDispelledRaw[1] = 1;
            ability.DataCanBeDispelledRaw[2] = 0;
            ability.DataCanBeDispelledRaw[3] = 0;
            ability.DataCanBeDispelledRaw[4] = 0;
            return ability;
        }

        protected virtual DeathCoilCreep LoadDeathCoilCreep(ObjectDatabaseBase db)
        {
            var ability = new DeathCoilCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,notself,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountHealedDamaged[1] = 400f;
            ability.DataAmountHealedDamaged[2] = 0f;
            ability.DataAmountHealedDamaged[3] = 0f;
            ability.DataAmountHealedDamaged[4] = 0f;
            return ability;
        }

        protected virtual DeathDamageSapper LoadDeathDamageSapper(ObjectDatabaseBase db)
        {
            var ability = new DeathDamageSapper(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageRadius[1] = 100f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 500f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataPartialDamageRadius[1] = 250f;
            ability.DataPartialDamageRadius[2] = 0f;
            ability.DataPartialDamageRadius[3] = 0f;
            ability.DataPartialDamageRadius[4] = 0f;
            ability.DataPartialDamageAmount[1] = 200f;
            ability.DataPartialDamageAmount[2] = 0f;
            ability.DataPartialDamageAmount[3] = 0f;
            ability.DataPartialDamageAmount[4] = 0f;
            return ability;
        }

        protected virtual DeathDamageMine LoadDeathDamageMine(ObjectDatabaseBase db)
        {
            var ability = new DeathDamageMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageRadius[1] = 150f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 700f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataPartialDamageRadius[1] = 400f;
            ability.DataPartialDamageRadius[2] = 0f;
            ability.DataPartialDamageRadius[3] = 0f;
            ability.DataPartialDamageRadius[4] = 0f;
            ability.DataPartialDamageAmount[1] = 300f;
            ability.DataPartialDamageAmount[2] = 0f;
            ability.DataPartialDamageAmount[3] = 0f;
            ability.DataPartialDamageAmount[4] = 0f;
            return ability;
        }

        protected virtual DeathDamageMineBIG LoadDeathDamageMineBIG(ObjectDatabaseBase db)
        {
            var ability = new DeathDamageMineBIG(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageRadius[1] = 200f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 700f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataPartialDamageRadius[1] = 400f;
            ability.DataPartialDamageRadius[2] = 0f;
            ability.DataPartialDamageRadius[3] = 0f;
            ability.DataPartialDamageRadius[4] = 0f;
            ability.DataPartialDamageAmount[1] = 300f;
            ability.DataPartialDamageAmount[2] = 0f;
            ability.DataPartialDamageAmount[3] = 0f;
            ability.DataPartialDamageAmount[4] = 0f;
            return ability;
        }

        protected virtual Decouple LoadDecouple(ObjectDatabaseBase db)
        {
            var ability = new Decouple(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataPartnerUnitTypeOneRaw[1] = "earc";
            ability.DataPartnerUnitTypeOneRaw[2] = "-";
            ability.DataPartnerUnitTypeOneRaw[3] = "-";
            ability.DataPartnerUnitTypeOneRaw[4] = "-";
            ability.DataPartnerUnitTypeTwoRaw[1] = "ehip";
            ability.DataPartnerUnitTypeTwoRaw[2] = "-";
            ability.DataPartnerUnitTypeTwoRaw[3] = "-";
            ability.DataPartnerUnitTypeTwoRaw[4] = "-";
            return ability;
        }

        protected virtual Defend LoadDefend(ObjectDatabaseBase db)
        {
            var ability = new Defend(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,debris,neutral,enemy,ward,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageTaken[1] = 0.35f;
            ability.DataDamageTaken[2] = 0f;
            ability.DataDamageTaken[3] = 0f;
            ability.DataDamageTaken[4] = 0f;
            ability.DataDamageDealt[1] = 1f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0.3f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataMagicDamageReduction[1] = 1f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataChanceToDeflect[1] = 30f;
            ability.DataChanceToDeflect[2] = 0f;
            ability.DataChanceToDeflect[3] = 0f;
            ability.DataChanceToDeflect[4] = 0f;
            ability.DataDeflectDamageTakenPiercing[1] = 0f;
            ability.DataDeflectDamageTakenPiercing[2] = 0f;
            ability.DataDeflectDamageTakenPiercing[3] = 0f;
            ability.DataDeflectDamageTakenPiercing[4] = 0f;
            ability.DataDeflectDamageTakenSpells[1] = 1f;
            ability.DataDeflectDamageTakenSpells[2] = 0f;
            ability.DataDeflectDamageTakenSpells[3] = 0f;
            ability.DataDeflectDamageTakenSpells[4] = 0f;
            return ability;
        }

        protected virtual DetectSentryWard LoadDetectSentryWard(ObjectDatabaseBase db)
        {
            var ability = new DetectSentryWard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual DetectShade LoadDetectShade(ObjectDatabaseBase db)
        {
            var ability = new DetectShade(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual DetectGeneral LoadDetectGeneral(ObjectDatabaseBase db)
        {
            var ability = new DetectGeneral(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual DetectWarEagle LoadDetectWarEagle(ObjectDatabaseBase db)
        {
            var ability = new DetectWarEagle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DetectGyrocopter LoadDetectGyrocopter(ObjectDatabaseBase db)
        {
            var ability = new DetectGyrocopter(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual DetectMagicSentinel LoadDetectMagicSentinel(ObjectDatabaseBase db)
        {
            var ability = new DetectMagicSentinel(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual Detonate LoadDetonate(ObjectDatabaseBase db)
        {
            var ability = new Detonate(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLossperUnit[1] = 40f;
            ability.DataManaLossperUnit[2] = 0f;
            ability.DataManaLossperUnit[3] = 0f;
            ability.DataManaLossperUnit[4] = 0f;
            ability.DataDamageToSummonedUnits[1] = 225f;
            ability.DataDamageToSummonedUnits[2] = 0f;
            ability.DataDamageToSummonedUnits[3] = 0f;
            ability.DataDamageToSummonedUnits[4] = 0f;
            return ability;
        }

        protected virtual Devour LoadDevour(ObjectDatabaseBase db)
        {
            var ability = new Devour(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdig,Bdvv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxCreepLevel[1] = 5;
            ability.DataMaxCreepLevel[2] = 0;
            ability.DataMaxCreepLevel[3] = 0;
            ability.DataMaxCreepLevel[4] = 0;
            return ability;
        }

        protected virtual DevourDragonCreep LoadDevourDragonCreep(ObjectDatabaseBase db)
        {
            var ability = new DevourDragonCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdig,Bdvv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxCreepLevel[1] = 5;
            ability.DataMaxCreepLevel[2] = 0;
            ability.DataMaxCreepLevel[3] = 0;
            ability.DataMaxCreepLevel[4] = 0;
            return ability;
        }

        protected virtual DevourMagic LoadDevourMagic(ObjectDatabaseBase db)
        {
            var ability = new DevourMagic(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifePerUnit[1] = 50f;
            ability.DataLifePerUnit[2] = 0f;
            ability.DataLifePerUnit[3] = 0f;
            ability.DataLifePerUnit[4] = 0f;
            ability.DataManaPerUnit[1] = 75f;
            ability.DataManaPerUnit[2] = 0f;
            ability.DataManaPerUnit[3] = 0f;
            ability.DataManaPerUnit[4] = 0f;
            ability.DataLifePerBuff[1] = 0f;
            ability.DataLifePerBuff[2] = 0f;
            ability.DataLifePerBuff[3] = 0f;
            ability.DataLifePerBuff[4] = 0f;
            ability.DataManaPerBuff[1] = 0f;
            ability.DataManaPerBuff[2] = 0f;
            ability.DataManaPerBuff[3] = 0f;
            ability.DataManaPerBuff[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 160f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataIgnoreFriendlyBuffsRaw[1] = 1;
            ability.DataIgnoreFriendlyBuffsRaw[2] = 0;
            ability.DataIgnoreFriendlyBuffsRaw[3] = 0;
            ability.DataIgnoreFriendlyBuffsRaw[4] = 0;
            return ability;
        }

        protected virtual DevourMagicCreep LoadDevourMagicCreep(ObjectDatabaseBase db)
        {
            var ability = new DevourMagicCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataIgnoreFriendlyBuffsRaw[1] = 0;
            ability.DataIgnoreFriendlyBuffsRaw[2] = 0;
            ability.DataIgnoreFriendlyBuffsRaw[3] = 0;
            ability.DataIgnoreFriendlyBuffsRaw[4] = 0;
            return ability;
        }

        protected virtual DisenchantOld LoadDisenchantOld(ObjectDatabaseBase db)
        {
            var ability = new DisenchantOld(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0f;
            ability.DataManaLoss[2] = 0f;
            ability.DataManaLoss[3] = 0f;
            ability.DataManaLoss[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 300f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual DisenchantNew LoadDisenchantNew(ObjectDatabaseBase db)
        {
            var ability = new DisenchantNew(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 650f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DispelMagic LoadDispelMagic(ObjectDatabaseBase db)
        {
            var ability = new DispelMagic(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0f;
            ability.DataManaLoss[2] = 0f;
            ability.DataManaLoss[3] = 0f;
            ability.DataManaLoss[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 200f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual DispelMagicCreep LoadDispelMagicCreep(ObjectDatabaseBase db)
        {
            var ability = new DispelMagicCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0f;
            ability.DataManaLoss[2] = 0f;
            ability.DataManaLoss[3] = 0f;
            ability.DataManaLoss[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 200f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            return ability;
        }

        protected virtual DivineShieldCreep LoadDivineShieldCreep(ObjectDatabaseBase db)
        {
            var ability = new DivineShieldCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHds";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DrainLifeCreep LoadDrainLifeCreep(ObjectDatabaseBase db)
        {
            var ability = new DrainLifeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 950f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeTransferredPerSecond[1] = 0f;
            ability.DataLifeTransferredPerSecond[2] = 0f;
            ability.DataLifeTransferredPerSecond[3] = 0f;
            ability.DataLifeTransferredPerSecond[4] = 0f;
            ability.DataManaTransferredPerSecond[1] = 0f;
            ability.DataManaTransferredPerSecond[2] = 0f;
            ability.DataManaTransferredPerSecond[3] = 0f;
            ability.DataManaTransferredPerSecond[4] = 0f;
            ability.DataBonusLifeFactor[1] = 0f;
            ability.DataBonusLifeFactor[2] = 0f;
            ability.DataBonusLifeFactor[3] = 0f;
            ability.DataBonusLifeFactor[4] = 0f;
            ability.DataBonusLifeDecay[1] = 0f;
            ability.DataBonusLifeDecay[2] = 0f;
            ability.DataBonusLifeDecay[3] = 0f;
            ability.DataBonusLifeDecay[4] = 0f;
            ability.DataBonusManaFactor[1] = 0f;
            ability.DataBonusManaFactor[2] = 0f;
            ability.DataBonusManaFactor[3] = 0f;
            ability.DataBonusManaFactor[4] = 0f;
            ability.DataBonusManaDecay[1] = 0f;
            ability.DataBonusManaDecay[2] = 0f;
            ability.DataBonusManaDecay[3] = 0f;
            ability.DataBonusManaDecay[4] = 0f;
            return ability;
        }

        protected virtual DropInstant LoadDropInstant(ObjectDatabaseBase db)
        {
            var ability = new DropInstant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 80f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Drop_Adro LoadDrop_Adro(ObjectDatabaseBase db)
        {
            var ability = new Drop_Adro(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 80f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Drop_Sdro LoadDrop_Sdro(ObjectDatabaseBase db)
        {
            var ability = new Drop_Sdro(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 128f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DropPilot LoadDropPilot(ObjectDatabaseBase db)
        {
            var ability = new DropPilot(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual EatTree LoadEatTree(ObjectDatabaseBase db)
        {
            var ability = new EatTree(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 32f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Beat";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRipDelay[1] = 0.8f;
            ability.DataRipDelay[2] = 0f;
            ability.DataRipDelay[3] = 0f;
            ability.DataRipDelay[4] = 0f;
            ability.DataEatDelay[1] = 2.5f;
            ability.DataEatDelay[2] = 0f;
            ability.DataEatDelay[3] = 0f;
            ability.DataEatDelay[4] = 0f;
            ability.DataHitPointsGained[1] = 500f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            return ability;
        }

        protected virtual EluneSGrace LoadEluneSGrace(ObjectDatabaseBase db)
        {
            var ability = new EluneSGrace(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToDeflect[1] = 0f;
            ability.DataChanceToDeflect[2] = 0f;
            ability.DataChanceToDeflect[3] = 0f;
            ability.DataChanceToDeflect[4] = 0f;
            ability.DataDeflectDamageTakenPiercing[1] = 1f;
            ability.DataDeflectDamageTakenPiercing[2] = 0f;
            ability.DataDeflectDamageTakenPiercing[3] = 0f;
            ability.DataDeflectDamageTakenPiercing[4] = 0f;
            ability.DataDeflectDamageTakenSpells[1] = 1f;
            ability.DataDeflectDamageTakenSpells[2] = 0f;
            ability.DataDeflectDamageTakenSpells[3] = 0f;
            ability.DataDeflectDamageTakenSpells[4] = 0f;
            return ability;
        }

        protected virtual EnsnareNaga LoadEnsnareNaga(ObjectDatabaseBase db)
        {
            var ability = new EnsnareNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bena,Beng";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Ensnare LoadEnsnare(ObjectDatabaseBase db)
        {
            var ability = new Ensnare(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 9f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bena,Beng";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirUnitLowerDuration[1] = 0.6f;
            ability.DataAirUnitLowerDuration[2] = 0f;
            ability.DataAirUnitLowerDuration[3] = 0f;
            ability.DataAirUnitLowerDuration[4] = 0f;
            ability.DataAirUnitHeight[1] = 200f;
            ability.DataAirUnitHeight[2] = 0f;
            ability.DataAirUnitHeight[3] = 0f;
            ability.DataAirUnitHeight[4] = 0f;
            ability.DataMeleeAttackRange[1] = 128f;
            ability.DataMeleeAttackRange[2] = 0f;
            ability.DataMeleeAttackRange[3] = 0f;
            ability.DataMeleeAttackRange[4] = 0f;
            return ability;
        }

        protected virtual EnsnareCreep LoadEnsnareCreep(ObjectDatabaseBase db)
        {
            var ability = new EnsnareCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy,nonhero,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bena,Beng";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirUnitLowerDuration[1] = 0.6f;
            ability.DataAirUnitLowerDuration[2] = 0f;
            ability.DataAirUnitLowerDuration[3] = 0f;
            ability.DataAirUnitLowerDuration[4] = 0f;
            ability.DataAirUnitHeight[1] = 200f;
            ability.DataAirUnitHeight[2] = 0f;
            ability.DataAirUnitHeight[3] = 0f;
            ability.DataAirUnitHeight[4] = 0f;
            ability.DataMeleeAttackRange[1] = 128f;
            ability.DataMeleeAttackRange[2] = 0f;
            ability.DataMeleeAttackRange[3] = 0f;
            ability.DataMeleeAttackRange[4] = 0f;
            return ability;
        }

        protected virtual Entangle LoadEntangle(ObjectDatabaseBase db)
        {
            var ability = new Entangle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataResultingUnitTypeRaw[1] = "egol";
            ability.DataResultingUnitTypeRaw[2] = null;
            ability.DataResultingUnitTypeRaw[3] = null;
            ability.DataResultingUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual EntangledGoldMine LoadEntangledGoldMine(ObjectDatabaseBase db)
        {
            var ability = new EntangledGoldMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldPerInterval[1] = 10;
            ability.DataGoldPerInterval[2] = 0;
            ability.DataGoldPerInterval[3] = 0;
            ability.DataGoldPerInterval[4] = 0;
            ability.DataIntervalDuration[1] = 1f;
            ability.DataIntervalDuration[2] = 0f;
            ability.DataIntervalDuration[3] = 0f;
            ability.DataIntervalDuration[4] = 0f;
            return ability;
        }

        protected virtual EntanglingRootsCreep LoadEntanglingRootsCreep(ObjectDatabaseBase db)
        {
            var ability = new EntanglingRootsCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,nonhero,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEer";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 10f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual EntanglingSeaweed LoadEntanglingSeaweed(ObjectDatabaseBase db)
        {
            var ability = new EntanglingSeaweed(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,nonhero,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEer";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 10f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual Ethereal LoadEthereal(ObjectDatabaseBase db)
        {
            var ability = new Ethereal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual EtherealForm LoadEtherealForm(ObjectDatabaseBase db)
        {
            var ability = new EtherealForm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.7f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ospw";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ospm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual EvasionCreep LoadEvasionCreep(ObjectDatabaseBase db)
        {
            var ability = new EvasionCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToEvade[1] = 0.15f;
            ability.DataChanceToEvade[2] = 0f;
            ability.DataChanceToEvade[3] = 0f;
            ability.DataChanceToEvade[4] = 0f;
            return ability;
        }

        protected virtual EvasionCreep100 LoadEvasionCreep100(ObjectDatabaseBase db)
        {
            var ability = new EvasionCreep100(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToEvade[1] = 1f;
            ability.DataChanceToEvade[2] = 0f;
            ability.DataChanceToEvade[3] = 0f;
            ability.DataChanceToEvade[4] = 0f;
            return ability;
        }

        protected virtual Exhume LoadExhume(ObjectDatabaseBase db)
        {
            var ability = new Exhume(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumNumberOfCorpses[1] = 5;
            ability.DataMaximumNumberOfCorpses[2] = 0;
            ability.DataMaximumNumberOfCorpses[3] = 0;
            ability.DataMaximumNumberOfCorpses[4] = 0;
            ability.DataUnitTypeRaw[1] = "ucry";
            ability.DataUnitTypeRaw[2] = null;
            ability.DataUnitTypeRaw[3] = null;
            ability.DataUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual Factory LoadFactory(ObjectDatabaseBase db)
        {
            var ability = new Factory(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNcg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpawnInterval[1] = 6f;
            ability.DataSpawnInterval[2] = 0f;
            ability.DataSpawnInterval[3] = 0f;
            ability.DataSpawnInterval[4] = 0f;
            ability.DataLeashRange[1] = 1100f;
            ability.DataLeashRange[2] = 0f;
            ability.DataLeashRange[3] = 0f;
            ability.DataLeashRange[4] = 0f;
            ability.DataSpawnUnitIDRaw[1] = "ncgb";
            ability.DataSpawnUnitIDRaw[2] = null;
            ability.DataSpawnUnitIDRaw[3] = null;
            ability.DataSpawnUnitIDRaw[4] = null;
            return ability;
        }

        protected virtual FaerieFire_Afae LoadFaerieFire_Afae(ObjectDatabaseBase db)
        {
            var ability = new FaerieFire_Afae(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 2;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 45;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfae";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseReduction[1] = 4;
            ability.DataDefenseReduction[2] = 0;
            ability.DataDefenseReduction[3] = 0;
            ability.DataDefenseReduction[4] = 0;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual FaerieFire_Afa2 LoadFaerieFire_Afa2(ObjectDatabaseBase db)
        {
            var ability = new FaerieFire_Afa2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 2;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 70f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 45;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfae";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseReduction[1] = 4;
            ability.DataDefenseReduction[2] = 0;
            ability.DataDefenseReduction[3] = 0;
            ability.DataDefenseReduction[4] = 0;
            ability.DataAlwaysAutocastRaw[1] = 1;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual FaerieFireCreep LoadFaerieFireCreep(ObjectDatabaseBase db)
        {
            var ability = new FaerieFireCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 2;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 45;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfae";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseReduction[1] = 4;
            ability.DataDefenseReduction[2] = 0;
            ability.DataDefenseReduction[3] = 0;
            ability.DataDefenseReduction[4] = 0;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual Feedback LoadFeedback(ObjectDatabaseBase db)
        {
            var ability = new Feedback(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaDrainedUnits[1] = 20f;
            ability.DataMaxManaDrainedUnits[2] = 0f;
            ability.DataMaxManaDrainedUnits[3] = 0f;
            ability.DataMaxManaDrainedUnits[4] = 0f;
            ability.DataDamageRatioUnits[1] = 1f;
            ability.DataDamageRatioUnits[2] = 0f;
            ability.DataDamageRatioUnits[3] = 0f;
            ability.DataDamageRatioUnits[4] = 0f;
            ability.DataMaxManaDrainedHeros[1] = 4f;
            ability.DataMaxManaDrainedHeros[2] = 0f;
            ability.DataMaxManaDrainedHeros[3] = 0f;
            ability.DataMaxManaDrainedHeros[4] = 0f;
            ability.DataDamageRatioHeros[1] = 1f;
            ability.DataDamageRatioHeros[2] = 0f;
            ability.DataDamageRatioHeros[3] = 0f;
            ability.DataDamageRatioHeros[4] = 0f;
            ability.DataSummonedDamage[1] = 0f;
            ability.DataSummonedDamage[2] = 0f;
            ability.DataSummonedDamage[3] = 0f;
            ability.DataSummonedDamage[4] = 0f;
            return ability;
        }

        protected virtual FeedbackArcaneTower LoadFeedbackArcaneTower(ObjectDatabaseBase db)
        {
            var ability = new FeedbackArcaneTower(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedDamage[1] = 20f;
            ability.DataSummonedDamage[2] = 0f;
            ability.DataSummonedDamage[3] = 0f;
            ability.DataSummonedDamage[4] = 0f;
            return ability;
        }

        protected virtual FeedbackSpiritBeast LoadFeedbackSpiritBeast(ObjectDatabaseBase db)
        {
            var ability = new FeedbackSpiritBeast(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedDamage[1] = 0f;
            ability.DataSummonedDamage[2] = 0f;
            ability.DataSummonedDamage[3] = 0f;
            ability.DataSummonedDamage[4] = 0f;
            return ability;
        }

        protected virtual FeralSpiritCreep LoadFeralSpiritCreep(ObjectDatabaseBase db)
        {
            var ability = new FeralSpiritCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitRaw[1] = "osw1";
            ability.DataSummonedUnitRaw[2] = null;
            ability.DataSummonedUnitRaw[3] = null;
            ability.DataSummonedUnitRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 2;
            ability.DataNumberOfSummonedUnits[2] = 0;
            ability.DataNumberOfSummonedUnits[3] = 0;
            ability.DataNumberOfSummonedUnits[4] = 0;
            return ability;
        }

        protected virtual FeralSpiritCreepPig LoadFeralSpiritCreepPig(ObjectDatabaseBase db)
        {
            var ability = new FeralSpiritCreepPig(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitRaw[1] = "nspp";
            ability.DataSummonedUnitRaw[2] = null;
            ability.DataSummonedUnitRaw[3] = null;
            ability.DataSummonedUnitRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 2;
            ability.DataNumberOfSummonedUnits[2] = 0;
            ability.DataNumberOfSummonedUnits[3] = 0;
            ability.DataNumberOfSummonedUnits[4] = 0;
            return ability;
        }

        protected virtual FeralSpiritSpiritBeast LoadFeralSpiritSpiritBeast(ObjectDatabaseBase db)
        {
            var ability = new FeralSpiritSpiritBeast(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 20f;
            ability.StatsCooldown[3] = 20f;
            ability.StatsCooldown[4] = 20f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 125;
            ability.StatsManaCost[3] = 125;
            ability.StatsManaCost[4] = 125;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = "BOsf";
            ability.StatsBuffsRaw[3] = "BOsf";
            ability.StatsBuffsRaw[4] = "BOsf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FeralSpiritAkama LoadFeralSpiritAkama(ObjectDatabaseBase db)
        {
            var ability = new FeralSpiritAkama(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 60f;
            ability.StatsDurationNormal[3] = 60f;
            ability.StatsDurationNormal[4] = 60f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 60f;
            ability.StatsDurationHero[3] = 60f;
            ability.StatsDurationHero[4] = 60f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 15f;
            ability.StatsCooldown[3] = 15f;
            ability.StatsCooldown[4] = 15f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 200f;
            ability.StatsAreaOfEffect[3] = 200f;
            ability.StatsAreaOfEffect[4] = 200f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 800f;
            ability.StatsCastRange[3] = 800f;
            ability.StatsCastRange[4] = 800f;
            ability.StatsBuffsRaw[1] = "BOsf";
            ability.StatsBuffsRaw[2] = "BOsf";
            ability.StatsBuffsRaw[3] = "BOsf";
            ability.StatsBuffsRaw[4] = "BOsf";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FingerOfDeath_Afod LoadFingerOfDeath_Afod(ObjectDatabaseBase db)
        {
            var ability = new FingerOfDeath_Afod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,structure,ancient,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FireBoltWarlock LoadFireBoltWarlock(ObjectDatabaseBase db)
        {
            var ability = new FireBoltWarlock(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            return ability;
        }

        protected virtual FireBoltCreep LoadFireBoltCreep(ObjectDatabaseBase db)
        {
            var ability = new FireBoltCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            return ability;
        }

        protected virtual FlakCannon LoadFlakCannon(ObjectDatabaseBase db)
        {
            var ability = new FlakCannon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 75f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMediumDamageRadius[1] = 150f;
            ability.DataMediumDamageRadius[2] = 0f;
            ability.DataMediumDamageRadius[3] = 0f;
            ability.DataMediumDamageRadius[4] = 0f;
            ability.DataSmallDamageRadius[1] = 325f;
            ability.DataSmallDamageRadius[2] = 0f;
            ability.DataSmallDamageRadius[3] = 0f;
            ability.DataSmallDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 7f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataMediumDamageAmount[1] = 6f;
            ability.DataMediumDamageAmount[2] = 0f;
            ability.DataMediumDamageAmount[3] = 0f;
            ability.DataMediumDamageAmount[4] = 0f;
            ability.DataSmallDamageAmount[1] = 5f;
            ability.DataSmallDamageAmount[2] = 0f;
            ability.DataSmallDamageAmount[3] = 0f;
            ability.DataSmallDamageAmount[4] = 0f;
            return ability;
        }

        protected virtual Flare LoadFlare(ObjectDatabaseBase db)
        {
            var ability = new Flare(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xfla";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            ability.DataEffectDelay[1] = 0.8f;
            ability.DataEffectDelay[2] = 0f;
            ability.DataEffectDelay[3] = 0f;
            ability.DataEffectDelay[4] = 0f;
            ability.DataFlareCount[1] = 0;
            ability.DataFlareCount[2] = 0;
            ability.DataFlareCount[3] = 0;
            ability.DataFlareCount[4] = 0;
            return ability;
        }

        protected virtual FlameStrikeCreep LoadFlameStrikeCreep(ObjectDatabaseBase db)
        {
            var ability = new FlameStrikeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,friend,structure,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1.33f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1.67f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 225f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHfs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XHfs";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageDealt[1] = 15f;
            ability.DataFullDamageDealt[2] = 0f;
            ability.DataFullDamageDealt[3] = 0f;
            ability.DataFullDamageDealt[4] = 0f;
            ability.DataFullDamageInterval[1] = 0.33f;
            ability.DataFullDamageInterval[2] = 0f;
            ability.DataFullDamageInterval[3] = 0f;
            ability.DataFullDamageInterval[4] = 0f;
            ability.DataHalfDamageDealt[1] = 10f;
            ability.DataHalfDamageDealt[2] = 0f;
            ability.DataHalfDamageDealt[3] = 0f;
            ability.DataHalfDamageDealt[4] = 0f;
            ability.DataHalfDamageInterval[1] = 1f;
            ability.DataHalfDamageInterval[2] = 0f;
            ability.DataHalfDamageInterval[3] = 0f;
            ability.DataHalfDamageInterval[4] = 0f;
            ability.DataBuildingReduction[1] = 0.75f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            ability.DataMaximumDamage[1] = 0f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            return ability;
        }

        protected virtual FlameStrikeImprovedCreep LoadFlameStrikeImprovedCreep(ObjectDatabaseBase db)
        {
            var ability = new FlameStrikeImprovedCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,friend,structure,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1.33f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2.67f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHfs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XHfs";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ForceOfNatureCreep LoadForceOfNatureCreep(ObjectDatabaseBase db)
        {
            var ability = new ForceOfNatureCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEfn";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 3;
            ability.DataNumberOfSummonedUnits[2] = 0;
            ability.DataNumberOfSummonedUnits[3] = 0;
            ability.DataNumberOfSummonedUnits[4] = 0;
            ability.DataSummonedUnitTypeRaw[1] = "efon";
            ability.DataSummonedUnitTypeRaw[2] = null;
            ability.DataSummonedUnitTypeRaw[3] = null;
            ability.DataSummonedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ForkedLightningCreep LoadForkedLightningCreep(ObjectDatabaseBase db)
        {
            var ability = new ForkedLightningCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.7f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 11f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 110;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 125f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FragShards LoadFragShards(ObjectDatabaseBase db)
        {
            var ability = new FragShards(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMediumDamageRadius[1] = 225f;
            ability.DataMediumDamageRadius[2] = 0f;
            ability.DataMediumDamageRadius[3] = 0f;
            ability.DataMediumDamageRadius[4] = 0f;
            ability.DataSmallDamageRadius[1] = 275f;
            ability.DataSmallDamageRadius[2] = 0f;
            ability.DataSmallDamageRadius[3] = 0f;
            ability.DataSmallDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 25f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataMediumDamageAmount[1] = 15f;
            ability.DataMediumDamageAmount[2] = 0f;
            ability.DataMediumDamageAmount[3] = 0f;
            ability.DataMediumDamageAmount[4] = 0f;
            ability.DataSmallDamageAmount[1] = 10f;
            ability.DataSmallDamageAmount[2] = 0f;
            ability.DataSmallDamageAmount[3] = 0f;
            ability.DataSmallDamageAmount[4] = 0f;
            return ability;
        }

        protected virtual FreezingBreath LoadFreezingBreath(ObjectDatabaseBase db)
        {
            var ability = new FreezingBreath(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfrz";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Frenzy LoadFrenzy(ObjectDatabaseBase db)
        {
            var ability = new Frenzy(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 11;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfzy";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedIncrease[1] = 0.4f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            ability.DataScalingFactor[1] = 0.3f;
            ability.DataScalingFactor[2] = 0f;
            ability.DataScalingFactor[3] = 0f;
            ability.DataScalingFactor[4] = 0f;
            return ability;
        }

        protected virtual FrostArmorCreepOld LoadFrostArmorCreepOld(ObjectDatabaseBase db)
        {
            var ability = new FrostArmorCreepOld(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUfa,Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorDuration[1] = 45f;
            ability.DataArmorDuration[2] = 0f;
            ability.DataArmorDuration[3] = 0f;
            ability.DataArmorDuration[4] = 0f;
            ability.DataArmorBonus[1] = 3f;
            ability.DataArmorBonus[2] = 0f;
            ability.DataArmorBonus[3] = 0f;
            ability.DataArmorBonus[4] = 0f;
            return ability;
        }

        protected virtual FrostArmorCreepAutocast LoadFrostArmorCreepAutocast(ObjectDatabaseBase db)
        {
            var ability = new FrostArmorCreepAutocast(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUfa,Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostArmorAutocastNaga LoadFrostArmorAutocastNaga(ObjectDatabaseBase db)
        {
            var ability = new FrostArmorAutocastNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 40;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUfa,Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostAttack LoadFrostAttack(ObjectDatabaseBase db)
        {
            var ability = new FrostAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostAttack12 LoadFrostAttack12(ObjectDatabaseBase db)
        {
            var ability = new FrostAttack12(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostBreath LoadFrostBreath(ObjectDatabaseBase db)
        {
            var ability = new FrostBreath(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostBreathNewHasIcon LoadFrostBreathNewHasIcon(ObjectDatabaseBase db)
        {
            var ability = new FrostBreathNewHasIcon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostNovaCreep LoadFrostNovaCreep(ObjectDatabaseBase db)
        {
            var ability = new FrostNovaCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,air,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 4f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAreaOfEffectDamage[1] = 50f;
            ability.DataAreaOfEffectDamage[2] = 0f;
            ability.DataAreaOfEffectDamage[3] = 0f;
            ability.DataAreaOfEffectDamage[4] = 0f;
            ability.DataSpecificTargetDamage[1] = 50f;
            ability.DataSpecificTargetDamage[2] = 0f;
            ability.DataSpecificTargetDamage[3] = 0f;
            ability.DataSpecificTargetDamage[4] = 0f;
            ability.DataMaximumDamage[1] = 400f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            return ability;
        }

        protected virtual FrostBolt LoadFrostBolt(ObjectDatabaseBase db)
        {
            var ability = new FrostBolt(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHtb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            return ability;
        }

        protected virtual Ghost LoadGhost(ObjectDatabaseBase db)
        {
            var ability = new Ghost(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAutoAcquireAttackTargetsRaw[1] = 1;
            ability.DataAutoAcquireAttackTargetsRaw[2] = 0;
            ability.DataAutoAcquireAttackTargetsRaw[3] = 0;
            ability.DataAutoAcquireAttackTargetsRaw[4] = 0;
            ability.DataImmuneToMorphEffectsRaw[1] = 1;
            ability.DataImmuneToMorphEffectsRaw[2] = 0;
            ability.DataImmuneToMorphEffectsRaw[3] = 0;
            ability.DataImmuneToMorphEffectsRaw[4] = 0;
            ability.DataDoesNotBlockBuildingsRaw[1] = 0;
            ability.DataDoesNotBlockBuildingsRaw[2] = 0;
            ability.DataDoesNotBlockBuildingsRaw[3] = 0;
            ability.DataDoesNotBlockBuildingsRaw[4] = 0;
            return ability;
        }

        protected virtual GhostVisible LoadGhostVisible(ObjectDatabaseBase db)
        {
            var ability = new GhostVisible(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataImmuneToMorphEffectsRaw[1] = 1;
            ability.DataImmuneToMorphEffectsRaw[2] = 0;
            ability.DataImmuneToMorphEffectsRaw[3] = 0;
            ability.DataImmuneToMorphEffectsRaw[4] = 0;
            ability.DataDoesNotBlockBuildingsRaw[1] = 1;
            ability.DataDoesNotBlockBuildingsRaw[2] = 0;
            ability.DataDoesNotBlockBuildingsRaw[3] = 0;
            ability.DataDoesNotBlockBuildingsRaw[4] = 0;
            return ability;
        }

        protected virtual GoldMine LoadGoldMine(ObjectDatabaseBase db)
        {
            var ability = new GoldMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxGold[1] = 12500;
            ability.DataMaxGold[2] = 0;
            ability.DataMaxGold[3] = 0;
            ability.DataMaxGold[4] = 0;
            ability.DataMiningDuration[1] = 1f;
            ability.DataMiningDuration[2] = 0f;
            ability.DataMiningDuration[3] = 0f;
            ability.DataMiningDuration[4] = 0f;
            ability.DataMiningCapacity[1] = 1;
            ability.DataMiningCapacity[2] = 0;
            ability.DataMiningCapacity[3] = 0;
            ability.DataMiningCapacity[4] = 0;
            return ability;
        }

        protected virtual GrabTree LoadGrabTree(ObjectDatabaseBase db)
        {
            var ability = new GrabTree(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 32f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bgra";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttachDelay[1] = 0.8f;
            ability.DataAttachDelay[2] = 0f;
            ability.DataAttachDelay[3] = 0f;
            ability.DataAttachDelay[4] = 0f;
            ability.DataRemoveDelay[1] = 2.5f;
            ability.DataRemoveDelay[2] = 0f;
            ability.DataRemoveDelay[3] = 0f;
            ability.DataRemoveDelay[4] = 0f;
            ability.DataDisabledAttackIndex[1] = 0;
            ability.DataDisabledAttackIndex[2] = 0;
            ability.DataDisabledAttackIndex[3] = 0;
            ability.DataDisabledAttackIndex[4] = 0;
            ability.DataEnabledAttackIndex[1] = 1;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            ability.DataMaximumAttacks[1] = 15;
            ability.DataMaximumAttacks[2] = 0;
            ability.DataMaximumAttacks[3] = 0;
            ability.DataMaximumAttacks[4] = 0;
            return ability;
        }

        protected virtual Graveyard LoadGraveyard(ObjectDatabaseBase db)
        {
            var ability = new Graveyard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumNumberOfCorpses[1] = 5;
            ability.DataMaximumNumberOfCorpses[2] = 0;
            ability.DataMaximumNumberOfCorpses[3] = 0;
            ability.DataMaximumNumberOfCorpses[4] = 0;
            ability.DataRadiusOfGravestones[1] = 200f;
            ability.DataRadiusOfGravestones[2] = 0f;
            ability.DataRadiusOfGravestones[3] = 0f;
            ability.DataRadiusOfGravestones[4] = 0f;
            ability.DataRadiusOfCorpses[1] = 250f;
            ability.DataRadiusOfCorpses[2] = 0f;
            ability.DataRadiusOfCorpses[3] = 0f;
            ability.DataRadiusOfCorpses[4] = 0f;
            ability.DataCorpseUnitTypeRaw[1] = "ugho";
            ability.DataCorpseUnitTypeRaw[2] = null;
            ability.DataCorpseUnitTypeRaw[3] = null;
            ability.DataCorpseUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual GyrocopterBombs LoadGyrocopterBombs(ObjectDatabaseBase db)
        {
            var ability = new GyrocopterBombs(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual HardenedSkin LoadHardenedSkin(ObjectDatabaseBase db)
        {
            var ability = new HardenedSkin(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,ally";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToReduceDamage[1] = 100f;
            ability.DataChanceToReduceDamage[2] = 0f;
            ability.DataChanceToReduceDamage[3] = 0f;
            ability.DataChanceToReduceDamage[4] = 0f;
            ability.DataMinimumDamage[1] = 3f;
            ability.DataMinimumDamage[2] = 0f;
            ability.DataMinimumDamage[3] = 0f;
            ability.DataMinimumDamage[4] = 0f;
            ability.DataIgnoredDamage[1] = 12f;
            ability.DataIgnoredDamage[2] = 0f;
            ability.DataIgnoredDamage[3] = 0f;
            ability.DataIgnoredDamage[4] = 0f;
            ability.DataIncludeRangedDamageRaw[1] = 1;
            ability.DataIncludeRangedDamageRaw[2] = 0;
            ability.DataIncludeRangedDamageRaw[3] = 0;
            ability.DataIncludeRangedDamageRaw[4] = 0;
            ability.DataIncludeMeleeDamageRaw[1] = 1;
            ability.DataIncludeMeleeDamageRaw[2] = 0;
            ability.DataIncludeMeleeDamageRaw[3] = 0;
            ability.DataIncludeMeleeDamageRaw[4] = 0;
            return ability;
        }

        protected virtual HardenedSkinNagaTurtle LoadHardenedSkinNagaTurtle(ObjectDatabaseBase db)
        {
            var ability = new HardenedSkinNagaTurtle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,ally";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Harvest LoadHarvest(ObjectDatabaseBase db)
        {
            var ability = new Harvest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 116f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageToTree[1] = 1;
            ability.DataDamageToTree[2] = 0;
            ability.DataDamageToTree[3] = 0;
            ability.DataDamageToTree[4] = 0;
            ability.DataLumberCapacity[1] = 10;
            ability.DataLumberCapacity[2] = 0;
            ability.DataLumberCapacity[3] = 0;
            ability.DataLumberCapacity[4] = 0;
            ability.DataGoldCapacity[1] = 10;
            ability.DataGoldCapacity[2] = 0;
            ability.DataGoldCapacity[3] = 0;
            ability.DataGoldCapacity[4] = 0;
            return ability;
        }

        protected virtual HarvestNaga LoadHarvestNaga(ObjectDatabaseBase db)
        {
            var ability = new HarvestNaga(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 116f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual HarvestLumber LoadHarvestLumber(ObjectDatabaseBase db)
        {
            var ability = new HarvestLumber(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.35f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 116f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageToTree[1] = 2;
            ability.DataDamageToTree[2] = 0;
            ability.DataDamageToTree[3] = 0;
            ability.DataDamageToTree[4] = 0;
            ability.DataLumberCapacity[1] = 20;
            ability.DataLumberCapacity[2] = 0;
            ability.DataLumberCapacity[3] = 0;
            ability.DataLumberCapacity[4] = 0;
            return ability;
        }

        protected virtual HarvestLumberShredder LoadHarvestLumberShredder(ObjectDatabaseBase db)
        {
            var ability = new HarvestLumberShredder(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.35f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 116f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageToTree[1] = 10;
            ability.DataDamageToTree[2] = 0;
            ability.DataDamageToTree[3] = 0;
            ability.DataDamageToTree[4] = 0;
            ability.DataLumberCapacity[1] = 200;
            ability.DataLumberCapacity[2] = 0;
            ability.DataLumberCapacity[3] = 0;
            ability.DataLumberCapacity[4] = 0;
            return ability;
        }

        protected virtual HarvestLumberArchGhouls LoadHarvestLumberArchGhouls(ObjectDatabaseBase db)
        {
            var ability = new HarvestLumberArchGhouls(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.35f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 116f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageToTree[1] = 5;
            ability.DataDamageToTree[2] = 0;
            ability.DataDamageToTree[3] = 0;
            ability.DataDamageToTree[4] = 0;
            ability.DataLumberCapacity[1] = 50;
            ability.DataLumberCapacity[2] = 0;
            ability.DataLumberCapacity[3] = 0;
            ability.DataLumberCapacity[4] = 0;
            return ability;
        }

        protected virtual Heal LoadHeal(ObjectDatabaseBase db)
        {
            var ability = new Heal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,nonancient,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhea";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 25f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            return ability;
        }

        protected virtual HealCreepNormal_Anhe LoadHealCreepNormal_Anhe(ObjectDatabaseBase db)
        {
            var ability = new HealCreepNormal_Anhe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,nonancient,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhea";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 15f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            return ability;
        }

        protected virtual HealCreepNormal_Anh1 LoadHealCreepNormal_Anh1(ObjectDatabaseBase db)
        {
            var ability = new HealCreepNormal_Anh1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,nonancient,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhea";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 12f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            return ability;
        }

        protected virtual HealCreepHigh LoadHealCreepHigh(ObjectDatabaseBase db)
        {
            var ability = new HealCreepHigh(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,nonancient,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhea";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 25f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            return ability;
        }

        protected virtual HealingWard_Ahwd LoadHealingWard_Ahwd(ObjectDatabaseBase db)
        {
            var ability = new HealingWard_Ahwd(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 200;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhwd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "ohwd";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual HealingWardCreep LoadHealingWardCreep(ObjectDatabaseBase db)
        {
            var ability = new HealingWardCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 200;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhwd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "ohwd";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual HealingWaveCreep LoadHealingWaveCreep(ObjectDatabaseBase db)
        {
            var ability = new HealingWaveCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 215f;
            ability.DataDamagePerTarget[2] = 0f;
            ability.DataDamagePerTarget[3] = 0f;
            ability.DataDamagePerTarget[4] = 0f;
            ability.DataNumberOfTargetsHit[1] = 4;
            ability.DataNumberOfTargetsHit[2] = 0;
            ability.DataNumberOfTargetsHit[3] = 0;
            ability.DataNumberOfTargetsHit[4] = 0;
            ability.DataDamageReductionPerTarget[1] = 0.25f;
            ability.DataDamageReductionPerTarget[2] = 0f;
            ability.DataDamageReductionPerTarget[3] = 0f;
            ability.DataDamageReductionPerTarget[4] = 0f;
            return ability;
        }

        protected virtual NullRoarSummoner LoadNullRoarSummoner(ObjectDatabaseBase db)
        {
            var ability = new NullRoarSummoner(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "notself";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 50f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual Hero LoadHero(ObjectDatabaseBase db)
        {
            var ability = new Hero(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual HexCreep LoadHexCreep(ObjectDatabaseBase db)
        {
            var ability = new HexCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 17f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOhx";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 99;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataMorphUnitsGroundRaw[1] = "npig,nsea,ncrb,nhmc,nrat";
            ability.DataMorphUnitsGroundRaw[2] = "-";
            ability.DataMorphUnitsGroundRaw[3] = "-";
            ability.DataMorphUnitsGroundRaw[4] = "-";
            ability.DataMorphUnitsAirRaw[1] = "nalb,nvul,nsno";
            ability.DataMorphUnitsAirRaw[2] = "-";
            ability.DataMorphUnitsAirRaw[3] = "-";
            ability.DataMorphUnitsAirRaw[4] = "-";
            ability.DataMorphUnitsAmphibiousRaw[1] = "nsha,npng";
            ability.DataMorphUnitsAmphibiousRaw[2] = "-";
            ability.DataMorphUnitsAmphibiousRaw[3] = "-";
            ability.DataMorphUnitsAmphibiousRaw[4] = "-";
            ability.DataMorphUnitsWaterRaw[1] = "nshw,npnw";
            ability.DataMorphUnitsWaterRaw[2] = "-";
            ability.DataMorphUnitsWaterRaw[3] = "-";
            ability.DataMorphUnitsWaterRaw[4] = "-";
            return ability;
        }

        protected virtual HowlOfTerror LoadHowlOfTerror(ObjectDatabaseBase db)
        {
            var ability = new HowlOfTerror(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNht";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ImmolationCreep LoadImmolationCreep(ObjectDatabaseBase db)
        {
            var ability = new ImmolationCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 220f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEim,BEia";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerInterval[1] = 10f;
            ability.DataDamagePerInterval[2] = 0f;
            ability.DataDamagePerInterval[3] = 0f;
            ability.DataDamagePerInterval[4] = 0f;
            ability.DataManaDrainedPerSecond[1] = 7f;
            ability.DataManaDrainedPerSecond[2] = 0f;
            ability.DataManaDrainedPerSecond[3] = 0f;
            ability.DataManaDrainedPerSecond[4] = 0f;
            ability.DataBufferManaRequired[1] = 10f;
            ability.DataBufferManaRequired[2] = 0f;
            ability.DataBufferManaRequired[3] = 0f;
            ability.DataBufferManaRequired[4] = 0f;
            return ability;
        }

        protected virtual ImpaleCreep LoadImpaleCreep(ObjectDatabaseBase db)
        {
            var ability = new ImpaleCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 11f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUim";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWaveDistance[1] = 600f;
            ability.DataWaveDistance[2] = 0f;
            ability.DataWaveDistance[3] = 0f;
            ability.DataWaveDistance[4] = 0f;
            ability.DataWaveTimeseconds[1] = 0.3f;
            ability.DataWaveTimeseconds[2] = 0f;
            ability.DataWaveTimeseconds[3] = 0f;
            ability.DataWaveTimeseconds[4] = 0f;
            ability.DataDamageDealt[1] = 50f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataAirTimeseconds[1] = 1f;
            ability.DataAirTimeseconds[2] = 0f;
            ability.DataAirTimeseconds[3] = 0f;
            ability.DataAirTimeseconds[4] = 0f;
            ability.DataUninterruptibleRaw[1] = 0;
            ability.DataUninterruptibleRaw[2] = 0;
            ability.DataUninterruptibleRaw[3] = 0;
            ability.DataUninterruptibleRaw[4] = 0;
            ability.DataAirborneTargetsVulnerableRaw[1] = 0;
            ability.DataAirborneTargetsVulnerableRaw[2] = 0;
            ability.DataAirborneTargetsVulnerableRaw[3] = 0;
            ability.DataAirborneTargetsVulnerableRaw[4] = 0;
            return ability;
        }

        protected virtual ImpalingBolt LoadImpalingBolt(ObjectDatabaseBase db)
        {
            var ability = new ImpalingBolt(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual InnerFire LoadInnerFire(ObjectDatabaseBase db)
        {
            var ability = new InnerFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 10;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,neutral,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 35;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Binf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.1f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 5;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataAutocastRange[1] = 500f;
            ability.DataAutocastRange[2] = 0f;
            ability.DataAutocastRange[3] = 0f;
            ability.DataAutocastRange[4] = 0f;
            ability.DataLifeRegenRate[1] = 0f;
            ability.DataLifeRegenRate[2] = 0f;
            ability.DataLifeRegenRate[3] = 0f;
            ability.DataLifeRegenRate[4] = 0f;
            return ability;
        }

        protected virtual InnerFireCreep LoadInnerFireCreep(ObjectDatabaseBase db)
        {
            var ability = new InnerFireCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 10;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,neutral,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Binf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.1f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 5;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataAutocastRange[1] = 500f;
            ability.DataAutocastRange[2] = 0f;
            ability.DataAutocastRange[3] = 0f;
            ability.DataAutocastRange[4] = 0f;
            ability.DataLifeRegenRate[1] = 0f;
            ability.DataLifeRegenRate[2] = 0f;
            ability.DataLifeRegenRate[3] = 0f;
            ability.DataLifeRegenRate[4] = 0f;
            return ability;
        }

        protected virtual Invisibility LoadInvisibility(ObjectDatabaseBase db)
        {
            var ability = new Invisibility(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,friend,nonsapper,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 120f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 120f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 300f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Binv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataTransitionTimeseconds[1] = 0f;
            ability.DataTransitionTimeseconds[2] = 0f;
            ability.DataTransitionTimeseconds[3] = 0f;
            ability.DataTransitionTimeseconds[4] = 0f;
            return ability;
        }

        protected virtual Inventory LoadInventory(ObjectDatabaseBase db)
        {
            var ability = new Inventory(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataItemCapacity[1] = 6;
            ability.DataItemCapacity[2] = 0;
            ability.DataItemCapacity[3] = 0;
            ability.DataItemCapacity[4] = 0;
            ability.DataDropItemsOnDeathRaw[1] = 0;
            ability.DataDropItemsOnDeathRaw[2] = 0;
            ability.DataDropItemsOnDeathRaw[3] = 0;
            ability.DataDropItemsOnDeathRaw[4] = 0;
            ability.DataCanUseItemsRaw[1] = 1;
            ability.DataCanUseItemsRaw[2] = 0;
            ability.DataCanUseItemsRaw[3] = 0;
            ability.DataCanUseItemsRaw[4] = 0;
            ability.DataCanGetItemsRaw[1] = 1;
            ability.DataCanGetItemsRaw[2] = 0;
            ability.DataCanGetItemsRaw[3] = 0;
            ability.DataCanGetItemsRaw[4] = 0;
            ability.DataCanDropItemsRaw[1] = 1;
            ability.DataCanDropItemsRaw[2] = 0;
            ability.DataCanDropItemsRaw[3] = 0;
            ability.DataCanDropItemsRaw[4] = 0;
            return ability;
        }

        protected virtual InventoryPackMule LoadInventoryPackMule(ObjectDatabaseBase db)
        {
            var ability = new InventoryPackMule(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataItemCapacity[1] = 4;
            ability.DataItemCapacity[2] = 0;
            ability.DataItemCapacity[3] = 0;
            ability.DataItemCapacity[4] = 0;
            ability.DataDropItemsOnDeathRaw[1] = 1;
            ability.DataDropItemsOnDeathRaw[2] = 0;
            ability.DataDropItemsOnDeathRaw[3] = 0;
            ability.DataDropItemsOnDeathRaw[4] = 0;
            ability.DataCanUseItemsRaw[1] = 0;
            ability.DataCanUseItemsRaw[2] = 0;
            ability.DataCanUseItemsRaw[3] = 0;
            ability.DataCanUseItemsRaw[4] = 0;
            ability.DataCanGetItemsRaw[1] = 1;
            ability.DataCanGetItemsRaw[2] = 0;
            ability.DataCanGetItemsRaw[3] = 0;
            ability.DataCanGetItemsRaw[4] = 0;
            ability.DataCanDropItemsRaw[1] = 1;
            ability.DataCanDropItemsRaw[2] = 0;
            ability.DataCanDropItemsRaw[3] = 0;
            ability.DataCanDropItemsRaw[4] = 0;
            return ability;
        }

        protected virtual Inventory2SlotUnitOrc LoadInventory2SlotUnitOrc(ObjectDatabaseBase db)
        {
            var ability = new Inventory2SlotUnitOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Inventory2SlotUnitHuman LoadInventory2SlotUnitHuman(ObjectDatabaseBase db)
        {
            var ability = new Inventory2SlotUnitHuman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Inventory2SlotUnitNightElf LoadInventory2SlotUnitNightElf(ObjectDatabaseBase db)
        {
            var ability = new Inventory2SlotUnitNightElf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Inventory2SlotUnitUndead LoadInventory2SlotUnitUndead(ObjectDatabaseBase db)
        {
            var ability = new Inventory2SlotUnitUndead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataItemCapacity[1] = 2;
            ability.DataItemCapacity[2] = 0;
            ability.DataItemCapacity[3] = 0;
            ability.DataItemCapacity[4] = 0;
            ability.DataDropItemsOnDeathRaw[1] = 1;
            ability.DataDropItemsOnDeathRaw[2] = 0;
            ability.DataDropItemsOnDeathRaw[3] = 0;
            ability.DataDropItemsOnDeathRaw[4] = 0;
            ability.DataCanUseItemsRaw[1] = 0;
            ability.DataCanUseItemsRaw[2] = 0;
            ability.DataCanUseItemsRaw[3] = 0;
            ability.DataCanUseItemsRaw[4] = 0;
            ability.DataCanGetItemsRaw[1] = 1;
            ability.DataCanGetItemsRaw[2] = 0;
            ability.DataCanGetItemsRaw[3] = 0;
            ability.DataCanGetItemsRaw[4] = 0;
            ability.DataCanDropItemsRaw[1] = 1;
            ability.DataCanDropItemsRaw[2] = 0;
            ability.DataCanDropItemsRaw[3] = 0;
            ability.DataCanDropItemsRaw[4] = 0;
            return ability;
        }

        protected virtual Invulnerable LoadInvulnerable(ObjectDatabaseBase db)
        {
            var ability = new Invulnerable(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual LightningAttack LoadLightningAttack(ObjectDatabaseBase db)
        {
            var ability = new LightningAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,ward,item,debris";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGraphicDelay[1] = 0.25f;
            ability.DataGraphicDelay[2] = 0f;
            ability.DataGraphicDelay[3] = 0f;
            ability.DataGraphicDelay[4] = 0f;
            ability.DataGraphicDuration[1] = 0.25f;
            ability.DataGraphicDuration[2] = 0f;
            ability.DataGraphicDuration[3] = 0f;
            ability.DataGraphicDuration[4] = 0f;
            return ability;
        }

        protected virtual LightningShield LoadLightningShield(ObjectDatabaseBase db)
        {
            var ability = new LightningShield(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 3f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 160f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Blsh,Blsa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 20f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual LightningShieldCreep LoadLightningShieldCreep(ObjectDatabaseBase db)
        {
            var ability = new LightningShieldCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 160f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Blsh,Blsa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 20f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual LiquidFire LoadLiquidFire(ObjectDatabaseBase db)
        {
            var ability = new LiquidFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bliq";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExtraDamagePerSecond[1] = 8f;
            ability.DataExtraDamagePerSecond[2] = 0f;
            ability.DataExtraDamagePerSecond[3] = 0f;
            ability.DataExtraDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedReduction[1] = 0f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.6f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            ability.DataRepairsAllowedRaw[1] = 0;
            ability.DataRepairsAllowedRaw[2] = 0;
            ability.DataRepairsAllowedRaw[3] = 0;
            ability.DataRepairsAllowedRaw[4] = 0;
            return ability;
        }

        protected virtual Load LoadLoad(ObjectDatabaseBase db)
        {
            var ability = new Load(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 80f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = null;
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual LoadBurrow LoadLoadBurrow(ObjectDatabaseBase db)
        {
            var ability = new LoadBurrow(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = "opeo";
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual LoadEntangledGoldMine LoadLoadEntangledGoldMine(ObjectDatabaseBase db)
        {
            var ability = new LoadEntangledGoldMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = "ewsp";
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual LoadNavies LoadLoadNavies(ObjectDatabaseBase db)
        {
            var ability = new LoadNavies(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 64f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAllowedUnitTypeRaw[1] = null;
            ability.DataAllowedUnitTypeRaw[2] = null;
            ability.DataAllowedUnitTypeRaw[3] = null;
            ability.DataAllowedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual LoadPilot LoadLoadPilot(ObjectDatabaseBase db)
        {
            var ability = new LoadPilot(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 80f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Locust LoadLocust(ObjectDatabaseBase db)
        {
            var ability = new Locust(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MagicDefense LoadMagicDefense(ObjectDatabaseBase db)
        {
            var ability = new MagicDefense(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageTaken[1] = 1f;
            ability.DataDamageTaken[2] = 0f;
            ability.DataDamageTaken[3] = 0f;
            ability.DataDamageTaken[4] = 0f;
            ability.DataDamageDealt[1] = 1f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0.33f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataMagicDamageReduction[1] = 0.33f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataChanceToDeflect[1] = 0f;
            ability.DataChanceToDeflect[2] = 0f;
            ability.DataChanceToDeflect[3] = 0f;
            ability.DataChanceToDeflect[4] = 0f;
            ability.DataDeflectDamageTakenPiercing[1] = 0f;
            ability.DataDeflectDamageTakenPiercing[2] = 0f;
            ability.DataDeflectDamageTakenPiercing[3] = 0f;
            ability.DataDeflectDamageTakenPiercing[4] = 0f;
            ability.DataDeflectDamageTakenSpells[1] = 0f;
            ability.DataDeflectDamageTakenSpells[2] = 0f;
            ability.DataDeflectDamageTakenSpells[3] = 0f;
            ability.DataDeflectDamageTakenSpells[4] = 0f;
            return ability;
        }

        protected virtual MagicImmunity_Amim LoadMagicImmunity_Amim(ObjectDatabaseBase db)
        {
            var ability = new MagicImmunity_Amim(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMagicDamageFactor[1] = 0f;
            ability.DataMagicDamageFactor[2] = 0f;
            ability.DataMagicDamageFactor[3] = 0f;
            ability.DataMagicDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual MagicImmunityCreep LoadMagicImmunityCreep(ObjectDatabaseBase db)
        {
            var ability = new MagicImmunityCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMagicDamageFactor[1] = 0f;
            ability.DataMagicDamageFactor[2] = 0f;
            ability.DataMagicDamageFactor[3] = 0f;
            ability.DataMagicDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual MagicImmunityArchimonde LoadMagicImmunityArchimonde(ObjectDatabaseBase db)
        {
            var ability = new MagicImmunityArchimonde(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMagicDamageFactor[1] = 0f;
            ability.DataMagicDamageFactor[2] = 0f;
            ability.DataMagicDamageFactor[3] = 0f;
            ability.DataMagicDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual MagicImmunityDragons LoadMagicImmunityDragons(ObjectDatabaseBase db)
        {
            var ability = new MagicImmunityDragons(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMagicDamageFactor[1] = 0f;
            ability.DataMagicDamageFactor[2] = 0f;
            ability.DataMagicDamageFactor[3] = 0f;
            ability.DataMagicDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual AerialShackles LoadAerialShackles(ObjectDatabaseBase db)
        {
            var ability = new AerialShackles(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 550f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bmlc,Bmlt";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 30f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual ManaBattery LoadManaBattery(ObjectDatabaseBase db)
        {
            var ability = new ManaBattery(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,invu,vuln,friend,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaGained[1] = 2f;
            ability.DataManaGained[2] = 0f;
            ability.DataManaGained[3] = 0f;
            ability.DataManaGained[4] = 0f;
            ability.DataHitPointsGained[1] = 0.5f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataAutocastRequirement[1] = 10f;
            ability.DataAutocastRequirement[2] = 0f;
            ability.DataAutocastRequirement[3] = 0f;
            ability.DataAutocastRequirement[4] = 0f;
            ability.DataWaterHeight[1] = 30f;
            ability.DataWaterHeight[2] = 0f;
            ability.DataWaterHeight[3] = 0f;
            ability.DataWaterHeight[4] = 0f;
            ability.DataRegenerateOnlyAtNightRaw[1] = 1;
            ability.DataRegenerateOnlyAtNightRaw[2] = 0;
            ability.DataRegenerateOnlyAtNightRaw[3] = 0;
            ability.DataRegenerateOnlyAtNightRaw[4] = 0;
            return ability;
        }

        protected virtual ManaBatteryObsidianStatue LoadManaBatteryObsidianStatue(ObjectDatabaseBase db)
        {
            var ability = new ManaBatteryObsidianStatue(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,invu,vuln,friend";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaGained[1] = 1f;
            ability.DataManaGained[2] = 0f;
            ability.DataManaGained[3] = 0f;
            ability.DataManaGained[4] = 0f;
            ability.DataHitPointsGained[1] = 0f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataAutocastRequirement[1] = 10f;
            ability.DataAutocastRequirement[2] = 0f;
            ability.DataAutocastRequirement[3] = 0f;
            ability.DataAutocastRequirement[4] = 0f;
            ability.DataWaterHeight[1] = -1f;
            ability.DataWaterHeight[2] = 0f;
            ability.DataWaterHeight[3] = 0f;
            ability.DataWaterHeight[4] = 0f;
            ability.DataRegenerateOnlyAtNightRaw[1] = 0;
            ability.DataRegenerateOnlyAtNightRaw[2] = 0;
            ability.DataRegenerateOnlyAtNightRaw[3] = 0;
            ability.DataRegenerateOnlyAtNightRaw[4] = 0;
            return ability;
        }

        protected virtual ManaBurnDemon_Amnb LoadManaBurnDemon_Amnb(ObjectDatabaseBase db)
        {
            var ability = new ManaBurnDemon_Amnb(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 450f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaDrained[1] = 100f;
            ability.DataMaxManaDrained[2] = 0f;
            ability.DataMaxManaDrained[3] = 0f;
            ability.DataMaxManaDrained[4] = 0f;
            ability.DataBoltDelay[1] = 0.25f;
            ability.DataBoltDelay[2] = 0f;
            ability.DataBoltDelay[3] = 0f;
            ability.DataBoltDelay[4] = 0f;
            ability.DataBoltLifetime[1] = 1f;
            ability.DataBoltLifetime[2] = 0f;
            ability.DataBoltLifetime[3] = 0f;
            ability.DataBoltLifetime[4] = 0f;
            return ability;
        }

        protected virtual ManaBurnDemon_Ambd LoadManaBurnDemon_Ambd(ObjectDatabaseBase db)
        {
            var ability = new ManaBurnDemon_Ambd(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 450f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaDrained[1] = 100f;
            ability.DataMaxManaDrained[2] = 0f;
            ability.DataMaxManaDrained[3] = 0f;
            ability.DataMaxManaDrained[4] = 0f;
            ability.DataBoltDelay[1] = 0.25f;
            ability.DataBoltDelay[2] = 0f;
            ability.DataBoltDelay[3] = 0f;
            ability.DataBoltDelay[4] = 0f;
            ability.DataBoltLifetime[1] = 1f;
            ability.DataBoltLifetime[2] = 0f;
            ability.DataBoltLifetime[3] = 0f;
            ability.DataBoltLifetime[4] = 0f;
            return ability;
        }

        protected virtual ManaBurnHotkeyB LoadManaBurnHotkeyB(ObjectDatabaseBase db)
        {
            var ability = new ManaBurnHotkeyB(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 450f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ManaFlare LoadManaFlare(ObjectDatabaseBase db)
        {
            var ability = new ManaFlare(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0.75f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 750f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bmfl,Bmfa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitDamagePerManaPoint[1] = 4f;
            ability.DataUnitDamagePerManaPoint[2] = 0f;
            ability.DataUnitDamagePerManaPoint[3] = 0f;
            ability.DataUnitDamagePerManaPoint[4] = 0f;
            ability.DataHeroDamagePerManaPoint[1] = 1f;
            ability.DataHeroDamagePerManaPoint[2] = 0f;
            ability.DataHeroDamagePerManaPoint[3] = 0f;
            ability.DataHeroDamagePerManaPoint[4] = 0f;
            ability.DataUnitMaximumDamage[1] = 100f;
            ability.DataUnitMaximumDamage[2] = 0f;
            ability.DataUnitMaximumDamage[3] = 0f;
            ability.DataUnitMaximumDamage[4] = 0f;
            ability.DataHeroMaximumDamage[1] = 50f;
            ability.DataHeroMaximumDamage[2] = 0f;
            ability.DataHeroMaximumDamage[3] = 0f;
            ability.DataHeroMaximumDamage[4] = 0f;
            ability.DataDamageCooldown[1] = 12f;
            ability.DataDamageCooldown[2] = 0f;
            ability.DataDamageCooldown[3] = 0f;
            ability.DataDamageCooldown[4] = 0f;
            ability.DataCasterOnlySplashRaw[1] = 1;
            ability.DataCasterOnlySplashRaw[2] = 0;
            ability.DataCasterOnlySplashRaw[3] = 0;
            ability.DataCasterOnlySplashRaw[4] = 0;
            return ability;
        }

        protected virtual ManaShieldCreep LoadManaShieldCreep(ObjectDatabaseBase db)
        {
            var ability = new ManaShieldCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 128f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNms";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPerHitPoint[1] = 2f;
            ability.DataManaPerHitPoint[2] = 0f;
            ability.DataManaPerHitPoint[3] = 0f;
            ability.DataManaPerHitPoint[4] = 0f;
            ability.DataDamageAbsorbed[1] = 1f;
            ability.DataDamageAbsorbed[2] = 0f;
            ability.DataDamageAbsorbed[3] = 0f;
            ability.DataDamageAbsorbed[4] = 0f;
            return ability;
        }

        protected virtual MeatDrop LoadMeatDrop(ObjectDatabaseBase db)
        {
            var ability = new MeatDrop(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MeatLoad LoadMeatLoad(ObjectDatabaseBase db)
        {
            var ability = new MeatLoad(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,dead,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Militia LoadMilitia(ObjectDatabaseBase db)
        {
            var ability = new Militia(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "hpea";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataAlternateFormUnitRaw[1] = "hmil";
            ability.DataAlternateFormUnitRaw[2] = "-";
            ability.DataAlternateFormUnitRaw[3] = "-";
            ability.DataAlternateFormUnitRaw[4] = "-";
            return ability;
        }

        protected virtual MilitiaConversion LoadMilitiaConversion(ObjectDatabaseBase db)
        {
            var ability = new MilitiaConversion(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 2000f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MindRot LoadMindRot(ObjectDatabaseBase db)
        {
            var ability = new MindRot(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNmr";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaDrainedPerSecond[1] = 5f;
            ability.DataManaDrainedPerSecond[2] = 0f;
            ability.DataManaDrainedPerSecond[3] = 0f;
            ability.DataManaDrainedPerSecond[4] = 0f;
            return ability;
        }

        protected virtual Mine LoadMine(ObjectDatabaseBase db)
        {
            var ability = new Mine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataActivationDelay[1] = 10f;
            ability.DataActivationDelay[2] = 0f;
            ability.DataActivationDelay[3] = 0f;
            ability.DataActivationDelay[4] = 0f;
            ability.DataInvisibilityTransitionTime[1] = 2f;
            ability.DataInvisibilityTransitionTime[2] = 0f;
            ability.DataInvisibilityTransitionTime[3] = 0f;
            ability.DataInvisibilityTransitionTime[4] = 0f;
            return ability;
        }

        protected virtual MonsoonCreep LoadMonsoonCreep(ObjectDatabaseBase db)
        {
            var ability = new MonsoonCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "ANmd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XNmo";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageDealt[1] = 20f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataDamageInterval[1] = 1.5f;
            ability.DataDamageInterval[2] = 0f;
            ability.DataDamageInterval[3] = 0f;
            ability.DataDamageInterval[4] = 0f;
            ability.DataBuildingReduction[1] = 0.35f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            return ability;
        }

        protected virtual MoonGlaive LoadMoonGlaive(ObjectDatabaseBase db)
        {
            var ability = new MoonGlaive(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MoonGlaiveNoResearch LoadMoonGlaiveNoResearch(ObjectDatabaseBase db)
        {
            var ability = new MoonGlaiveNoResearch(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Move LoadMove(ObjectDatabaseBase db)
        {
            var ability = new Move(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual NeutralBuilding LoadNeutralBuilding(ObjectDatabaseBase db)
        {
            var ability = new NeutralBuilding(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataActivationRadius[1] = 450f;
            ability.DataActivationRadius[2] = 0f;
            ability.DataActivationRadius[3] = 0f;
            ability.DataActivationRadius[4] = 0f;
            ability.DataInteractionTypeRaw[1] = 1;
            ability.DataInteractionTypeRaw[2] = 0;
            ability.DataInteractionTypeRaw[3] = 0;
            ability.DataInteractionTypeRaw[4] = 0;
            ability.DataShowSelectUnitButtonRaw[1] = 1;
            ability.DataShowSelectUnitButtonRaw[2] = 0;
            ability.DataShowSelectUnitButtonRaw[3] = 0;
            ability.DataShowSelectUnitButtonRaw[4] = 0;
            ability.DataShowUnitIndicatorRaw[1] = 1;
            ability.DataShowUnitIndicatorRaw[2] = 0;
            ability.DataShowUnitIndicatorRaw[3] = 0;
            ability.DataShowUnitIndicatorRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralBuildingAnyUnit LoadNeutralBuildingAnyUnit(ObjectDatabaseBase db)
        {
            var ability = new NeutralBuildingAnyUnit(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataActivationRadius[1] = 450f;
            ability.DataActivationRadius[2] = 0f;
            ability.DataActivationRadius[3] = 0f;
            ability.DataActivationRadius[4] = 0f;
            ability.DataInteractionTypeRaw[1] = 16;
            ability.DataInteractionTypeRaw[2] = 0;
            ability.DataInteractionTypeRaw[3] = 0;
            ability.DataInteractionTypeRaw[4] = 0;
            ability.DataShowSelectUnitButtonRaw[1] = 0;
            ability.DataShowSelectUnitButtonRaw[2] = 0;
            ability.DataShowSelectUnitButtonRaw[3] = 0;
            ability.DataShowSelectUnitButtonRaw[4] = 0;
            ability.DataShowUnitIndicatorRaw[1] = 0;
            ability.DataShowUnitIndicatorRaw[2] = 0;
            ability.DataShowUnitIndicatorRaw[3] = 0;
            ability.DataShowUnitIndicatorRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralDetectionRevealAbility LoadNeutralDetectionRevealAbility(ObjectDatabaseBase db)
        {
            var ability = new NeutralDetectionRevealAbility(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbdt";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldCost[1] = 50;
            ability.DataGoldCost[2] = 0;
            ability.DataGoldCost[3] = 0;
            ability.DataGoldCost[4] = 0;
            ability.DataLumberCost[1] = 0;
            ability.DataLumberCost[2] = 0;
            ability.DataLumberCost[3] = 0;
            ability.DataLumberCost[4] = 0;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralRegenManaOnly LoadNeutralRegenManaOnly(ObjectDatabaseBase db)
        {
            var ability = new NeutralRegenManaOnly(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountRegenerated[1] = 0.01f;
            ability.DataAmountRegenerated[2] = 0f;
            ability.DataAmountRegenerated[3] = 0f;
            ability.DataAmountRegenerated[4] = 0f;
            ability.DataPercentageRaw[1] = 1;
            ability.DataPercentageRaw[2] = 0;
            ability.DataPercentageRaw[3] = 0;
            ability.DataPercentageRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralRegenHealthOnly LoadNeutralRegenHealthOnly(ObjectDatabaseBase db)
        {
            var ability = new NeutralRegenHealthOnly(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAmountOfHitPointsRegenerated[1] = 0.01f;
            ability.DataAmountOfHitPointsRegenerated[2] = 0f;
            ability.DataAmountOfHitPointsRegenerated[3] = 0f;
            ability.DataAmountOfHitPointsRegenerated[4] = 0f;
            ability.DataPercentageRaw[1] = 1;
            ability.DataPercentageRaw[2] = 0;
            ability.DataPercentageRaw[3] = 0;
            ability.DataPercentageRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralSpell LoadNeutralSpell(ObjectDatabaseBase db)
        {
            var ability = new NeutralSpell(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldCost[1] = 50;
            ability.DataGoldCost[2] = 0;
            ability.DataGoldCost[3] = 0;
            ability.DataGoldCost[4] = 0;
            ability.DataLumberCost[1] = 0;
            ability.DataLumberCost[2] = 0;
            ability.DataLumberCost[3] = 0;
            ability.DataLumberCost[4] = 0;
            ability.DataBaseOrderIDRaw[1] = "neutralspell";
            ability.DataBaseOrderIDRaw[2] = "-";
            ability.DataBaseOrderIDRaw[3] = "-";
            ability.DataBaseOrderIDRaw[4] = "-";
            ability.DataChargeOwningPlayerRaw[1] = 1;
            ability.DataChargeOwningPlayerRaw[2] = 0;
            ability.DataChargeOwningPlayerRaw[3] = 0;
            ability.DataChargeOwningPlayerRaw[4] = 0;
            return ability;
        }

        protected virtual NeutralSpies LoadNeutralSpies(ObjectDatabaseBase db)
        {
            var ability = new NeutralSpies(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldCostPerStructure[1] = 100;
            ability.DataGoldCostPerStructure[2] = 0;
            ability.DataGoldCostPerStructure[3] = 0;
            ability.DataGoldCostPerStructure[4] = 0;
            ability.DataLumberCostPerUse[1] = 0;
            ability.DataLumberCostPerUse[2] = 0;
            ability.DataLumberCostPerUse[3] = 0;
            ability.DataLumberCostPerUse[4] = 0;
            ability.DataDetectionTypeRaw[1] = 1;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual OrbOfAnnihilation LoadOrbOfAnnihilation(ObjectDatabaseBase db)
        {
            var ability = new OrbOfAnnihilation(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 450f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 15f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataMediumDamageFactor[1] = 0.45f;
            ability.DataMediumDamageFactor[2] = 0f;
            ability.DataMediumDamageFactor[3] = 0f;
            ability.DataMediumDamageFactor[4] = 0f;
            ability.DataSmallDamageFactor[1] = 0.25f;
            ability.DataSmallDamageFactor[2] = 0f;
            ability.DataSmallDamageFactor[3] = 0f;
            ability.DataSmallDamageFactor[4] = 0f;
            ability.DataFullDamageRadius[1] = 1f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataHalfDamageRadius[1] = 75f;
            ability.DataHalfDamageRadius[2] = 0f;
            ability.DataHalfDamageRadius[3] = 0f;
            ability.DataHalfDamageRadius[4] = 0f;
            return ability;
        }

        protected virtual OrbOfAnnihilationQuillSpray LoadOrbOfAnnihilationQuillSpray(ObjectDatabaseBase db)
        {
            var ability = new OrbOfAnnihilationQuillSpray(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 15;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 175f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OnFire LoadOnFire(ObjectDatabaseBase db)
        {
            var ability = new OnFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OnFireHuman LoadOnFireHuman(ObjectDatabaseBase db)
        {
            var ability = new OnFireHuman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OnFireOrc LoadOnFireOrc(ObjectDatabaseBase db)
        {
            var ability = new OnFireOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OnFireNightElf LoadOnFireNightElf(ObjectDatabaseBase db)
        {
            var ability = new OnFireNightElf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OnFireUndead LoadOnFireUndead(ObjectDatabaseBase db)
        {
            var ability = new OnFireUndead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Parasite LoadParasite(ObjectDatabaseBase db)
        {
            var ability = new Parasite(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 90f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNpa,BNpm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 5f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 8;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            ability.DataUnitTypeRaw[1] = "ncfs";
            ability.DataUnitTypeRaw[2] = null;
            ability.DataUnitTypeRaw[3] = null;
            ability.DataUnitTypeRaw[4] = null;
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 0;
            ability.DataSummonedUnitCount[3] = 0;
            ability.DataSummonedUnitCount[4] = 0;
            ability.DataSummonedUnitDuration[1] = 90f;
            ability.DataSummonedUnitDuration[2] = 0f;
            ability.DataSummonedUnitDuration[3] = 0f;
            ability.DataSummonedUnitDuration[4] = 0f;
            return ability;
        }

        protected virtual ParasiteEredar LoadParasiteEredar(ObjectDatabaseBase db)
        {
            var ability = new ParasiteEredar(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 90f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNpa,BNpm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PermanentImmolation LoadPermanentImmolation(ObjectDatabaseBase db)
        {
            var ability = new PermanentImmolation(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 220f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNpi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerInterval[1] = 10f;
            ability.DataDamagePerInterval[2] = 0f;
            ability.DataDamagePerInterval[3] = 0f;
            ability.DataDamagePerInterval[4] = 0f;
            ability.DataManaDrainedPerSecond[1] = 0f;
            ability.DataManaDrainedPerSecond[2] = 0f;
            ability.DataManaDrainedPerSecond[3] = 0f;
            ability.DataManaDrainedPerSecond[4] = 0f;
            ability.DataBufferManaRequired[1] = 0f;
            ability.DataBufferManaRequired[2] = 0f;
            ability.DataBufferManaRequired[3] = 0f;
            ability.DataBufferManaRequired[4] = 0f;
            return ability;
        }

        protected virtual PermanentImmolationFlying LoadPermanentImmolationFlying(ObjectDatabaseBase db)
        {
            var ability = new PermanentImmolationFlying(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 220f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNpi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerInterval[1] = 20f;
            ability.DataDamagePerInterval[2] = 0f;
            ability.DataDamagePerInterval[3] = 0f;
            ability.DataDamagePerInterval[4] = 0f;
            ability.DataManaDrainedPerSecond[1] = 0f;
            ability.DataManaDrainedPerSecond[2] = 0f;
            ability.DataManaDrainedPerSecond[3] = 0f;
            ability.DataManaDrainedPerSecond[4] = 0f;
            ability.DataBufferManaRequired[1] = 0f;
            ability.DataBufferManaRequired[2] = 0f;
            ability.DataBufferManaRequired[3] = 0f;
            ability.DataBufferManaRequired[4] = 0f;
            return ability;
        }

        protected virtual PermanentImmolationGraphic LoadPermanentImmolationGraphic(ObjectDatabaseBase db)
        {
            var ability = new PermanentImmolationGraphic(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 220f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerInterval[1] = 10f;
            ability.DataDamagePerInterval[2] = 0f;
            ability.DataDamagePerInterval[3] = 0f;
            ability.DataDamagePerInterval[4] = 0f;
            ability.DataManaDrainedPerSecond[1] = 0f;
            ability.DataManaDrainedPerSecond[2] = 0f;
            ability.DataManaDrainedPerSecond[3] = 0f;
            ability.DataManaDrainedPerSecond[4] = 0f;
            ability.DataBufferManaRequired[1] = 0f;
            ability.DataBufferManaRequired[2] = 0f;
            ability.DataBufferManaRequired[3] = 0f;
            ability.DataBufferManaRequired[4] = 0f;
            return ability;
        }

        protected virtual PermanentInvisibility LoadPermanentInvisibility(ObjectDatabaseBase db)
        {
            var ability = new PermanentInvisibility(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAutoAcquireAttackTargetsRaw[1] = 1;
            ability.DataAutoAcquireAttackTargetsRaw[2] = 0;
            ability.DataAutoAcquireAttackTargetsRaw[3] = 0;
            ability.DataAutoAcquireAttackTargetsRaw[4] = 0;
            return ability;
        }

        protected virtual PhaseShift LoadPhaseShift(ObjectDatabaseBase db)
        {
            var ability = new PhaseShift(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6.5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 20;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpsh";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedReduction[1] = 0f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            return ability;
        }

        protected virtual Phoenix LoadPhoenix(ObjectDatabaseBase db)
        {
            var ability = new Phoenix(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0.7f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "hphx";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 7;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0.5f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0.5f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "hpxe";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual PhoenixFire LoadPhoenixFire(ObjectDatabaseBase db)
        {
            var ability = new PhoenixFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0.5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInitialDamage[1] = 20f;
            ability.DataInitialDamage[2] = 0f;
            ability.DataInitialDamage[3] = 0f;
            ability.DataInitialDamage[4] = 0f;
            ability.DataDamagePerSecond[1] = 2f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual PlagueToss LoadPlagueToss(ObjectDatabaseBase db)
        {
            var ability = new PlagueToss(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,structure,debris,tree,wall,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "uplg";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual PoisonAttack LoadPoisonAttack(ObjectDatabaseBase db)
        {
            var ability = new PoisonAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpoi,Bpsd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 1;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual Polymorph LoadPolymorph(ObjectDatabaseBase db)
        {
            var ability = new Polymorph(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 3f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 220;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bply";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataMorphUnitsGroundRaw[1] = "nshe";
            ability.DataMorphUnitsGroundRaw[2] = "-";
            ability.DataMorphUnitsGroundRaw[3] = "-";
            ability.DataMorphUnitsGroundRaw[4] = "-";
            ability.DataMorphUnitsAirRaw[1] = "nshf";
            ability.DataMorphUnitsAirRaw[2] = "-";
            ability.DataMorphUnitsAirRaw[3] = "-";
            ability.DataMorphUnitsAirRaw[4] = "-";
            ability.DataMorphUnitsAmphibiousRaw[1] = "nsha";
            ability.DataMorphUnitsAmphibiousRaw[2] = "-";
            ability.DataMorphUnitsAmphibiousRaw[3] = "-";
            ability.DataMorphUnitsAmphibiousRaw[4] = "-";
            ability.DataMorphUnitsWaterRaw[1] = "nshw";
            ability.DataMorphUnitsWaterRaw[2] = "-";
            ability.DataMorphUnitsWaterRaw[3] = "-";
            ability.DataMorphUnitsWaterRaw[4] = "-";
            return ability;
        }

        protected virtual PolymorphCreep LoadPolymorphCreep(ObjectDatabaseBase db)
        {
            var ability = new PolymorphCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 25f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 25f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 220;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bply";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataMorphUnitsGroundRaw[1] = "nshe";
            ability.DataMorphUnitsGroundRaw[2] = "-";
            ability.DataMorphUnitsGroundRaw[3] = "-";
            ability.DataMorphUnitsGroundRaw[4] = "-";
            ability.DataMorphUnitsAirRaw[1] = "nshf";
            ability.DataMorphUnitsAirRaw[2] = "-";
            ability.DataMorphUnitsAirRaw[3] = "-";
            ability.DataMorphUnitsAirRaw[4] = "-";
            ability.DataMorphUnitsAmphibiousRaw[1] = "nsha";
            ability.DataMorphUnitsAmphibiousRaw[2] = "-";
            ability.DataMorphUnitsAmphibiousRaw[3] = "-";
            ability.DataMorphUnitsAmphibiousRaw[4] = "-";
            ability.DataMorphUnitsWaterRaw[1] = "nshw";
            ability.DataMorphUnitsWaterRaw[2] = "-";
            ability.DataMorphUnitsWaterRaw[3] = "-";
            ability.DataMorphUnitsWaterRaw[4] = "-";
            return ability;
        }

        protected virtual Possession LoadPossession(ObjectDatabaseBase db)
        {
            var ability = new Possession(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            return ability;
        }

        protected virtual PossessionCreep LoadPossessionCreep(ObjectDatabaseBase db)
        {
            var ability = new PossessionCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            return ability;
        }

        protected virtual PossessionChanneling LoadPossessionChanneling(ObjectDatabaseBase db)
        {
            var ability = new PossessionChanneling(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,nonhero,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 4.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 250;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpos,Bpoc";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            ability.DataDamageAmplification[1] = 1.66f;
            ability.DataDamageAmplification[2] = 0f;
            ability.DataDamageAmplification[3] = 0f;
            ability.DataDamageAmplification[4] = 0f;
            ability.DataTargetIsInvulnerableRaw[1] = 1;
            ability.DataTargetIsInvulnerableRaw[2] = 0;
            ability.DataTargetIsInvulnerableRaw[3] = 0;
            ability.DataTargetIsInvulnerableRaw[4] = 0;
            ability.DataTargetIsMagicImmuneRaw[1] = 1;
            ability.DataTargetIsMagicImmuneRaw[2] = 0;
            ability.DataTargetIsMagicImmuneRaw[3] = 0;
            ability.DataTargetIsMagicImmuneRaw[4] = 0;
            return ability;
        }

        protected virtual Pulverize LoadPulverize(ObjectDatabaseBase db)
        {
            var ability = new Pulverize(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToStomp[1] = 25f;
            ability.DataChanceToStomp[2] = 25f;
            ability.DataChanceToStomp[3] = 0f;
            ability.DataChanceToStomp[4] = 0f;
            ability.DataDamageDealt[1] = 20f;
            ability.DataDamageDealt[2] = 60f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataFullDamageRadius[1] = 250f;
            ability.DataFullDamageRadius[2] = 250f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataHalfDamageRadius[1] = 350f;
            ability.DataHalfDamageRadius[2] = 350f;
            ability.DataHalfDamageRadius[3] = 0f;
            ability.DataHalfDamageRadius[4] = 0f;
            return ability;
        }

        protected virtual PulverizeSeaGiant LoadPulverizeSeaGiant(ObjectDatabaseBase db)
        {
            var ability = new PulverizeSeaGiant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToStomp[1] = 20f;
            ability.DataChanceToStomp[2] = 0f;
            ability.DataChanceToStomp[3] = 0f;
            ability.DataChanceToStomp[4] = 0f;
            ability.DataDamageDealt[1] = 40f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataFullDamageRadius[1] = 150f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataHalfDamageRadius[1] = 250f;
            ability.DataHalfDamageRadius[2] = 0f;
            ability.DataHalfDamageRadius[3] = 0f;
            ability.DataHalfDamageRadius[4] = 0f;
            return ability;
        }

        protected virtual PurchaseItem LoadPurchaseItem(ObjectDatabaseBase db)
        {
            var ability = new PurchaseItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Purge_Aprg LoadPurge_Aprg(ObjectDatabaseBase db)
        {
            var ability = new Purge_Aprg(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,vuln,invu,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 65;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementUpdateFrequency[1] = 5;
            ability.DataMovementUpdateFrequency[2] = 0;
            ability.DataMovementUpdateFrequency[3] = 0;
            ability.DataMovementUpdateFrequency[4] = 0;
            ability.DataAttackUpdateFrequency[1] = 0;
            ability.DataAttackUpdateFrequency[2] = 0;
            ability.DataAttackUpdateFrequency[3] = 0;
            ability.DataAttackUpdateFrequency[4] = 0;
            ability.DataSummonedUnitDamage[1] = 400f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataUnitPauseDuration[1] = 0f;
            ability.DataUnitPauseDuration[2] = 0f;
            ability.DataUnitPauseDuration[3] = 0f;
            ability.DataUnitPauseDuration[4] = 0f;
            ability.DataHeroPauseDuration[1] = 0f;
            ability.DataHeroPauseDuration[2] = 0f;
            ability.DataHeroPauseDuration[3] = 0f;
            ability.DataHeroPauseDuration[4] = 0f;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual Purge_Apg2 LoadPurge_Apg2(ObjectDatabaseBase db)
        {
            var ability = new Purge_Apg2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,vuln,invu,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 65;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual PurgeCreep LoadPurgeCreep(ObjectDatabaseBase db)
        {
            var ability = new PurgeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,vuln,invu,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementUpdateFrequency[1] = 5;
            ability.DataMovementUpdateFrequency[2] = 0;
            ability.DataMovementUpdateFrequency[3] = 0;
            ability.DataMovementUpdateFrequency[4] = 0;
            ability.DataAttackUpdateFrequency[1] = 0;
            ability.DataAttackUpdateFrequency[2] = 0;
            ability.DataAttackUpdateFrequency[3] = 0;
            ability.DataAttackUpdateFrequency[4] = 0;
            ability.DataSummonedUnitDamage[1] = 200f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataUnitPauseDuration[1] = 0f;
            ability.DataUnitPauseDuration[2] = 0f;
            ability.DataUnitPauseDuration[3] = 0f;
            ability.DataUnitPauseDuration[4] = 0f;
            ability.DataHeroPauseDuration[1] = 0f;
            ability.DataHeroPauseDuration[2] = 0f;
            ability.DataHeroPauseDuration[3] = 0f;
            ability.DataHeroPauseDuration[4] = 0f;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual RainOfFireCreep LoadRainOfFireCreep(ObjectDatabaseBase db)
        {
            var ability = new RainOfFireCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNrd,BNrf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XErf";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfWaves[1] = 6;
            ability.DataNumberOfWaves[2] = 0;
            ability.DataNumberOfWaves[3] = 0;
            ability.DataNumberOfWaves[4] = 0;
            ability.DataDamage[1] = 25f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataNumberOfShards[1] = 6;
            ability.DataNumberOfShards[2] = 0;
            ability.DataNumberOfShards[3] = 0;
            ability.DataNumberOfShards[4] = 0;
            ability.DataBuildingReduction[1] = 0.5f;
            ability.DataBuildingReduction[2] = 0f;
            ability.DataBuildingReduction[3] = 0f;
            ability.DataBuildingReduction[4] = 0f;
            ability.DataDamagePerSecond[1] = 0f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMaximumDamagePerWave[1] = 0f;
            ability.DataMaximumDamagePerWave[2] = 0f;
            ability.DataMaximumDamagePerWave[3] = 0f;
            ability.DataMaximumDamagePerWave[4] = 0f;
            return ability;
        }

        protected virtual RainOfFireCreepGreater LoadRainOfFireCreepGreater(ObjectDatabaseBase db)
        {
            var ability = new RainOfFireCreepGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNrd,BNrf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XErf";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RaiseDead LoadRaiseDead(ObjectDatabaseBase db)
        {
            var ability = new RaiseDead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "dead";
            ability.StatsTargetsAllowedRaw[2] = "dead";
            ability.StatsTargetsAllowedRaw[3] = "dead";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 45f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 45f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 75;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 900f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 600f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brai";
            ability.StatsBuffsRaw[2] = "Brai";
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitsSummonedTypeOne[1] = 2;
            ability.DataUnitsSummonedTypeOne[2] = 1;
            ability.DataUnitsSummonedTypeOne[3] = 0;
            ability.DataUnitsSummonedTypeOne[4] = 0;
            ability.DataUnitsSummonedTypeTwo[1] = 0;
            ability.DataUnitsSummonedTypeTwo[2] = 1;
            ability.DataUnitsSummonedTypeTwo[3] = 0;
            ability.DataUnitsSummonedTypeTwo[4] = 0;
            ability.DataUnitTypeOneRaw[1] = "uske";
            ability.DataUnitTypeOneRaw[2] = "uske";
            ability.DataUnitTypeOneRaw[3] = "-";
            ability.DataUnitTypeOneRaw[4] = "-";
            ability.DataUnitTypeTwoRaw[1] = "-";
            ability.DataUnitTypeTwoRaw[2] = "uskm";
            ability.DataUnitTypeTwoRaw[3] = "-";
            ability.DataUnitTypeTwoRaw[4] = "-";
            ability.DataUnitTypeForLimitCheckRaw[1] = "uske";
            ability.DataUnitTypeForLimitCheckRaw[2] = "uske";
            ability.DataUnitTypeForLimitCheckRaw[3] = null;
            ability.DataUnitTypeForLimitCheckRaw[4] = null;
            return ability;
        }

        protected virtual RaiseDeadCreep LoadRaiseDeadCreep(ObjectDatabaseBase db)
        {
            var ability = new RaiseDeadCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brai";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitsSummonedTypeOne[1] = 2;
            ability.DataUnitsSummonedTypeOne[2] = 0;
            ability.DataUnitsSummonedTypeOne[3] = 0;
            ability.DataUnitsSummonedTypeOne[4] = 0;
            ability.DataUnitsSummonedTypeTwo[1] = 0;
            ability.DataUnitsSummonedTypeTwo[2] = 0;
            ability.DataUnitsSummonedTypeTwo[3] = 0;
            ability.DataUnitsSummonedTypeTwo[4] = 0;
            ability.DataUnitTypeOneRaw[1] = "uske";
            ability.DataUnitTypeOneRaw[2] = "-";
            ability.DataUnitTypeOneRaw[3] = "-";
            ability.DataUnitTypeOneRaw[4] = "-";
            ability.DataUnitTypeTwoRaw[1] = "-";
            ability.DataUnitTypeTwoRaw[2] = "-";
            ability.DataUnitTypeTwoRaw[3] = "-";
            ability.DataUnitTypeTwoRaw[4] = "-";
            ability.DataUnitTypeForLimitCheckRaw[1] = "uske";
            ability.DataUnitTypeForLimitCheckRaw[2] = null;
            ability.DataUnitTypeForLimitCheckRaw[3] = null;
            ability.DataUnitTypeForLimitCheckRaw[4] = null;
            return ability;
        }

        protected virtual Rally LoadRally(ObjectDatabaseBase db)
        {
            var ability = new Rally(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 0;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RavenFormDruid LoadRavenFormDruid(ObjectDatabaseBase db)
        {
            var ability = new RavenFormDruid(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1.05f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "edot";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 5;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 1f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 1f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "edtm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual RavenFormMedivh LoadRavenFormMedivh(ObjectDatabaseBase db)
        {
            var ability = new RavenFormMedivh(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 1.05f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "nmed";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 5;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 1f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 1f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "nmdm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual ReincarnationCreep LoadReincarnationCreep(ObjectDatabaseBase db)
        {
            var ability = new ReincarnationCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataReincarnationDelay[1] = 7f;
            ability.DataReincarnationDelay[2] = 0f;
            ability.DataReincarnationDelay[3] = 0f;
            ability.DataReincarnationDelay[4] = 0f;
            return ability;
        }

        protected virtual ReincarnationGeneric LoadReincarnationGeneric(ObjectDatabaseBase db)
        {
            var ability = new ReincarnationGeneric(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ReinforcedBurrows LoadReinforcedBurrows(ObjectDatabaseBase db)
        {
            var ability = new ReinforcedBurrows(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Rejuvination LoadRejuvination(ObjectDatabaseBase db)
        {
            var ability = new Rejuvination(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brej";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 400f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataManaPointsGained[1] = 0f;
            ability.DataManaPointsGained[2] = 0f;
            ability.DataManaPointsGained[3] = 0f;
            ability.DataManaPointsGained[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 3;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 0;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            return ability;
        }

        protected virtual RejuvinationCreep LoadRejuvinationCreep(ObjectDatabaseBase db)
        {
            var ability = new RejuvinationCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brej";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 400f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataManaPointsGained[1] = 0f;
            ability.DataManaPointsGained[2] = 0f;
            ability.DataManaPointsGained[3] = 0f;
            ability.DataManaPointsGained[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 3;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 0;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            return ability;
        }

        protected virtual RejuvinationFurbolg LoadRejuvinationFurbolg(ObjectDatabaseBase db)
        {
            var ability = new RejuvinationFurbolg(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,vuln,invu,self,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 150;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brej";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 400f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataManaPointsGained[1] = 0f;
            ability.DataManaPointsGained[2] = 0f;
            ability.DataManaPointsGained[3] = 0f;
            ability.DataManaPointsGained[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 3;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 0;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            return ability;
        }

        protected virtual Renew LoadRenew(ObjectDatabaseBase db)
        {
            var ability = new Renew(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "friend,ground,air,structure,bridge,alive,dead,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRepairCostRatio[1] = 0.35f;
            ability.DataRepairCostRatio[2] = 0f;
            ability.DataRepairCostRatio[3] = 0f;
            ability.DataRepairCostRatio[4] = 0f;
            ability.DataRepairTimeRatio[1] = 1.5f;
            ability.DataRepairTimeRatio[2] = 0f;
            ability.DataRepairTimeRatio[3] = 0f;
            ability.DataRepairTimeRatio[4] = 0f;
            ability.DataPowerbuildCost[1] = 0f;
            ability.DataPowerbuildCost[2] = 0f;
            ability.DataPowerbuildCost[3] = 0f;
            ability.DataPowerbuildCost[4] = 0f;
            ability.DataPowerbuildRate[1] = 0f;
            ability.DataPowerbuildRate[2] = 0f;
            ability.DataPowerbuildRate[3] = 0f;
            ability.DataPowerbuildRate[4] = 0f;
            ability.DataNavalRangeBonus[1] = 175f;
            ability.DataNavalRangeBonus[2] = 0f;
            ability.DataNavalRangeBonus[3] = 0f;
            ability.DataNavalRangeBonus[4] = 0f;
            return ability;
        }

        protected virtual RepairHuman LoadRepairHuman(ObjectDatabaseBase db)
        {
            var ability = new RepairHuman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "mechanical,friend,nonancient,ground,air,structure,bridge,alive,dead,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRepairCostRatio[1] = 0.35f;
            ability.DataRepairCostRatio[2] = 0f;
            ability.DataRepairCostRatio[3] = 0f;
            ability.DataRepairCostRatio[4] = 0f;
            ability.DataRepairTimeRatio[1] = 1.5f;
            ability.DataRepairTimeRatio[2] = 0f;
            ability.DataRepairTimeRatio[3] = 0f;
            ability.DataRepairTimeRatio[4] = 0f;
            ability.DataPowerbuildCost[1] = 0.15f;
            ability.DataPowerbuildCost[2] = 0f;
            ability.DataPowerbuildCost[3] = 0f;
            ability.DataPowerbuildCost[4] = 0f;
            ability.DataPowerbuildRate[1] = 0.6f;
            ability.DataPowerbuildRate[2] = 0f;
            ability.DataPowerbuildRate[3] = 0f;
            ability.DataPowerbuildRate[4] = 0f;
            ability.DataNavalRangeBonus[1] = 75f;
            ability.DataNavalRangeBonus[2] = 0f;
            ability.DataNavalRangeBonus[3] = 0f;
            ability.DataNavalRangeBonus[4] = 0f;
            return ability;
        }

        protected virtual RepairOrc LoadRepairOrc(ObjectDatabaseBase db)
        {
            var ability = new RepairOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "mechanical,friend,nonancient,ground,air,structure,bridge,alive,dead,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRepairCostRatio[1] = 0.35f;
            ability.DataRepairCostRatio[2] = 0f;
            ability.DataRepairCostRatio[3] = 0f;
            ability.DataRepairCostRatio[4] = 0f;
            ability.DataRepairTimeRatio[1] = 1.5f;
            ability.DataRepairTimeRatio[2] = 0f;
            ability.DataRepairTimeRatio[3] = 0f;
            ability.DataRepairTimeRatio[4] = 0f;
            ability.DataPowerbuildCost[1] = 0f;
            ability.DataPowerbuildCost[2] = 0f;
            ability.DataPowerbuildCost[3] = 0f;
            ability.DataPowerbuildCost[4] = 0f;
            ability.DataPowerbuildRate[1] = 0f;
            ability.DataPowerbuildRate[2] = 0f;
            ability.DataPowerbuildRate[3] = 0f;
            ability.DataPowerbuildRate[4] = 0f;
            ability.DataNavalRangeBonus[1] = 75f;
            ability.DataNavalRangeBonus[2] = 0f;
            ability.DataNavalRangeBonus[3] = 0f;
            ability.DataNavalRangeBonus[4] = 0f;
            return ability;
        }

        protected virtual ReplenishLifeMana LoadReplenishLifeMana(ObjectDatabaseBase db)
        {
            var ability = new ReplenishLifeMana(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 6f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 6;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brpb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 25f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataManaPointsGained[1] = 25f;
            ability.DataManaPointsGained[2] = 0f;
            ability.DataManaPointsGained[3] = 0f;
            ability.DataManaPointsGained[4] = 0f;
            ability.DataMinimumLifeRequired[1] = 0f;
            ability.DataMinimumLifeRequired[2] = 0f;
            ability.DataMinimumLifeRequired[3] = 0f;
            ability.DataMinimumLifeRequired[4] = 0f;
            ability.DataMinimumManaRequired[1] = 0f;
            ability.DataMinimumManaRequired[2] = 0f;
            ability.DataMinimumManaRequired[3] = 0f;
            ability.DataMinimumManaRequired[4] = 0f;
            ability.DataMaximumUnitsChargedToCaster[1] = 5;
            ability.DataMaximumUnitsChargedToCaster[2] = 0;
            ability.DataMaximumUnitsChargedToCaster[3] = 0;
            ability.DataMaximumUnitsChargedToCaster[4] = 0;
            ability.DataMaximumUnitsAffected[1] = 6;
            ability.DataMaximumUnitsAffected[2] = 0;
            ability.DataMaximumUnitsAffected[3] = 0;
            ability.DataMaximumUnitsAffected[4] = 0;
            return ability;
        }

        protected virtual ReplenishLife LoadReplenishLife(ObjectDatabaseBase db)
        {
            var ability = new ReplenishLife(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 6f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 2;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brpl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 10f;
            ability.DataHitPointsGained[2] = 0f;
            ability.DataHitPointsGained[3] = 0f;
            ability.DataHitPointsGained[4] = 0f;
            ability.DataMinimumLifeRequired[1] = 0f;
            ability.DataMinimumLifeRequired[2] = 0f;
            ability.DataMinimumLifeRequired[3] = 0f;
            ability.DataMinimumLifeRequired[4] = 0f;
            ability.DataMaximumUnitsChargedToCaster[1] = 5;
            ability.DataMaximumUnitsChargedToCaster[2] = 0;
            ability.DataMaximumUnitsChargedToCaster[3] = 0;
            ability.DataMaximumUnitsChargedToCaster[4] = 0;
            ability.DataMaximumUnitsAffected[1] = 6;
            ability.DataMaximumUnitsAffected[2] = 0;
            ability.DataMaximumUnitsAffected[3] = 0;
            ability.DataMaximumUnitsAffected[4] = 0;
            return ability;
        }

        protected virtual ReplenishMana LoadReplenishMana(ObjectDatabaseBase db)
        {
            var ability = new ReplenishMana(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 6f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 2;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brpm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPointsGained[1] = 3f;
            ability.DataManaPointsGained[2] = 0f;
            ability.DataManaPointsGained[3] = 0f;
            ability.DataManaPointsGained[4] = 0f;
            ability.DataMinimumManaRequired[1] = 0f;
            ability.DataMinimumManaRequired[2] = 0f;
            ability.DataMinimumManaRequired[3] = 0f;
            ability.DataMinimumManaRequired[4] = 0f;
            ability.DataMaximumUnitsChargedToCaster[1] = 5;
            ability.DataMaximumUnitsChargedToCaster[2] = 0;
            ability.DataMaximumUnitsChargedToCaster[3] = 0;
            ability.DataMaximumUnitsChargedToCaster[4] = 0;
            ability.DataMaximumUnitsAffected[1] = 6;
            ability.DataMaximumUnitsAffected[2] = 0;
            ability.DataMaximumUnitsAffected[3] = 0;
            ability.DataMaximumUnitsAffected[4] = 0;
            return ability;
        }

        protected virtual ResistantSkin LoadResistantSkin(ObjectDatabaseBase db)
        {
            var ability = new ResistantSkin(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ResistantSkinCreep LoadResistantSkinCreep(ObjectDatabaseBase db)
        {
            var ability = new ResistantSkinCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ResistantSkin31PosCreep LoadResistantSkin31PosCreep(ObjectDatabaseBase db)
        {
            var ability = new ResistantSkin31PosCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Restoration LoadRestoration(ObjectDatabaseBase db)
        {
            var ability = new Restoration(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "mechanical,friend,nonancient,ground,air,structure,bridge,alive,dead,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 50f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRepairCostRatio[1] = 0.35f;
            ability.DataRepairCostRatio[2] = 0f;
            ability.DataRepairCostRatio[3] = 0f;
            ability.DataRepairCostRatio[4] = 0f;
            ability.DataRepairTimeRatio[1] = 1.5f;
            ability.DataRepairTimeRatio[2] = 0f;
            ability.DataRepairTimeRatio[3] = 0f;
            ability.DataRepairTimeRatio[4] = 0f;
            ability.DataPowerbuildCost[1] = 0f;
            ability.DataPowerbuildCost[2] = 0f;
            ability.DataPowerbuildCost[3] = 0f;
            ability.DataPowerbuildCost[4] = 0f;
            ability.DataPowerbuildRate[1] = 0f;
            ability.DataPowerbuildRate[2] = 0f;
            ability.DataPowerbuildRate[3] = 0f;
            ability.DataPowerbuildRate[4] = 0f;
            ability.DataNavalRangeBonus[1] = 175f;
            ability.DataNavalRangeBonus[2] = 0f;
            ability.DataNavalRangeBonus[3] = 0f;
            ability.DataNavalRangeBonus[4] = 0f;
            return ability;
        }

        protected virtual ReturnGold LoadReturnGold(ObjectDatabaseBase db)
        {
            var ability = new ReturnGold(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAcceptsGoldRaw[1] = 1;
            ability.DataAcceptsGoldRaw[2] = 0;
            ability.DataAcceptsGoldRaw[3] = 0;
            ability.DataAcceptsGoldRaw[4] = 0;
            ability.DataAcceptsLumberRaw[1] = 0;
            ability.DataAcceptsLumberRaw[2] = 0;
            ability.DataAcceptsLumberRaw[3] = 0;
            ability.DataAcceptsLumberRaw[4] = 0;
            return ability;
        }

        protected virtual ReturnGoldLumber LoadReturnGoldLumber(ObjectDatabaseBase db)
        {
            var ability = new ReturnGoldLumber(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAcceptsGoldRaw[1] = 1;
            ability.DataAcceptsGoldRaw[2] = 0;
            ability.DataAcceptsGoldRaw[3] = 0;
            ability.DataAcceptsGoldRaw[4] = 0;
            ability.DataAcceptsLumberRaw[1] = 1;
            ability.DataAcceptsLumberRaw[2] = 0;
            ability.DataAcceptsLumberRaw[3] = 0;
            ability.DataAcceptsLumberRaw[4] = 0;
            return ability;
        }

        protected virtual ReturnLumber LoadReturnLumber(ObjectDatabaseBase db)
        {
            var ability = new ReturnLumber(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAcceptsGoldRaw[1] = 0;
            ability.DataAcceptsGoldRaw[2] = 0;
            ability.DataAcceptsGoldRaw[3] = 0;
            ability.DataAcceptsGoldRaw[4] = 0;
            ability.DataAcceptsLumberRaw[1] = 1;
            ability.DataAcceptsLumberRaw[2] = 0;
            ability.DataAcceptsLumberRaw[3] = 0;
            ability.DataAcceptsLumberRaw[4] = 0;
            return ability;
        }

        protected virtual RevealArcaneTower LoadRevealArcaneTower(ObjectDatabaseBase db)
        {
            var ability = new RevealArcaneTower(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 180f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbdt";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Revenge LoadRevenge(ObjectDatabaseBase db)
        {
            var ability = new Revenge(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Revive LoadRevive(ObjectDatabaseBase db)
        {
            var ability = new Revive(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Roar_Aroa LoadRoar_Aroa(ObjectDatabaseBase db)
        {
            var ability = new Roar_Aroa(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.25f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual Roar_Ara2 LoadRoar_Ara2(ObjectDatabaseBase db)
        {
            var ability = new Roar_Ara2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.25f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual RoarCreepSkeletalOrc LoadRoarCreepSkeletalOrc(ObjectDatabaseBase db)
        {
            var ability = new RoarCreepSkeletalOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.25f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual RoarCreep LoadRoarCreep(ObjectDatabaseBase db)
        {
            var ability = new RoarCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.25f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual RocketAttack LoadRocketAttack(ObjectDatabaseBase db)
        {
            var ability = new RocketAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerTarget[1] = 25f;
            ability.DataDamagePerTarget[2] = 0f;
            ability.DataDamagePerTarget[3] = 0f;
            ability.DataDamagePerTarget[4] = 0f;
            ability.DataMaximumTotalDamage[1] = 630f;
            ability.DataMaximumTotalDamage[2] = 0f;
            ability.DataMaximumTotalDamage[3] = 0f;
            ability.DataMaximumTotalDamage[4] = 0f;
            ability.DataMaximumNumberOfTargets[1] = 9;
            ability.DataMaximumNumberOfTargets[2] = 0;
            ability.DataMaximumNumberOfTargets[3] = 0;
            ability.DataMaximumNumberOfTargets[4] = 0;
            return ability;
        }

        protected virtual RootAncients LoadRootAncients(ObjectDatabaseBase db)
        {
            var ability = new RootAncients(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRootedWeaponsRaw[1] = 1;
            ability.DataRootedWeaponsRaw[2] = 0;
            ability.DataRootedWeaponsRaw[3] = 0;
            ability.DataRootedWeaponsRaw[4] = 0;
            ability.DataUprootedWeaponsRaw[1] = 2;
            ability.DataUprootedWeaponsRaw[2] = 0;
            ability.DataUprootedWeaponsRaw[3] = 0;
            ability.DataUprootedWeaponsRaw[4] = 0;
            ability.DataRootedTurningRaw[1] = 0;
            ability.DataRootedTurningRaw[2] = 0;
            ability.DataRootedTurningRaw[3] = 0;
            ability.DataRootedTurningRaw[4] = 0;
            ability.DataUprootedDefenseTypeRaw[1] = 2;
            ability.DataUprootedDefenseTypeRaw[2] = 0;
            ability.DataUprootedDefenseTypeRaw[3] = 0;
            ability.DataUprootedDefenseTypeRaw[4] = 0;
            return ability;
        }

        protected virtual RootAncientProtector LoadRootAncientProtector(ObjectDatabaseBase db)
        {
            var ability = new RootAncientProtector(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRootedWeaponsRaw[1] = 2;
            ability.DataRootedWeaponsRaw[2] = 0;
            ability.DataRootedWeaponsRaw[3] = 0;
            ability.DataRootedWeaponsRaw[4] = 0;
            ability.DataUprootedWeaponsRaw[1] = 1;
            ability.DataUprootedWeaponsRaw[2] = 0;
            ability.DataUprootedWeaponsRaw[3] = 0;
            ability.DataUprootedWeaponsRaw[4] = 0;
            ability.DataRootedTurningRaw[1] = 0;
            ability.DataRootedTurningRaw[2] = 0;
            ability.DataRootedTurningRaw[3] = 0;
            ability.DataRootedTurningRaw[4] = 0;
            ability.DataUprootedDefenseTypeRaw[1] = 2;
            ability.DataUprootedDefenseTypeRaw[2] = 0;
            ability.DataUprootedDefenseTypeRaw[3] = 0;
            ability.DataUprootedDefenseTypeRaw[4] = 0;
            return ability;
        }

        protected virtual SacrificeSacrificialPit LoadSacrificeSacrificialPit(ObjectDatabaseBase db)
        {
            var ability = new SacrificeSacrificialPit(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,player,organic,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 75f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Pillage LoadPillage(ObjectDatabaseBase db)
        {
            var ability = new Pillage(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSalvageCostRatio[1] = 0.5f;
            ability.DataSalvageCostRatio[2] = 0f;
            ability.DataSalvageCostRatio[3] = 0f;
            ability.DataSalvageCostRatio[4] = 0f;
            ability.DataAccumulationStep[1] = 1;
            ability.DataAccumulationStep[2] = 0;
            ability.DataAccumulationStep[3] = 0;
            ability.DataAccumulationStep[4] = 0;
            return ability;
        }

        protected virtual SacrificeAcolyte LoadSacrificeAcolyte(ObjectDatabaseBase db)
        {
            var ability = new SacrificeAcolyte(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,player";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SearingArrowsCreep LoadSearingArrowsCreep(ObjectDatabaseBase db)
        {
            var ability = new SearingArrowsCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,structure,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 8;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 10f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            return ability;
        }

        protected virtual SelfDestruct LoadSelfDestruct(ObjectDatabaseBase db)
        {
            var ability = new SelfDestruct(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,tree,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageRadius[1] = 100f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 250f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataPartialDamageRadius[1] = 250f;
            ability.DataPartialDamageRadius[2] = 0f;
            ability.DataPartialDamageRadius[3] = 0f;
            ability.DataPartialDamageRadius[4] = 0f;
            ability.DataPartialDamageAmount[1] = 100f;
            ability.DataPartialDamageAmount[2] = 0f;
            ability.DataPartialDamageAmount[3] = 0f;
            ability.DataPartialDamageAmount[4] = 0f;
            ability.DataBuildingDamageFactor[1] = 3f;
            ability.DataBuildingDamageFactor[2] = 0f;
            ability.DataBuildingDamageFactor[3] = 0f;
            ability.DataBuildingDamageFactor[4] = 0f;
            ability.DataExplodesOnDeathRaw[1] = 0;
            ability.DataExplodesOnDeathRaw[2] = 0;
            ability.DataExplodesOnDeathRaw[3] = 0;
            ability.DataExplodesOnDeathRaw[4] = 0;
            return ability;
        }

        protected virtual SelfDestructClockwerkGoblins LoadSelfDestructClockwerkGoblins(ObjectDatabaseBase db)
        {
            var ability = new SelfDestructClockwerkGoblins(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExplodesOnDeathRaw[1] = 1;
            ability.DataExplodesOnDeathRaw[2] = 0;
            ability.DataExplodesOnDeathRaw[3] = 0;
            ability.DataExplodesOnDeathRaw[4] = 0;
            return ability;
        }

        protected virtual SelfDestruct2ClockwerkGoblins LoadSelfDestruct2ClockwerkGoblins(ObjectDatabaseBase db)
        {
            var ability = new SelfDestruct2ClockwerkGoblins(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExplodesOnDeathRaw[1] = 1;
            ability.DataExplodesOnDeathRaw[2] = 0;
            ability.DataExplodesOnDeathRaw[3] = 0;
            ability.DataExplodesOnDeathRaw[4] = 0;
            return ability;
        }

        protected virtual SelfDestruct3ClockwerkGoblins LoadSelfDestruct3ClockwerkGoblins(ObjectDatabaseBase db)
        {
            var ability = new SelfDestruct3ClockwerkGoblins(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExplodesOnDeathRaw[1] = 1;
            ability.DataExplodesOnDeathRaw[2] = 0;
            ability.DataExplodesOnDeathRaw[3] = 0;
            ability.DataExplodesOnDeathRaw[4] = 0;
            return ability;
        }

        protected virtual SellItem LoadSellItem(ObjectDatabaseBase db)
        {
            var ability = new SellItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SellUnit LoadSellUnit(ObjectDatabaseBase db)
        {
            var ability = new SellUnit(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Sentinel LoadSentinel(ObjectDatabaseBase db)
        {
            var ability = new Sentinel(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 120f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XEsn";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInFlightSightRadius[1] = 100f;
            ability.DataInFlightSightRadius[2] = 0f;
            ability.DataInFlightSightRadius[3] = 0f;
            ability.DataInFlightSightRadius[4] = 0f;
            ability.DataHoveringSightRadius[1] = 900f;
            ability.DataHoveringSightRadius[2] = 0f;
            ability.DataHoveringSightRadius[3] = 0f;
            ability.DataHoveringSightRadius[4] = 0f;
            ability.DataHoveringHeight[1] = 400f;
            ability.DataHoveringHeight[2] = 0f;
            ability.DataHoveringHeight[3] = 0f;
            ability.DataHoveringHeight[4] = 0f;
            ability.DataNumberOfOwls[1] = 1;
            ability.DataNumberOfOwls[2] = 0;
            ability.DataNumberOfOwls[3] = 0;
            ability.DataNumberOfOwls[4] = 0;
            ability.DataDurationOfOwls[1] = 300f;
            ability.DataDurationOfOwls[2] = 0f;
            ability.DataDurationOfOwls[3] = 0f;
            ability.DataDurationOfOwls[4] = 0f;
            return ability;
        }

        protected virtual SentinelNoResearch LoadSentinelNoResearch(ObjectDatabaseBase db)
        {
            var ability = new SentinelNoResearch(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XEsn";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SentryWard LoadSentryWard(ObjectDatabaseBase db)
        {
            var ability = new SentryWard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 600f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 600f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Beye";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "oeye";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual SerpentWardTentacleForgottenOne LoadSerpentWardTentacleForgottenOne(ObjectDatabaseBase db)
        {
            var ability = new SerpentWardTentacleForgottenOne(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 5;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOwd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nfgt";
            ability.DataSummonedUnitTypeRaw[2] = "-";
            ability.DataSummonedUnitTypeRaw[3] = null;
            ability.DataSummonedUnitTypeRaw[4] = null;
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 0;
            ability.DataSummonedUnitCount[3] = 0;
            ability.DataSummonedUnitCount[4] = 0;
            return ability;
        }

        protected virtual ShadowMeld LoadShadowMeld(ObjectDatabaseBase db)
        {
            var ability = new ShadowMeld(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFadeDuration[1] = 1.5f;
            ability.DataFadeDuration[2] = 0f;
            ability.DataFadeDuration[3] = 0f;
            ability.DataFadeDuration[4] = 0f;
            ability.DataDayNightDuration[1] = 2.5f;
            ability.DataDayNightDuration[2] = 0f;
            ability.DataDayNightDuration[3] = 0f;
            ability.DataDayNightDuration[4] = 0f;
            ability.DataActionDuration[1] = 0.5f;
            ability.DataActionDuration[2] = 0f;
            ability.DataActionDuration[3] = 0f;
            ability.DataActionDuration[4] = 0f;
            ability.DataPermanentCloakRaw[1] = 0;
            ability.DataPermanentCloakRaw[2] = 0;
            ability.DataPermanentCloakRaw[3] = 0;
            ability.DataPermanentCloakRaw[4] = 0;
            return ability;
        }

        protected virtual ShadowMeldItem LoadShadowMeldItem(ObjectDatabaseBase db)
        {
            var ability = new ShadowMeldItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFadeDuration[1] = 1.5f;
            ability.DataFadeDuration[2] = 0f;
            ability.DataFadeDuration[3] = 0f;
            ability.DataFadeDuration[4] = 0f;
            ability.DataDayNightDuration[1] = 2.5f;
            ability.DataDayNightDuration[2] = 0f;
            ability.DataDayNightDuration[3] = 0f;
            ability.DataDayNightDuration[4] = 0f;
            ability.DataActionDuration[1] = 0.5f;
            ability.DataActionDuration[2] = 0f;
            ability.DataActionDuration[3] = 0f;
            ability.DataActionDuration[4] = 0f;
            ability.DataPermanentCloakRaw[1] = 1;
            ability.DataPermanentCloakRaw[2] = 0;
            ability.DataPermanentCloakRaw[3] = 0;
            ability.DataPermanentCloakRaw[4] = 0;
            return ability;
        }

        protected virtual ShadowMeldInstant LoadShadowMeldInstant(ObjectDatabaseBase db)
        {
            var ability = new ShadowMeldInstant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFadeDuration[1] = 0.1f;
            ability.DataFadeDuration[2] = 0f;
            ability.DataFadeDuration[3] = 0f;
            ability.DataFadeDuration[4] = 0f;
            ability.DataDayNightDuration[1] = 2.5f;
            ability.DataDayNightDuration[2] = 0f;
            ability.DataDayNightDuration[3] = 0f;
            ability.DataDayNightDuration[4] = 0f;
            ability.DataActionDuration[1] = 0.5f;
            ability.DataActionDuration[2] = 0f;
            ability.DataActionDuration[3] = 0f;
            ability.DataActionDuration[4] = 0f;
            ability.DataPermanentCloakRaw[1] = 0;
            ability.DataPermanentCloakRaw[2] = 0;
            ability.DataPermanentCloakRaw[3] = 0;
            ability.DataPermanentCloakRaw[4] = 0;
            return ability;
        }

        protected virtual ShadowMeldAkama LoadShadowMeldAkama(ObjectDatabaseBase db)
        {
            var ability = new ShadowMeldAkama(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFadeDuration[1] = 0.1f;
            ability.DataFadeDuration[2] = 0f;
            ability.DataFadeDuration[3] = 0f;
            ability.DataFadeDuration[4] = 0f;
            ability.DataDayNightDuration[1] = 2.5f;
            ability.DataDayNightDuration[2] = 0f;
            ability.DataDayNightDuration[3] = 0f;
            ability.DataDayNightDuration[4] = 0f;
            ability.DataActionDuration[1] = 0.5f;
            ability.DataActionDuration[2] = 0f;
            ability.DataActionDuration[3] = 0f;
            ability.DataActionDuration[4] = 0f;
            return ability;
        }

        protected virtual ShadowStrikeCreep LoadShadowStrikeCreep(ObjectDatabaseBase db)
        {
            var ability = new ShadowStrikeCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 3f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15.1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15.1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 65;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 350f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEsh";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDecayingDamage[1] = 10f;
            ability.DataDecayingDamage[2] = 0f;
            ability.DataDecayingDamage[3] = 0f;
            ability.DataDecayingDamage[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0.9f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0.9f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataDecayPower[1] = 2f;
            ability.DataDecayPower[2] = 0f;
            ability.DataDecayPower[3] = 0f;
            ability.DataDecayPower[4] = 0f;
            ability.DataInitialDamage[1] = 75f;
            ability.DataInitialDamage[2] = 0f;
            ability.DataInitialDamage[3] = 0f;
            ability.DataInitialDamage[4] = 0f;
            return ability;
        }

        protected virtual ShockwaveCreep LoadShockwaveCreep(ObjectDatabaseBase db)
        {
            var ability = new ShockwaveCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOsh";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 75f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaximumDamage[1] = 99999f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            ability.DataDistance[1] = 800f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 150f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            return ability;
        }

        protected virtual ShockwaveTrap LoadShockwaveTrap(ObjectDatabaseBase db)
        {
            var ability = new ShockwaveTrap(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOsh";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 75f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataMaximumDamage[1] = 99999f;
            ability.DataMaximumDamage[2] = 0f;
            ability.DataMaximumDamage[3] = 0f;
            ability.DataMaximumDamage[4] = 0f;
            ability.DataDistance[1] = 2048f;
            ability.DataDistance[2] = 0f;
            ability.DataDistance[3] = 0f;
            ability.DataDistance[4] = 0f;
            ability.DataFinalArea[1] = 150f;
            ability.DataFinalArea[2] = 0f;
            ability.DataFinalArea[3] = 0f;
            ability.DataFinalArea[4] = 0f;
            return ability;
        }

        protected virtual GarithosShockWave LoadGarithosShockWave(ObjectDatabaseBase db)
        {
            var ability = new GarithosShockWave(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 3;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 8f;
            ability.StatsCooldown[3] = 8f;
            ability.StatsCooldown[4] = 8f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 100;
            ability.StatsManaCost[3] = 100;
            ability.StatsManaCost[4] = 100;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 150f;
            ability.StatsAreaOfEffect[3] = 150f;
            ability.StatsAreaOfEffect[4] = 150f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 700f;
            ability.StatsCastRange[3] = 700f;
            ability.StatsCastRange[4] = 700f;
            ability.StatsBuffsRaw[1] = "BOsh";
            ability.StatsBuffsRaw[2] = "BOsh";
            ability.StatsBuffsRaw[3] = "BOsh";
            ability.StatsBuffsRaw[4] = "BOsh";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SilenceCreep LoadSilenceCreep(ObjectDatabaseBase db)
        {
            var ability = new SilenceCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 8.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 8;
            ability.DataAttacksPreventedRaw[2] = 0;
            ability.DataAttacksPreventedRaw[3] = 0;
            ability.DataAttacksPreventedRaw[4] = 0;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataMovementSpeedModifier[1] = 0f;
            ability.DataMovementSpeedModifier[2] = 0f;
            ability.DataMovementSpeedModifier[3] = 0f;
            ability.DataMovementSpeedModifier[4] = 0f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual SiphonManaCreep LoadSiphonManaCreep(ObjectDatabaseBase db)
        {
            var ability = new SiphonManaCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 850f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdcb,Bdcl,Bdcm,Bdtb,Bdtl,Bdtm,Bdbb,Bdbl,Bdbm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeTransferredPerSecond[1] = 0f;
            ability.DataLifeTransferredPerSecond[2] = 0f;
            ability.DataLifeTransferredPerSecond[3] = 0f;
            ability.DataLifeTransferredPerSecond[4] = 0f;
            ability.DataManaTransferredPerSecond[1] = 0f;
            ability.DataManaTransferredPerSecond[2] = 0f;
            ability.DataManaTransferredPerSecond[3] = 0f;
            ability.DataManaTransferredPerSecond[4] = 0f;
            ability.DataBonusLifeFactor[1] = 0f;
            ability.DataBonusLifeFactor[2] = 0f;
            ability.DataBonusLifeFactor[3] = 0f;
            ability.DataBonusLifeFactor[4] = 0f;
            ability.DataBonusLifeDecay[1] = 0f;
            ability.DataBonusLifeDecay[2] = 0f;
            ability.DataBonusLifeDecay[3] = 0f;
            ability.DataBonusLifeDecay[4] = 0f;
            ability.DataBonusManaFactor[1] = 0f;
            ability.DataBonusManaFactor[2] = 0f;
            ability.DataBonusManaFactor[3] = 0f;
            ability.DataBonusManaFactor[4] = 0f;
            ability.DataBonusManaDecay[1] = 0f;
            ability.DataBonusManaDecay[2] = 0f;
            ability.DataBonusManaDecay[3] = 0f;
            ability.DataBonusManaDecay[4] = 0f;
            return ability;
        }

        protected virtual SleepCreep LoadSleepCreep(ObjectDatabaseBase db)
        {
            var ability = new SleepCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUsl,BUsp,Bust";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataStunDuration[1] = 2f;
            ability.DataStunDuration[2] = 0f;
            ability.DataStunDuration[3] = 0f;
            ability.DataStunDuration[4] = 0f;
            return ability;
        }

        protected virtual SleepAlways LoadSleepAlways(ObjectDatabaseBase db)
        {
            var ability = new SleepAlways(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSleepOnceRaw[1] = 0;
            ability.DataSleepOnceRaw[2] = 0;
            ability.DataSleepOnceRaw[3] = 0;
            ability.DataSleepOnceRaw[4] = 0;
            ability.DataAllowOnAnyPlayerSlotRaw[1] = 0;
            ability.DataAllowOnAnyPlayerSlotRaw[2] = 0;
            ability.DataAllowOnAnyPlayerSlotRaw[3] = 0;
            ability.DataAllowOnAnyPlayerSlotRaw[4] = 0;
            return ability;
        }

        protected virtual Slow_Aslo LoadSlow_Aslo(ObjectDatabaseBase db)
        {
            var ability = new Slow_Aslo(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 3;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bslo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedFactor[1] = 0.55f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0.25f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual SlowCreep LoadSlowCreep(ObjectDatabaseBase db)
        {
            var ability = new SlowCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 3;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bslo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedFactor[1] = 0.6f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0.25f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual SlowPoison LoadSlowPoison(ObjectDatabaseBase db)
        {
            var ability = new SlowPoison(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspo,Bssd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0.5f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0.25f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 1;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual SpawnSkeleton LoadSpawnSkeleton(ObjectDatabaseBase db)
        {
            var ability = new SpawnSkeleton(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnits[1] = 1;
            ability.DataNumberOfUnits[2] = 0;
            ability.DataNumberOfUnits[3] = 0;
            ability.DataNumberOfUnits[4] = 0;
            ability.DataUnitTypeRaw[1] = "nsce";
            ability.DataUnitTypeRaw[2] = "-";
            ability.DataUnitTypeRaw[3] = "-";
            ability.DataUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual SpawnSpiderling LoadSpawnSpiderling(ObjectDatabaseBase db)
        {
            var ability = new SpawnSpiderling(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnits[1] = 2;
            ability.DataNumberOfUnits[2] = 0;
            ability.DataNumberOfUnits[3] = 0;
            ability.DataNumberOfUnits[4] = 0;
            ability.DataUnitTypeRaw[1] = "nspd";
            ability.DataUnitTypeRaw[2] = "-";
            ability.DataUnitTypeRaw[3] = "-";
            ability.DataUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual SpawnSpider LoadSpawnSpider(ObjectDatabaseBase db)
        {
            var ability = new SpawnSpider(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnits[1] = 2;
            ability.DataNumberOfUnits[2] = 0;
            ability.DataNumberOfUnits[3] = 0;
            ability.DataNumberOfUnits[4] = 0;
            ability.DataUnitTypeRaw[1] = "nspr";
            ability.DataUnitTypeRaw[2] = "-";
            ability.DataUnitTypeRaw[3] = "-";
            ability.DataUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual SpawnHydra LoadSpawnHydra(ObjectDatabaseBase db)
        {
            var ability = new SpawnHydra(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnits[1] = 2;
            ability.DataNumberOfUnits[2] = 0;
            ability.DataNumberOfUnits[3] = 0;
            ability.DataNumberOfUnits[4] = 0;
            ability.DataUnitTypeRaw[1] = "nhyd";
            ability.DataUnitTypeRaw[2] = "-";
            ability.DataUnitTypeRaw[3] = "-";
            ability.DataUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual SpawnHydraHatchling LoadSpawnHydraHatchling(ObjectDatabaseBase db)
        {
            var ability = new SpawnHydraHatchling(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnits[1] = 2;
            ability.DataNumberOfUnits[2] = 0;
            ability.DataNumberOfUnits[3] = 0;
            ability.DataNumberOfUnits[4] = 0;
            ability.DataUnitTypeRaw[1] = "nhyh";
            ability.DataUnitTypeRaw[2] = "-";
            ability.DataUnitTypeRaw[3] = "-";
            ability.DataUnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual SpellSteal LoadSpellSteal(ObjectDatabaseBase db)
        {
            var ability = new SpellSteal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,enemy,neutral,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Sphere LoadSphere(ObjectDatabaseBase db)
        {
            var ability = new Sphere(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel1 LoadSphereSoVLevel1(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel2 LoadSphereSoVLevel2(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel3 LoadSphereSoVLevel3(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel4 LoadSphereSoVLevel4(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel5 LoadSphereSoVLevel5(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SphereSoVLevel6 LoadSphereSoVLevel6(ObjectDatabaseBase db)
        {
            var ability = new SphereSoVLevel6(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.01f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.01f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SpiderAttack LoadSpiderAttack(ObjectDatabaseBase db)
        {
            var ability = new SpiderAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,ward,item,structure,debris,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpiderCapacity[1] = 3;
            ability.DataSpiderCapacity[2] = 0;
            ability.DataSpiderCapacity[3] = 0;
            ability.DataSpiderCapacity[4] = 0;
            return ability;
        }

        protected virtual SpikedBarricades LoadSpikedBarricades(ObjectDatabaseBase db)
        {
            var ability = new SpikedBarricades(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SpiritLink LoadSpiritLink(ObjectDatabaseBase db)
        {
            var ability = new SpiritLink(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 75f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 75f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 750f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDistributedDamageFactor[1] = 0.5f;
            ability.DataDistributedDamageFactor[2] = 0f;
            ability.DataDistributedDamageFactor[3] = 0f;
            ability.DataDistributedDamageFactor[4] = 0f;
            ability.DataMaximumNumberOfTargets[1] = 4;
            ability.DataMaximumNumberOfTargets[2] = 0;
            ability.DataMaximumNumberOfTargets[3] = 0;
            ability.DataMaximumNumberOfTargets[4] = 0;
            return ability;
        }

        protected virtual StandDown LoadStandDown(ObjectDatabaseBase db)
        {
            var ability = new StandDown(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual StasisTrap LoadStasisTrap(ObjectDatabaseBase db)
        {
            var ability = new StasisTrap(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,neutral,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 150f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2.5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 100;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bsta";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataActivationDelay[1] = 9f;
            ability.DataActivationDelay[2] = 0f;
            ability.DataActivationDelay[3] = 0f;
            ability.DataActivationDelay[4] = 0f;
            ability.DataDetectionRadius[1] = 175f;
            ability.DataDetectionRadius[2] = 0f;
            ability.DataDetectionRadius[3] = 0f;
            ability.DataDetectionRadius[4] = 0f;
            ability.DataDetonationRadius[1] = 400f;
            ability.DataDetonationRadius[2] = 0f;
            ability.DataDetonationRadius[3] = 0f;
            ability.DataDetonationRadius[4] = 0f;
            ability.DataStunDuration[1] = 6f;
            ability.DataStunDuration[2] = 0f;
            ability.DataStunDuration[3] = 0f;
            ability.DataStunDuration[4] = 0f;
            ability.DataDetonationDelay[1] = 0.5f;
            ability.DataDetonationDelay[2] = 0f;
            ability.DataDetonationDelay[3] = 0f;
            ability.DataDetonationDelay[4] = 0f;
            ability.DataWardUnitTypeRaw[1] = "otot";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual StoneForm LoadStoneForm(ObjectDatabaseBase db)
        {
            var ability = new StoneForm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0.7f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = -1f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "ugar";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 7;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0.5f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataLandingDelayTime[1] = 0.5f;
            ability.DataLandingDelayTime[2] = 0f;
            ability.DataLandingDelayTime[3] = 0f;
            ability.DataLandingDelayTime[4] = 0f;
            ability.DataLifeRegenerationRateperSecond[1] = 8f;
            ability.DataLifeRegenerationRateperSecond[2] = 0f;
            ability.DataLifeRegenerationRateperSecond[3] = 0f;
            ability.DataLifeRegenerationRateperSecond[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "ugrm";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual StormHammers LoadStormHammers(ObjectDatabaseBase db)
        {
            var ability = new StormHammers(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SubmergeMyrmidon LoadSubmergeMyrmidon(ObjectDatabaseBase db)
        {
            var ability = new SubmergeMyrmidon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.67f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "nmyr";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "nmys";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual SubmergeRoyalGuard LoadSubmergeRoyalGuard(ObjectDatabaseBase db)
        {
            var ability = new SubmergeRoyalGuard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.7f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "nnrg";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "nnrs";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual SubmergeSnapDragon LoadSubmergeSnapDragon(ObjectDatabaseBase db)
        {
            var ability = new SubmergeSnapDragon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNormalFormUnitRaw[1] = "nsnp";
            ability.DataNormalFormUnitRaw[2] = "-";
            ability.DataNormalFormUnitRaw[3] = "-";
            ability.DataNormalFormUnitRaw[4] = "-";
            ability.DataMorphingFlagsRaw[1] = 1;
            ability.DataMorphingFlagsRaw[2] = 0;
            ability.DataMorphingFlagsRaw[3] = 0;
            ability.DataMorphingFlagsRaw[4] = 0;
            ability.DataAltitudeAdjustmentDuration[1] = 0f;
            ability.DataAltitudeAdjustmentDuration[2] = 0f;
            ability.DataAltitudeAdjustmentDuration[3] = 0f;
            ability.DataAltitudeAdjustmentDuration[4] = 0f;
            ability.DataAlternateFormUnitRaw[1] = "nsbs";
            ability.DataAlternateFormUnitRaw[2] = null;
            ability.DataAlternateFormUnitRaw[3] = null;
            ability.DataAlternateFormUnitRaw[4] = null;
            return ability;
        }

        protected virtual SummonLobstrokPrawns LoadSummonLobstrokPrawns(ObjectDatabaseBase db)
        {
            var ability = new SummonLobstrokPrawns(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNwm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SummonSeaElemental LoadSummonSeaElemental(ObjectDatabaseBase db)
        {
            var ability = new SummonSeaElemental(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 65f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 65f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 125;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHwe";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitTypeRaw[1] = "nsel";
            ability.DataSummonedUnitTypeRaw[2] = null;
            ability.DataSummonedUnitTypeRaw[3] = null;
            ability.DataSummonedUnitTypeRaw[4] = null;
            ability.DataSummonedUnitCount[1] = 1;
            ability.DataSummonedUnitCount[2] = 0;
            ability.DataSummonedUnitCount[3] = 0;
            ability.DataSummonedUnitCount[4] = 0;
            return ability;
        }

        protected virtual TankTurret LoadTankTurret(ObjectDatabaseBase db)
        {
            var ability = new TankTurret(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual TankUpgrade LoadTankUpgrade(ObjectDatabaseBase db)
        {
            var ability = new TankUpgrade(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewUnitTypeRaw[1] = "hrtt";
            ability.DataNewUnitTypeRaw[2] = null;
            ability.DataNewUnitTypeRaw[3] = null;
            ability.DataNewUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual Taunt LoadTaunt(ObjectDatabaseBase db)
        {
            var ability = new Taunt(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 14f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 450f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataPreferHostiles[1] = 10;
            ability.DataPreferHostiles[2] = 0;
            ability.DataPreferHostiles[3] = 0;
            ability.DataPreferHostiles[4] = 0;
            ability.DataPreferFriendlies[1] = 0;
            ability.DataPreferFriendlies[2] = 0;
            ability.DataPreferFriendlies[3] = 0;
            ability.DataPreferFriendlies[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            ability.DataNumberOfPulses[1] = 1;
            ability.DataNumberOfPulses[2] = 0;
            ability.DataNumberOfPulses[3] = 0;
            ability.DataNumberOfPulses[4] = 0;
            ability.DataIntervalBetweenPulses[1] = 3f;
            ability.DataIntervalBetweenPulses[2] = 0f;
            ability.DataIntervalBetweenPulses[3] = 0f;
            ability.DataIntervalBetweenPulses[4] = 0f;
            return ability;
        }

        protected virtual TauntCreep LoadTauntCreep(ObjectDatabaseBase db)
        {
            var ability = new TauntCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 14f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 450f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataPreferHostiles[1] = 10;
            ability.DataPreferHostiles[2] = 0;
            ability.DataPreferHostiles[3] = 0;
            ability.DataPreferHostiles[4] = 0;
            ability.DataPreferFriendlies[1] = 0;
            ability.DataPreferFriendlies[2] = 0;
            ability.DataPreferFriendlies[3] = 0;
            ability.DataPreferFriendlies[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            ability.DataNumberOfPulses[1] = 1;
            ability.DataNumberOfPulses[2] = 0;
            ability.DataNumberOfPulses[3] = 0;
            ability.DataNumberOfPulses[4] = 0;
            ability.DataIntervalBetweenPulses[1] = 3f;
            ability.DataIntervalBetweenPulses[2] = 0f;
            ability.DataIntervalBetweenPulses[3] = 0f;
            ability.DataIntervalBetweenPulses[4] = 0f;
            return ability;
        }

        protected virtual ThornyShieldCreep LoadThornyShieldCreep(ObjectDatabaseBase db)
        {
            var ability = new ThornyShieldCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUtt";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataReturnedDamageFactor[1] = 0.3f;
            ability.DataReturnedDamageFactor[2] = 0f;
            ability.DataReturnedDamageFactor[3] = 0f;
            ability.DataReturnedDamageFactor[4] = 0f;
            ability.DataReceivedDamageFactor[1] = 1f;
            ability.DataReceivedDamageFactor[2] = 0f;
            ability.DataReceivedDamageFactor[3] = 0f;
            ability.DataReceivedDamageFactor[4] = 0f;
            ability.DataDefenseBonus[1] = 0f;
            ability.DataDefenseBonus[2] = 0f;
            ability.DataDefenseBonus[3] = 0f;
            ability.DataDefenseBonus[4] = 0f;
            return ability;
        }

        protected virtual ThornyShieldDragonTurtle LoadThornyShieldDragonTurtle(ObjectDatabaseBase db)
        {
            var ability = new ThornyShieldDragonTurtle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUts";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ThornsAuraCreep LoadThornsAuraCreep(ObjectDatabaseBase db)
        {
            var ability = new ThornsAuraCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEah";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ThunderBoltCreep LoadThunderBoltCreep(ObjectDatabaseBase db)
        {
            var ability = new ThunderBoltCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 100f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            return ability;
        }

        protected virtual ThunderClapCreep LoadThunderClapCreep(ObjectDatabaseBase db)
        {
            var ability = new ThunderClapCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BCtc";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 70f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataExtraDamageToTarget[1] = 0f;
            ability.DataExtraDamageToTarget[2] = 0f;
            ability.DataExtraDamageToTarget[3] = 0f;
            ability.DataExtraDamageToTarget[4] = 0f;
            ability.DataMovementSpeedReduction[1] = 0.25f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.25f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            return ability;
        }

        protected virtual ThunderClapThunderLizard LoadThunderClapThunderLizard(ObjectDatabaseBase db)
        {
            var ability = new ThunderClapThunderLizard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BCtc";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 70f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataExtraDamageToTarget[1] = 0f;
            ability.DataExtraDamageToTarget[2] = 0f;
            ability.DataExtraDamageToTarget[3] = 0f;
            ability.DataExtraDamageToTarget[4] = 0f;
            ability.DataMovementSpeedReduction[1] = 0.25f;
            ability.DataMovementSpeedReduction[2] = 0f;
            ability.DataMovementSpeedReduction[3] = 0f;
            ability.DataMovementSpeedReduction[4] = 0f;
            ability.DataAttackSpeedReduction[1] = 0.25f;
            ability.DataAttackSpeedReduction[2] = 0f;
            ability.DataAttackSpeedReduction[3] = 0f;
            ability.DataAttackSpeedReduction[4] = 0f;
            return ability;
        }

        protected virtual TornadoDamage LoadTornadoDamage(ObjectDatabaseBase db)
        {
            var ability = new TornadoDamage(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 650f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Btdg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 14f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMediumDamageRadius[1] = 125f;
            ability.DataMediumDamageRadius[2] = 0f;
            ability.DataMediumDamageRadius[3] = 0f;
            ability.DataMediumDamageRadius[4] = 0f;
            ability.DataMediumDamagePerSecond[1] = 100f;
            ability.DataMediumDamagePerSecond[2] = 0f;
            ability.DataMediumDamagePerSecond[3] = 0f;
            ability.DataMediumDamagePerSecond[4] = 0f;
            ability.DataSmallDamageRadius[1] = 0f;
            ability.DataSmallDamageRadius[2] = 0f;
            ability.DataSmallDamageRadius[3] = 0f;
            ability.DataSmallDamageRadius[4] = 0f;
            ability.DataSmallDamagePerSecond[1] = 0f;
            ability.DataSmallDamagePerSecond[2] = 0f;
            ability.DataSmallDamagePerSecond[3] = 0f;
            ability.DataSmallDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual TornadoSpin LoadTornadoSpin(ObjectDatabaseBase db)
        {
            var ability = new TornadoSpin(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 275f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Btsp,Btsa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirTimeseconds[1] = 22f;
            ability.DataAirTimeseconds[2] = 0f;
            ability.DataAirTimeseconds[3] = 0f;
            ability.DataAirTimeseconds[4] = 0f;
            ability.DataMinimumHitIntervalseconds[1] = 3f;
            ability.DataMinimumHitIntervalseconds[2] = 0f;
            ability.DataMinimumHitIntervalseconds[3] = 0f;
            ability.DataMinimumHitIntervalseconds[4] = 0f;
            return ability;
        }

        protected virtual TornadoWander LoadTornadoWander(ObjectDatabaseBase db)
        {
            var ability = new TornadoWander(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "naga";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual TreeOfLifeForAttachingArt LoadTreeOfLifeForAttachingArt(ObjectDatabaseBase db)
        {
            var ability = new TreeOfLifeForAttachingArt(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Ultravision LoadUltravision(ObjectDatabaseBase db)
        {
            var ability = new Ultravision(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual UnholyAuraCreep LoadUnholyAuraCreep(ObjectDatabaseBase db)
        {
            var ability = new UnholyAuraCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUau";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.1f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataLifeRegenerationIncrease[1] = 0.5f;
            ability.DataLifeRegenerationIncrease[2] = 0f;
            ability.DataLifeRegenerationIncrease[3] = 0f;
            ability.DataLifeRegenerationIncrease[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual UnholyFrenzy LoadUnholyFrenzy(ObjectDatabaseBase db)
        {
            var ability = new UnholyFrenzy(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUhf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedBonus[1] = 0.75f;
            ability.DataAttackSpeedBonus[2] = 0f;
            ability.DataAttackSpeedBonus[3] = 0f;
            ability.DataAttackSpeedBonus[4] = 0f;
            ability.DataDamagePerSecond[1] = 2f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual UnholyFrenzyWarlock LoadUnholyFrenzyWarlock(ObjectDatabaseBase db)
        {
            var ability = new UnholyFrenzyWarlock(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 3f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUhf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedBonus[1] = 0.75f;
            ability.DataAttackSpeedBonus[2] = 0f;
            ability.DataAttackSpeedBonus[3] = 0f;
            ability.DataAttackSpeedBonus[4] = 0f;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual UnholyFrenzyCreep LoadUnholyFrenzyCreep(ObjectDatabaseBase db)
        {
            var ability = new UnholyFrenzyCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUhf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedBonus[1] = 0.75f;
            ability.DataAttackSpeedBonus[2] = 0f;
            ability.DataAttackSpeedBonus[3] = 0f;
            ability.DataAttackSpeedBonus[4] = 0f;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual InciteUnholyFrenzy LoadInciteUnholyFrenzy(ObjectDatabaseBase db)
        {
            var ability = new InciteUnholyFrenzy(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 175;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUhf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRequiresUndeadTargetRaw[1] = 1;
            ability.DataRequiresUndeadTargetRaw[2] = 0;
            ability.DataRequiresUndeadTargetRaw[3] = 0;
            ability.DataRequiresUndeadTargetRaw[4] = 0;
            ability.DataLeaveTargetAliveRaw[1] = 0;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            ability.DataTargetsAllowedForBuffRaw[1] = "air,ground,organic";
            ability.DataTargetsAllowedForBuffRaw[2] = "-";
            ability.DataTargetsAllowedForBuffRaw[3] = "-";
            ability.DataTargetsAllowedForBuffRaw[4] = "-";
            return ability;
        }

        protected virtual UnstableConcoction LoadUnstableConcoction(ObjectDatabaseBase db)
        {
            var ability = new UnstableConcoction(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,neutral,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataFullDamageRadius[1] = 0f;
            ability.DataFullDamageRadius[2] = 0f;
            ability.DataFullDamageRadius[3] = 0f;
            ability.DataFullDamageRadius[4] = 0f;
            ability.DataFullDamageAmount[1] = 600f;
            ability.DataFullDamageAmount[2] = 0f;
            ability.DataFullDamageAmount[3] = 0f;
            ability.DataFullDamageAmount[4] = 0f;
            ability.DataPartialDamageRadius[1] = 200f;
            ability.DataPartialDamageRadius[2] = 0f;
            ability.DataPartialDamageRadius[3] = 0f;
            ability.DataPartialDamageRadius[4] = 0f;
            ability.DataPartialDamageAmount[1] = 140f;
            ability.DataPartialDamageAmount[2] = 0f;
            ability.DataPartialDamageAmount[3] = 0f;
            ability.DataPartialDamageAmount[4] = 0f;
            ability.DataMaxDamage[1] = 0f;
            ability.DataMaxDamage[2] = 0f;
            ability.DataMaxDamage[3] = 0f;
            ability.DataMaxDamage[4] = 0f;
            ability.DataMoveSpeedBonus[1] = 280f;
            ability.DataMoveSpeedBonus[2] = 0f;
            ability.DataMoveSpeedBonus[3] = 0f;
            ability.DataMoveSpeedBonus[4] = 0f;
            return ability;
        }

        protected virtual Unsummon LoadUnsummon(ObjectDatabaseBase db)
        {
            var ability = new Unsummon(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,player";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSalvageCostRatio[1] = 0.5f;
            ability.DataSalvageCostRatio[2] = 0f;
            ability.DataSalvageCostRatio[3] = 0f;
            ability.DataSalvageCostRatio[4] = 0f;
            ability.DataAccumulationStep[1] = 50;
            ability.DataAccumulationStep[2] = 0;
            ability.DataAccumulationStep[3] = 0;
            ability.DataAccumulationStep[4] = 0;
            return ability;
        }

        protected virtual VampiricAttack_SCva LoadVampiricAttack_SCva(ObjectDatabaseBase db)
        {
            var ability = new VampiricAttack_SCva(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeStolenPerAttack[1] = 0.5f;
            ability.DataLifeStolenPerAttack[2] = 0f;
            ability.DataLifeStolenPerAttack[3] = 0f;
            ability.DataLifeStolenPerAttack[4] = 0f;
            return ability;
        }

        protected virtual VampiricAuraCreep LoadVampiricAuraCreep(ObjectDatabaseBase db)
        {
            var ability = new VampiricAuraCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUav";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackDamageStolen[1] = 0.2f;
            ability.DataAttackDamageStolen[2] = 0f;
            ability.DataAttackDamageStolen[3] = 0f;
            ability.DataAttackDamageStolen[4] = 0f;
            return ability;
        }

        protected virtual Vengeance LoadVengeance(ObjectDatabaseBase db)
        {
            var ability = new Vengeance(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 50f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 50f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 2f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bvng";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitsSummonedTypeOne[1] = 1;
            ability.DataUnitsSummonedTypeOne[2] = 0;
            ability.DataUnitsSummonedTypeOne[3] = 0;
            ability.DataUnitsSummonedTypeOne[4] = 0;
            ability.DataUnitsSummonedTypeTwo[1] = 0;
            ability.DataUnitsSummonedTypeTwo[2] = 0;
            ability.DataUnitsSummonedTypeTwo[3] = 0;
            ability.DataUnitsSummonedTypeTwo[4] = 0;
            ability.DataUnitTypeOneRaw[1] = "even";
            ability.DataUnitTypeOneRaw[2] = "-";
            ability.DataUnitTypeOneRaw[3] = "-";
            ability.DataUnitTypeOneRaw[4] = "-";
            ability.DataUnitTypeTwoRaw[1] = "-";
            ability.DataUnitTypeTwoRaw[2] = "-";
            ability.DataUnitTypeTwoRaw[3] = "-";
            ability.DataUnitTypeTwoRaw[4] = "-";
            ability.DataUnitTypeForLimitCheckRaw[1] = null;
            ability.DataUnitTypeForLimitCheckRaw[2] = null;
            ability.DataUnitTypeForLimitCheckRaw[3] = null;
            ability.DataUnitTypeForLimitCheckRaw[4] = null;
            ability.DataMaxUnitsSummoned[1] = 6;
            ability.DataMaxUnitsSummoned[2] = 0;
            ability.DataMaxUnitsSummoned[3] = 0;
            ability.DataMaxUnitsSummoned[4] = 0;
            ability.DataKillOnCasterDeathRaw[1] = 1;
            ability.DataKillOnCasterDeathRaw[2] = 0;
            ability.DataKillOnCasterDeathRaw[3] = 0;
            ability.DataKillOnCasterDeathRaw[4] = 0;
            return ability;
        }

        protected virtual Wander LoadWander(ObjectDatabaseBase db)
        {
            var ability = new Wander(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual WarStompCreep LoadWarStompCreep(ObjectDatabaseBase db)
        {
            var ability = new WarStompCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 25f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataTerrainDeformationAmplitude[1] = -50f;
            ability.DataTerrainDeformationAmplitude[2] = 0f;
            ability.DataTerrainDeformationAmplitude[3] = 0f;
            ability.DataTerrainDeformationAmplitude[4] = 0f;
            ability.DataTerrainDeformationDurationms[1] = 300;
            ability.DataTerrainDeformationDurationms[2] = 0;
            ability.DataTerrainDeformationDurationms[3] = 0;
            ability.DataTerrainDeformationDurationms[4] = 0;
            return ability;
        }

        protected virtual WarStompSeaGiant LoadWarStompSeaGiant(ObjectDatabaseBase db)
        {
            var ability = new WarStompSeaGiant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 25f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataTerrainDeformationAmplitude[1] = -50f;
            ability.DataTerrainDeformationAmplitude[2] = 0f;
            ability.DataTerrainDeformationAmplitude[3] = 0f;
            ability.DataTerrainDeformationAmplitude[4] = 0f;
            ability.DataTerrainDeformationDurationms[1] = 300;
            ability.DataTerrainDeformationDurationms[2] = 0;
            ability.DataTerrainDeformationDurationms[3] = 0;
            ability.DataTerrainDeformationDurationms[4] = 0;
            return ability;
        }

        protected virtual WarStompHydra LoadWarStompHydra(ObjectDatabaseBase db)
        {
            var ability = new WarStompHydra(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 6f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 90;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 25f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataTerrainDeformationAmplitude[1] = -50f;
            ability.DataTerrainDeformationAmplitude[2] = 0f;
            ability.DataTerrainDeformationAmplitude[3] = 0f;
            ability.DataTerrainDeformationAmplitude[4] = 0f;
            ability.DataTerrainDeformationDurationms[1] = 300;
            ability.DataTerrainDeformationDurationms[2] = 0;
            ability.DataTerrainDeformationDurationms[3] = 0;
            ability.DataTerrainDeformationDurationms[4] = 0;
            return ability;
        }

        protected virtual WindWalk LoadWindWalk(ObjectDatabaseBase db)
        {
            var ability = new WindWalk(db);
            ability.StatsHeroAbilityRaw = 1;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 1;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 7f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOwk";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBackstabDamageRaw[1] = 1;
            ability.DataBackstabDamageRaw[2] = 0;
            ability.DataBackstabDamageRaw[3] = 0;
            ability.DataBackstabDamageRaw[4] = 0;
            ability.DataStartCooldownWhenDecloakRaw[1] = 0;
            ability.DataStartCooldownWhenDecloakRaw[2] = 0;
            ability.DataStartCooldownWhenDecloakRaw[3] = 0;
            ability.DataStartCooldownWhenDecloakRaw[4] = 0;
            return ability;
        }

        protected virtual WispHarvest LoadWispHarvest(ObjectDatabaseBase db)
        {
            var ability = new WispHarvest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLumberPerInterval[1] = 5f;
            ability.DataLumberPerInterval[2] = 0f;
            ability.DataLumberPerInterval[3] = 0f;
            ability.DataLumberPerInterval[4] = 0f;
            ability.DataIntervalsBeforeChangingTrees[1] = 5;
            ability.DataIntervalsBeforeChangingTrees[2] = 0;
            ability.DataIntervalsBeforeChangingTrees[3] = 0;
            ability.DataIntervalsBeforeChangingTrees[4] = 0;
            ability.DataArtAttachmentHeight[1] = 150f;
            ability.DataArtAttachmentHeight[2] = 0f;
            ability.DataArtAttachmentHeight[3] = 0f;
            ability.DataArtAttachmentHeight[4] = 0f;
            return ability;
        }

        protected virtual WispHarvestInvulnerable LoadWispHarvestInvulnerable(ObjectDatabaseBase db)
        {
            var ability = new WispHarvestInvulnerable(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "tree,vuln,invu,alive,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 8f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 8f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLumberPerInterval[1] = 5f;
            ability.DataLumberPerInterval[2] = 0f;
            ability.DataLumberPerInterval[3] = 0f;
            ability.DataLumberPerInterval[4] = 0f;
            ability.DataIntervalsBeforeChangingTrees[1] = 5;
            ability.DataIntervalsBeforeChangingTrees[2] = 0;
            ability.DataIntervalsBeforeChangingTrees[3] = 0;
            ability.DataIntervalsBeforeChangingTrees[4] = 0;
            ability.DataArtAttachmentHeight[1] = 150f;
            ability.DataArtAttachmentHeight[2] = 0f;
            ability.DataArtAttachmentHeight[3] = 0f;
            ability.DataArtAttachmentHeight[4] = 0f;
            return ability;
        }

        protected virtual VenomSpears LoadVenomSpears(ObjectDatabaseBase db)
        {
            var ability = new VenomSpears(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 25f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpoi,Bpsd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 4f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 1;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual VenomSpearsCreep LoadVenomSpearsCreep(ObjectDatabaseBase db)
        {
            var ability = new VenomSpearsCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bpoi,Bpsd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 2f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 1;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual Warp LoadWarp(ObjectDatabaseBase db)
        {
            var ability = new Warp(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataTeleportAreaWidth[1] = 400f;
            ability.DataTeleportAreaWidth[2] = 0f;
            ability.DataTeleportAreaWidth[3] = 0f;
            ability.DataTeleportAreaWidth[4] = 0f;
            ability.DataTeleportAreaHeight[1] = 400f;
            ability.DataTeleportAreaHeight[2] = 0f;
            ability.DataTeleportAreaHeight[3] = 0f;
            ability.DataTeleportAreaHeight[4] = 0f;
            return ability;
        }

        protected virtual Web LoadWeb(ObjectDatabaseBase db)
        {
            var ability = new Web(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bwea,Bweb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirUnitLowerDuration[1] = 0.6f;
            ability.DataAirUnitLowerDuration[2] = 0f;
            ability.DataAirUnitLowerDuration[3] = 0f;
            ability.DataAirUnitLowerDuration[4] = 0f;
            ability.DataAirUnitHeight[1] = 200f;
            ability.DataAirUnitHeight[2] = 0f;
            ability.DataAirUnitHeight[3] = 0f;
            ability.DataAirUnitHeight[4] = 0f;
            ability.DataMeleeAttackRange[1] = 128f;
            ability.DataMeleeAttackRange[2] = 0f;
            ability.DataMeleeAttackRange[3] = 0f;
            ability.DataMeleeAttackRange[4] = 0f;
            return ability;
        }

        protected virtual WebCreep LoadWebCreep(ObjectDatabaseBase db)
        {
            var ability = new WebCreep(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "creeps";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 12f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bwea,Bweb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirUnitLowerDuration[1] = 0.6f;
            ability.DataAirUnitLowerDuration[2] = 0f;
            ability.DataAirUnitLowerDuration[3] = 0f;
            ability.DataAirUnitLowerDuration[4] = 0f;
            ability.DataAirUnitHeight[1] = 200f;
            ability.DataAirUnitHeight[2] = 0f;
            ability.DataAirUnitHeight[3] = 0f;
            ability.DataAirUnitHeight[4] = 0f;
            ability.DataMeleeAttackRange[1] = 128f;
            ability.DataMeleeAttackRange[2] = 0f;
            ability.DataMeleeAttackRange[3] = 0f;
            ability.DataMeleeAttackRange[4] = 0f;
            return ability;
        }

        protected virtual AgilityBonus1 LoadAgilityBonus1(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 1;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityBonus3 LoadAgilityBonus3(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 3;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityBonus4 LoadAgilityBonus4(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 4;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityBonus5 LoadAgilityBonus5(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 5;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityBonus6 LoadAgilityBonus6(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus6(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 6;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual CrownOfKingsAll5 LoadCrownOfKingsAll5(ObjectDatabaseBase db)
        {
            var ability = new CrownOfKingsAll5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 5;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 5;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 5;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual All1 LoadAll1(ObjectDatabaseBase db)
        {
            var ability = new All1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 1;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 1;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 1;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual All2 LoadAll2(ObjectDatabaseBase db)
        {
            var ability = new All2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 2;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 2;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 2;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthBonus1 LoadStrengthBonus1(ObjectDatabaseBase db)
        {
            var ability = new StrengthBonus1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 1;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthBonus3 LoadStrengthBonus3(ObjectDatabaseBase db)
        {
            var ability = new StrengthBonus3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 3;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthBonus4 LoadStrengthBonus4(ObjectDatabaseBase db)
        {
            var ability = new StrengthBonus4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 4;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthBonus5 LoadStrengthBonus5(ObjectDatabaseBase db)
        {
            var ability = new StrengthBonus5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 5;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthBonus6 LoadStrengthBonus6(ObjectDatabaseBase db)
        {
            var ability = new StrengthBonus6(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 6;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceBonus1 LoadIntelligenceBonus1(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceBonus1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 1;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceBonus3 LoadIntelligenceBonus3(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceBonus3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 3;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceBonus4 LoadIntelligenceBonus4(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceBonus4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 4;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceBonus5 LoadIntelligenceBonus5(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceBonus5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 5;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceBonus6 LoadIntelligenceBonus6(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceBonus6(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 6;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual PermanentAll1 LoadPermanentAll1(ObjectDatabaseBase db)
        {
            var ability = new PermanentAll1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 1;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 1;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 1;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityMod LoadAgilityMod(ObjectDatabaseBase db)
        {
            var ability = new AgilityMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 1;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceMod LoadIntelligenceMod(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 1;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthMod LoadStrengthMod(ObjectDatabaseBase db)
        {
            var ability = new StrengthMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 1;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AgilityMod2 LoadAgilityMod2(ObjectDatabaseBase db)
        {
            var ability = new AgilityMod2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 2;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual IntelligenceMod2 LoadIntelligenceMod2(ObjectDatabaseBase db)
        {
            var ability = new IntelligenceMod2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 2;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 0;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual StrengthMod2 LoadStrengthMod2(ObjectDatabaseBase db)
        {
            var ability = new StrengthMod2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 0;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 0;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 2;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual AttackMod LoadAttackMod(ObjectDatabaseBase db)
        {
            var ability = new AttackMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackModification[1] = 3;
            ability.DataAttackModification[2] = 0;
            ability.DataAttackModification[3] = 0;
            ability.DataAttackModification[4] = 0;
            return ability;
        }

        protected virtual AttackBonus_AIat LoadAttackBonus_AIat(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus_AIat(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 3;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus_AIt6 LoadAttackBonus_AIt6(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus_AIt6(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 6;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus_AIt9 LoadAttackBonus_AIt9(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus_AIt9(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 9;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus_AItc LoadAttackBonus_AItc(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus_AItc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 12;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus_AItf LoadAttackBonus_AItf(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus_AItf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 15;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus1 LoadAttackBonus1(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 1;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus2 LoadAttackBonus2(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 2;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus4 LoadAttackBonus4(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 4;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus5 LoadAttackBonus5(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 5;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus7 LoadAttackBonus7(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus7(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 7;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus8 LoadAttackBonus8(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus8(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 8;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual AttackBonus10 LoadAttackBonus10(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus10(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackBonus[1] = 10;
            ability.DataAttackBonus[2] = 0;
            ability.DataAttackBonus[3] = 0;
            ability.DataAttackBonus[4] = 0;
            return ability;
        }

        protected virtual VampiricAttack_AIva LoadVampiricAttack_AIva(ObjectDatabaseBase db)
        {
            var ability = new VampiricAttack_AIva(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeStolenPerAttack[1] = 0.5f;
            ability.DataLifeStolenPerAttack[2] = 0f;
            ability.DataLifeStolenPerAttack[3] = 0f;
            ability.DataLifeStolenPerAttack[4] = 0f;
            return ability;
        }

        protected virtual BlinkItem LoadBlinkItem(ObjectDatabaseBase db)
        {
            var ability = new BlinkItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.33f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyCastle LoadBuildTinyCastle(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyCastle(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[1] = "hcas,ofrt,unp2,etoe";
            ability.DataUnitCreatedperPlayerRaceRaw[2] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[3] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyGreatHall LoadBuildTinyGreatHall(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyGreatHall(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[1] = "htow,ogre,unpl,etol";
            ability.DataUnitCreatedperPlayerRaceRaw[2] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[3] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyScoutTower LoadBuildTinyScoutTower(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyScoutTower(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[1] = "hwtw,hwtw,hwtw,hwtw";
            ability.DataUnitCreatedperPlayerRaceRaw[2] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[3] = null;
            ability.DataUnitCreatedperPlayerRaceRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyBlacksmith LoadBuildTinyBlacksmith(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyBlacksmith(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyFarm LoadBuildTinyFarm(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyFarm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyLumberMill LoadBuildTinyLumberMill(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyLumberMill(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyBarracks LoadBuildTinyBarracks(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyBarracks(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BuildTinyAltar LoadBuildTinyAltar(ObjectDatabaseBase db)
        {
            var ability = new BuildTinyAltar(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Cyclone_AIcy LoadCyclone_AIcy(ObjectDatabaseBase db)
        {
            var ability = new Cyclone_AIcy(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5.6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcyc,Bcy2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataCanBeDispelledRaw[1] = 1;
            ability.DataCanBeDispelledRaw[2] = 0;
            ability.DataCanBeDispelledRaw[3] = 0;
            ability.DataCanBeDispelledRaw[4] = 0;
            return ability;
        }

        protected virtual DefenseBonus1 LoadDefenseBonus1(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus1(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 1;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            return ability;
        }

        protected virtual DefenseBonus2 LoadDefenseBonus2(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 2;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            return ability;
        }

        protected virtual DefenseBonus3 LoadDefenseBonus3(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 3;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            return ability;
        }

        protected virtual DefenseBonus4 LoadDefenseBonus4(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 4;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            return ability;
        }

        protected virtual DefenseBonus5 LoadDefenseBonus5(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus5(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 5;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            return ability;
        }

        protected virtual FortificationGlyph LoadFortificationGlyph(ObjectDatabaseBase db)
        {
            var ability = new FortificationGlyph(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUpgradeLevels[1] = 1;
            ability.DataUpgradeLevels[2] = 0;
            ability.DataUpgradeLevels[3] = 0;
            ability.DataUpgradeLevels[4] = 0;
            ability.DataUpgradeTypeRaw[1] = "Rgfo";
            ability.DataUpgradeTypeRaw[2] = null;
            ability.DataUpgradeTypeRaw[3] = null;
            ability.DataUpgradeTypeRaw[4] = null;
            return ability;
        }

        protected virtual UltraVisionGlyph LoadUltraVisionGlyph(ObjectDatabaseBase db)
        {
            var ability = new UltraVisionGlyph(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUpgradeLevels[1] = 1;
            ability.DataUpgradeLevels[2] = 1;
            ability.DataUpgradeLevels[3] = 0;
            ability.DataUpgradeLevels[4] = 0;
            ability.DataUpgradeTypeRaw[1] = "Rguv";
            ability.DataUpgradeTypeRaw[2] = "Reuv";
            ability.DataUpgradeTypeRaw[3] = null;
            ability.DataUpgradeTypeRaw[4] = null;
            return ability;
        }

        protected virtual ExperienceMod LoadExperienceMod(ObjectDatabaseBase db)
        {
            var ability = new ExperienceMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExperienceGained[1] = 100;
            ability.DataExperienceGained[2] = 0;
            ability.DataExperienceGained[3] = 0;
            ability.DataExperienceGained[4] = 0;
            return ability;
        }

        protected virtual ExperienceModGreater LoadExperienceModGreater(ObjectDatabaseBase db)
        {
            var ability = new ExperienceModGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExperienceGained[1] = 500;
            ability.DataExperienceGained[2] = 0;
            ability.DataExperienceGained[3] = 0;
            ability.DataExperienceGained[4] = 0;
            return ability;
        }

        protected virtual FigurineRedDrake LoadFigurineRedDrake(ObjectDatabaseBase db)
        {
            var ability = new FigurineRedDrake(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nrdr";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineFurbolg LoadFigurineFurbolg(ObjectDatabaseBase db)
        {
            var ability = new FigurineFurbolg(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nfrl";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineRockGolem LoadFigurineRockGolem(ObjectDatabaseBase db)
        {
            var ability = new FigurineRockGolem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "ngst";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineDoomGuard LoadFigurineDoomGuard(ObjectDatabaseBase db)
        {
            var ability = new FigurineDoomGuard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nba2";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineFelHound LoadFigurineFelHound(ObjectDatabaseBase db)
        {
            var ability = new FigurineFelHound(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nfel";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineSkeleton LoadFigurineSkeleton(ObjectDatabaseBase db)
        {
            var ability = new FigurineSkeleton(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 120f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 3;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nsce";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 3;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "nsca";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineIceRevenant LoadFigurineIceRevenant(ObjectDatabaseBase db)
        {
            var ability = new FigurineIceRevenant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nrvi";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineUrsaWarrior LoadFigurineUrsaWarrior(ObjectDatabaseBase db)
        {
            var ability = new FigurineUrsaWarrior(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nfra";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual Flag LoadFlag(ObjectDatabaseBase db)
        {
            var ability = new Flag(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlagHuman LoadFlagHuman(ObjectDatabaseBase db)
        {
            var ability = new FlagHuman(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlagOrc LoadFlagOrc(ObjectDatabaseBase db)
        {
            var ability = new FlagOrc(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlagNightElf LoadFlagNightElf(ObjectDatabaseBase db)
        {
            var ability = new FlagNightElf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlagUndead LoadFlagUndead(ObjectDatabaseBase db)
        {
            var ability = new FlagUndead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlagOrcBattleStandard LoadFlagOrcBattleStandard(ObjectDatabaseBase db)
        {
            var ability = new FlagOrcBattleStandard(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FlareGun LoadFlareGun(ObjectDatabaseBase db)
        {
            var ability = new FlareGun(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xfla";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 1;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            ability.DataDelayForTargetEffect[1] = 0.8f;
            ability.DataDelayForTargetEffect[2] = 0f;
            ability.DataDelayForTargetEffect[3] = 0f;
            ability.DataDelayForTargetEffect[4] = 0f;
            return ability;
        }

        protected virtual ItemInferno LoadItemInferno(ObjectDatabaseBase db)
        {
            var ability = new ItemInferno(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,debris,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 4f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 250f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 900f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNin";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamage[1] = 50f;
            ability.DataDamage[2] = 0f;
            ability.DataDamage[3] = 0f;
            ability.DataDamage[4] = 0f;
            ability.DataDuration[1] = 180f;
            ability.DataDuration[2] = 0f;
            ability.DataDuration[3] = 0f;
            ability.DataDuration[4] = 0f;
            ability.DataImpactDelay[1] = 1f;
            ability.DataImpactDelay[2] = 0f;
            ability.DataImpactDelay[3] = 0f;
            ability.DataImpactDelay[4] = 0f;
            ability.DataSummonedUnitRaw[1] = "ninf";
            ability.DataSummonedUnitRaw[2] = null;
            ability.DataSummonedUnitRaw[3] = null;
            ability.DataSummonedUnitRaw[4] = null;
            return ability;
        }

        protected virtual LevelMod LoadLevelMod(ObjectDatabaseBase db)
        {
            var ability = new LevelMod(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLevelsGained[1] = 1;
            ability.DataLevelsGained[2] = 0;
            ability.DataLevelsGained[3] = 0;
            ability.DataLevelsGained[4] = 0;
            return ability;
        }

        protected virtual LightningPurge LoadLightningPurge(ObjectDatabaseBase db)
        {
            var ability = new LightningPurge(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementUpdateFrequency[1] = 2;
            ability.DataMovementUpdateFrequency[2] = 0;
            ability.DataMovementUpdateFrequency[3] = 0;
            ability.DataMovementUpdateFrequency[4] = 0;
            ability.DataAttackUpdateFrequency[1] = 0;
            ability.DataAttackUpdateFrequency[2] = 0;
            ability.DataAttackUpdateFrequency[3] = 0;
            ability.DataAttackUpdateFrequency[4] = 0;
            ability.DataSummonedUnitDamage[1] = 35f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataUnitPauseDuration[1] = 0f;
            ability.DataUnitPauseDuration[2] = 0f;
            ability.DataUnitPauseDuration[3] = 0f;
            ability.DataUnitPauseDuration[4] = 0f;
            ability.DataHeroPauseDuration[1] = 0f;
            ability.DataHeroPauseDuration[2] = 0f;
            ability.DataHeroPauseDuration[3] = 0f;
            ability.DataHeroPauseDuration[4] = 0f;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual MaxLifeBonusLeast LoadMaxLifeBonusLeast(ObjectDatabaseBase db)
        {
            var ability = new MaxLifeBonusLeast(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxLifeGained[1] = 150;
            ability.DataMaxLifeGained[2] = 0;
            ability.DataMaxLifeGained[3] = 0;
            ability.DataMaxLifeGained[4] = 0;
            return ability;
        }

        protected virtual MaxLifeBonusLesser LoadMaxLifeBonusLesser(ObjectDatabaseBase db)
        {
            var ability = new MaxLifeBonusLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxLifeGained[1] = 200;
            ability.DataMaxLifeGained[2] = 0;
            ability.DataMaxLifeGained[3] = 0;
            ability.DataMaxLifeGained[4] = 0;
            return ability;
        }

        protected virtual MaxLifeBonusGreater LoadMaxLifeBonusGreater(ObjectDatabaseBase db)
        {
            var ability = new MaxLifeBonusGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxLifeGained[1] = 300;
            ability.DataMaxLifeGained[2] = 0;
            ability.DataMaxLifeGained[3] = 0;
            ability.DataMaxLifeGained[4] = 0;
            return ability;
        }

        protected virtual MoveSpeedBonus LoadMoveSpeedBonus(ObjectDatabaseBase db)
        {
            var ability = new MoveSpeedBonus(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedBonus[1] = 60;
            ability.DataMovementSpeedBonus[2] = 0;
            ability.DataMovementSpeedBonus[3] = 0;
            ability.DataMovementSpeedBonus[4] = 0;
            return ability;
        }

        protected virtual OrbOfDarknessBlackArrow LoadOrbOfDarknessBlackArrow(ObjectDatabaseBase db)
        {
            var ability = new OrbOfDarknessBlackArrow(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNba,BNdm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 0f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataNumberOfSummonedUnits[1] = 1;
            ability.DataNumberOfSummonedUnits[2] = 0;
            ability.DataNumberOfSummonedUnits[3] = 0;
            ability.DataNumberOfSummonedUnits[4] = 0;
            ability.DataSummonedUnitDurationseconds[1] = 80f;
            ability.DataSummonedUnitDurationseconds[2] = 0f;
            ability.DataSummonedUnitDurationseconds[3] = 0f;
            ability.DataSummonedUnitDurationseconds[4] = 0f;
            ability.DataSummonedUnitTypeRaw[1] = "ndr1";
            ability.DataSummonedUnitTypeRaw[2] = "-";
            ability.DataSummonedUnitTypeRaw[3] = null;
            ability.DataSummonedUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfDarkness LoadOrbOfDarkness(ObjectDatabaseBase db)
        {
            var ability = new OrbOfDarkness(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 6f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            ability.DataChanceToHitUnits[1] = 100f;
            ability.DataChanceToHitUnits[2] = 0f;
            ability.DataChanceToHitUnits[3] = 0f;
            ability.DataChanceToHitUnits[4] = 0f;
            ability.DataChanceToHitHeros[1] = 100f;
            ability.DataChanceToHitHeros[2] = 0f;
            ability.DataChanceToHitHeros[3] = 0f;
            ability.DataChanceToHitHeros[4] = 0f;
            ability.DataChanceToHitSummons[1] = 100f;
            ability.DataChanceToHitSummons[2] = 0f;
            ability.DataChanceToHitSummons[3] = 0f;
            ability.DataChanceToHitSummons[4] = 0f;
            ability.DataEffectAbilityRaw[1] = "ANbs";
            ability.DataEffectAbilityRaw[2] = null;
            ability.DataEffectAbilityRaw[3] = null;
            ability.DataEffectAbilityRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfCorruption LoadOrbOfCorruption(ObjectDatabaseBase db)
        {
            var ability = new OrbOfCorruption(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIcb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonusDice[1] = 5;
            ability.DataDamageBonusDice[2] = 0;
            ability.DataDamageBonusDice[3] = 0;
            ability.DataDamageBonusDice[4] = 0;
            ability.DataArmorPenalty[1] = 4;
            ability.DataArmorPenalty[2] = 0;
            ability.DataArmorPenalty[3] = 0;
            ability.DataArmorPenalty[4] = 0;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual ShadowOrbAbility LoadShadowOrbAbility(ObjectDatabaseBase db)
        {
            var ability = new ShadowOrbAbility(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfFire LoadOrbOfFire(ObjectDatabaseBase db)
        {
            var ability = new OrbOfFire(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 150f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 10f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual OrbOfGuldan LoadOrbOfGuldan(ObjectDatabaseBase db)
        {
            var ability = new OrbOfGuldan(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 140f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfFreezing LoadOrbOfFreezing(ObjectDatabaseBase db)
        {
            var ability = new OrbOfFreezing(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfre";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 9f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual OrbOfFrost LoadOrbOfFrost(ObjectDatabaseBase db)
        {
            var ability = new OrbOfFrost(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 6f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual OrbOfLightning LoadOrbOfLightning(ObjectDatabaseBase db)
        {
            var ability = new OrbOfLightning(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 5f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            ability.DataChanceToHitUnits[1] = 30f;
            ability.DataChanceToHitUnits[2] = 0f;
            ability.DataChanceToHitUnits[3] = 0f;
            ability.DataChanceToHitUnits[4] = 0f;
            ability.DataChanceToHitHeros[1] = 10f;
            ability.DataChanceToHitHeros[2] = 0f;
            ability.DataChanceToHitHeros[3] = 0f;
            ability.DataChanceToHitHeros[4] = 0f;
            ability.DataChanceToHitSummons[1] = 30f;
            ability.DataChanceToHitSummons[2] = 0f;
            ability.DataChanceToHitSummons[3] = 0f;
            ability.DataChanceToHitSummons[4] = 0f;
            ability.DataEffectAbilityRaw[1] = "AIpg";
            ability.DataEffectAbilityRaw[2] = null;
            ability.DataEffectAbilityRaw[3] = null;
            ability.DataEffectAbilityRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfLightningOld LoadOrbOfLightningOld(ObjectDatabaseBase db)
        {
            var ability = new OrbOfLightningOld(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonusDice[1] = 6;
            ability.DataDamageBonusDice[2] = 0;
            ability.DataDamageBonusDice[3] = 0;
            ability.DataDamageBonusDice[4] = 0;
            ability.DataDamageBonus[1] = 6f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual OrbOfSpells LoadOrbOfSpells(ObjectDatabaseBase db)
        {
            var ability = new OrbOfSpells(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 6f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            ability.DataChanceToHitUnits[1] = 15f;
            ability.DataChanceToHitUnits[2] = 0f;
            ability.DataChanceToHitUnits[3] = 0f;
            ability.DataChanceToHitUnits[4] = 0f;
            ability.DataChanceToHitHeros[1] = 5f;
            ability.DataChanceToHitHeros[2] = 0f;
            ability.DataChanceToHitHeros[3] = 0f;
            ability.DataChanceToHitHeros[4] = 0f;
            ability.DataChanceToHitSummons[1] = 35f;
            ability.DataChanceToHitSummons[2] = 0f;
            ability.DataChanceToHitSummons[3] = 0f;
            ability.DataChanceToHitSummons[4] = 0f;
            ability.DataEffectAbilityRaw[1] = "AIos";
            ability.DataEffectAbilityRaw[2] = null;
            ability.DataEffectAbilityRaw[3] = null;
            ability.DataEffectAbilityRaw[4] = null;
            return ability;
        }

        protected virtual OrbOfVenom LoadOrbOfVenom(ObjectDatabaseBase db)
        {
            var ability = new OrbOfVenom(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonusDice[1] = 5;
            ability.DataDamageBonusDice[2] = 0;
            ability.DataDamageBonusDice[3] = 0;
            ability.DataDamageBonusDice[4] = 0;
            ability.DataDamageBonus[1] = 5f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataEnabledAttackIndex[1] = 2;
            ability.DataEnabledAttackIndex[2] = 0;
            ability.DataEnabledAttackIndex[3] = 0;
            ability.DataEnabledAttackIndex[4] = 0;
            return ability;
        }

        protected virtual OrbOfVenomPoisonAttack LoadOrbOfVenomPoisonAttack(ObjectDatabaseBase db)
        {
            var ability = new OrbOfVenomPoisonAttack(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 6f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIpb,BIpd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 9f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataStackingTypeRaw[1] = 1;
            ability.DataStackingTypeRaw[2] = 0;
            ability.DataStackingTypeRaw[3] = 0;
            ability.DataStackingTypeRaw[4] = 0;
            return ability;
        }

        protected virtual AnimateDeadItemSpecial LoadAnimateDeadItemSpecial(ObjectDatabaseBase db)
        {
            var ability = new AnimateDeadItemSpecial(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 90f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUan";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInheritUpgradesRaw[1] = 0;
            ability.DataInheritUpgradesRaw[2] = 0;
            ability.DataInheritUpgradesRaw[3] = 0;
            ability.DataInheritUpgradesRaw[4] = 0;
            return ability;
        }

        protected virtual RegenLife_Arel LoadRegenLife_Arel(ObjectDatabaseBase db)
        {
            var ability = new RegenLife_Arel(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsRegeneratedPerSecond[1] = 2;
            ability.DataHitPointsRegeneratedPerSecond[2] = 0;
            ability.DataHitPointsRegeneratedPerSecond[3] = 0;
            ability.DataHitPointsRegeneratedPerSecond[4] = 0;
            return ability;
        }

        protected virtual RegenLife_Arll LoadRegenLife_Arll(ObjectDatabaseBase db)
        {
            var ability = new RegenLife_Arll(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsRegeneratedPerSecond[1] = 1;
            ability.DataHitPointsRegeneratedPerSecond[2] = 0;
            ability.DataHitPointsRegeneratedPerSecond[3] = 0;
            ability.DataHitPointsRegeneratedPerSecond[4] = 0;
            return ability;
        }

        protected virtual SightBonus LoadSightBonus(ObjectDatabaseBase db)
        {
            var ability = new SightBonus(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSightRangeBonus[1] = 500;
            ability.DataSightRangeBonus[2] = 0;
            ability.DataSightRangeBonus[3] = 0;
            ability.DataSightRangeBonus[4] = 0;
            return ability;
        }

        protected virtual Slow_AIos LoadSlow_AIos(ObjectDatabaseBase db)
        {
            var ability = new Slow_AIos(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bslo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedFactor[1] = 0.6f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0.25f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataAlwaysAutocastRaw[1] = 0;
            ability.DataAlwaysAutocastRaw[2] = 0;
            ability.DataAlwaysAutocastRaw[3] = 0;
            ability.DataAlwaysAutocastRaw[4] = 0;
            return ability;
        }

        protected virtual SoulTrap LoadSoulTrap(ObjectDatabaseBase db)
        {
            var ability = new SoulTrap(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "enemy,hero";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SoulPossession LoadSoulPossession(ObjectDatabaseBase db)
        {
            var ability = new SoulPossession(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIsv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemCloakOfFlames LoadItemCloakOfFlames(ObjectDatabaseBase db)
        {
            var ability = new ItemCloakOfFlames(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 1f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 160f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIcf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerDuration[1] = 10;
            ability.DataDamagePerDuration[2] = 0;
            ability.DataDamagePerDuration[3] = 0;
            ability.DataDamagePerDuration[4] = 0;
            ability.DataManaUsedPerSecond[1] = 0;
            ability.DataManaUsedPerSecond[2] = 0;
            ability.DataManaUsedPerSecond[3] = 0;
            ability.DataManaUsedPerSecond[4] = 0;
            ability.DataExtraManaRequired[1] = 0;
            ability.DataExtraManaRequired[2] = 0;
            ability.DataExtraManaRequired[3] = 0;
            ability.DataExtraManaRequired[4] = 0;
            return ability;
        }

        protected virtual ItemCommand LoadItemCommand(ObjectDatabaseBase db)
        {
            var ability = new ItemCommand(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,nonhero,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumCreepLevel[1] = 5;
            ability.DataMaximumCreepLevel[2] = 0;
            ability.DataMaximumCreepLevel[3] = 0;
            ability.DataMaximumCreepLevel[4] = 0;
            return ability;
        }

        protected virtual ItemDamageAoe LoadItemDamageAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemDamageAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemDefenseAoe LoadItemDefenseAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemDefenseAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdef";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 2;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            ability.DataHitPointsGained[1] = 0;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            ability.DataManaPointsGained[1] = 0;
            ability.DataManaPointsGained[2] = 0;
            ability.DataManaPointsGained[3] = 0;
            ability.DataManaPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemDefenseAoeHealing LoadItemDefenseAoeHealing(ObjectDatabaseBase db)
        {
            var ability = new ItemDefenseAoeHealing(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdef";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDefenseBonus[1] = 2;
            ability.DataDefenseBonus[2] = 0;
            ability.DataDefenseBonus[3] = 0;
            ability.DataDefenseBonus[4] = 0;
            ability.DataHitPointsGained[1] = 150;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            ability.DataManaPointsGained[1] = 100;
            ability.DataManaPointsGained[2] = 0;
            ability.DataManaPointsGained[3] = 0;
            ability.DataManaPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemDetectAoe LoadItemDetectAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemDetectAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdet";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbdt";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionRadiusRaw[1] = 3;
            ability.DataDetectionRadiusRaw[2] = 0;
            ability.DataDetectionRadiusRaw[3] = 0;
            ability.DataDetectionRadiusRaw[4] = 0;
            return ability;
        }

        protected virtual ItemDispelAoe LoadItemDispelAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemDispelAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLossPerUnit[1] = 0;
            ability.DataManaLossPerUnit[2] = 0;
            ability.DataManaLossPerUnit[3] = 0;
            ability.DataManaLossPerUnit[4] = 0;
            ability.DataDamageToSummonedUnits[1] = 200;
            ability.DataDamageToSummonedUnits[2] = 0;
            ability.DataDamageToSummonedUnits[3] = 0;
            ability.DataDamageToSummonedUnits[4] = 0;
            return ability;
        }

        protected virtual ItemDispelAoeWithCooldown LoadItemDispelAoeWithCooldown(ObjectDatabaseBase db)
        {
            var ability = new ItemDispelAoeWithCooldown(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 7.5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLossPerUnit[1] = 0;
            ability.DataManaLossPerUnit[2] = 0;
            ability.DataManaLossPerUnit[3] = 0;
            ability.DataManaLossPerUnit[4] = 0;
            ability.DataDamageToSummonedUnits[1] = 200;
            ability.DataDamageToSummonedUnits[2] = 0;
            ability.DataDamageToSummonedUnits[3] = 0;
            ability.DataDamageToSummonedUnits[4] = 0;
            return ability;
        }

        protected virtual PowerupDispelAoe LoadPowerupDispelAoe(ObjectDatabaseBase db)
        {
            var ability = new PowerupDispelAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,invu,vuln,tree";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemHealLesser LoadItemHealLesser(ObjectDatabaseBase db)
        {
            var ability = new ItemHealLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 250;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemHealGreater LoadItemHealGreater(ObjectDatabaseBase db)
        {
            var ability = new ItemHealGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 500;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemHealLeast LoadItemHealLeast(ObjectDatabaseBase db)
        {
            var ability = new ItemHealLeast(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 250;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemHealAoe LoadItemHealAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemHealAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 25f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 150;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemHealAoeGreater LoadItemHealAoeGreater(ObjectDatabaseBase db)
        {
            var ability = new ItemHealAoeGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsGained[1] = 250;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            return ability;
        }

        protected virtual PowerupHealAoeLesser LoadPowerupHealAoeLesser(ObjectDatabaseBase db)
        {
            var ability = new PowerupHealAoeLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PowerupHealAoe LoadPowerupHealAoe(ObjectDatabaseBase db)
        {
            var ability = new PowerupHealAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PowerupHealAoeGreater LoadPowerupHealAoeGreater(ObjectDatabaseBase db)
        {
            var ability = new PowerupHealAoeGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 800f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual HealingWard_AIhw LoadHealingWard_AIhw(ObjectDatabaseBase db)
        {
            var ability = new HealingWard_AIhw(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bhwd";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "ohwd";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual SentryWardItem LoadSentryWardItem(ObjectDatabaseBase db)
        {
            var ability = new SentryWardItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Beye";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataWardUnitTypeRaw[1] = "oeye";
            ability.DataWardUnitTypeRaw[2] = null;
            ability.DataWardUnitTypeRaw[3] = null;
            ability.DataWardUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ItemIllusion LoadItemIllusion(ObjectDatabaseBase db)
        {
            var ability = new ItemIllusion(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIil";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageDealtOfNormal[1] = 0f;
            ability.DataDamageDealtOfNormal[2] = 0f;
            ability.DataDamageDealtOfNormal[3] = 0f;
            ability.DataDamageDealtOfNormal[4] = 0f;
            ability.DataDamageReceivedMultiplier[1] = 2f;
            ability.DataDamageReceivedMultiplier[2] = 0f;
            ability.DataDamageReceivedMultiplier[3] = 0f;
            ability.DataDamageReceivedMultiplier[4] = 0f;
            return ability;
        }

        protected virtual ItemInvisLesser LoadItemInvisLesser(ObjectDatabaseBase db)
        {
            var ability = new ItemInvisLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 120f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 120f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Binv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemInvisGreater LoadItemInvisGreater(ObjectDatabaseBase db)
        {
            var ability = new ItemInvisGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 180f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Binv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemInvulNormal LoadItemInvulNormal(ObjectDatabaseBase db)
        {
            var ability = new ItemInvulNormal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bvul";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataIsMagicImmuneRaw[1] = 1;
            ability.DataIsMagicImmuneRaw[2] = 0;
            ability.DataIsMagicImmuneRaw[3] = 0;
            ability.DataIsMagicImmuneRaw[4] = 0;
            return ability;
        }

        protected virtual ItemInvulLesser LoadItemInvulLesser(ObjectDatabaseBase db)
        {
            var ability = new ItemInvulLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 7f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bvul";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemInvulDivinity LoadItemInvulDivinity(ObjectDatabaseBase db)
        {
            var ability = new ItemInvulDivinity(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 25f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 25f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bvul";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemManaRestoreLesser LoadItemManaRestoreLesser(ObjectDatabaseBase db)
        {
            var ability = new ItemManaRestoreLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPointsGained[1] = 125;
            ability.DataManaPointsGained[2] = 0;
            ability.DataManaPointsGained[3] = 0;
            ability.DataManaPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemManaRestoreGreater LoadItemManaRestoreGreater(ObjectDatabaseBase db)
        {
            var ability = new ItemManaRestoreGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPointsGained[1] = 250;
            ability.DataManaPointsGained[2] = 0;
            ability.DataManaPointsGained[3] = 0;
            ability.DataManaPointsGained[4] = 0;
            return ability;
        }

        protected virtual ItemManaRestoreAoe LoadItemManaRestoreAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemManaRestoreAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaPointsGained[1] = 100;
            ability.DataManaPointsGained[2] = 0;
            ability.DataManaPointsGained[3] = 0;
            ability.DataManaPointsGained[4] = 0;
            return ability;
        }

        protected virtual RuneManaRestoreAoe LoadRuneManaRestoreAoe(ObjectDatabaseBase db)
        {
            var ability = new RuneManaRestoreAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RuneManaRestoreGreaterAoe LoadRuneManaRestoreGreaterAoe(ObjectDatabaseBase db)
        {
            var ability = new RuneManaRestoreGreaterAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1200f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemPlaceMine LoadItemPlaceMine(ObjectDatabaseBase db)
        {
            var ability = new ItemPlaceMine(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitTypeRaw[1] = "nglm";
            ability.DataUnitTypeRaw[2] = null;
            ability.DataUnitTypeRaw[3] = null;
            ability.DataUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ItemRecall LoadItemRecall(ObjectDatabaseBase db)
        {
            var ability = new ItemRecall(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,player,vuln,invu,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumNumberOfUnits[1] = 12;
            ability.DataMaximumNumberOfUnits[2] = 0;
            ability.DataMaximumNumberOfUnits[3] = 0;
            ability.DataMaximumNumberOfUnits[4] = 0;
            ability.DataUseTeleportClusteringRaw[1] = 1;
            ability.DataUseTeleportClusteringRaw[2] = 0;
            ability.DataUseTeleportClusteringRaw[3] = 0;
            ability.DataUseTeleportClusteringRaw[4] = 0;
            return ability;
        }

        protected virtual ItemRegenMana LoadItemRegenMana(ObjectDatabaseBase db)
        {
            var ability = new ItemRegenMana(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegenerationBonusasFractionOfNormal[1] = 0.5f;
            ability.DataManaRegenerationBonusasFractionOfNormal[2] = 0f;
            ability.DataManaRegenerationBonusasFractionOfNormal[3] = 0f;
            ability.DataManaRegenerationBonusasFractionOfNormal[4] = 0f;
            return ability;
        }

        protected virtual ItemRegenManaLesser LoadItemRegenManaLesser(ObjectDatabaseBase db)
        {
            var ability = new ItemRegenManaLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegenerationBonusasFractionOfNormal[1] = 0.25f;
            ability.DataManaRegenerationBonusasFractionOfNormal[2] = 0f;
            ability.DataManaRegenerationBonusasFractionOfNormal[3] = 0f;
            ability.DataManaRegenerationBonusasFractionOfNormal[4] = 0f;
            return ability;
        }

        protected virtual ItemReincarnation LoadItemReincarnation(ObjectDatabaseBase db)
        {
            var ability = new ItemReincarnation(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XOre";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDelayAfterDeathseconds[1] = 7;
            ability.DataDelayAfterDeathseconds[2] = 0;
            ability.DataDelayAfterDeathseconds[3] = 0;
            ability.DataDelayAfterDeathseconds[4] = 0;
            ability.DataRestoredLife[1] = 500;
            ability.DataRestoredLife[2] = 0;
            ability.DataRestoredLife[3] = 0;
            ability.DataRestoredLife[4] = 0;
            ability.DataRestoredMana1ForCurrent[1] = -1;
            ability.DataRestoredMana1ForCurrent[2] = 0;
            ability.DataRestoredMana1ForCurrent[3] = 0;
            ability.DataRestoredMana1ForCurrent[4] = 0;
            return ability;
        }

        protected virtual ItemRestore LoadItemRestore(ObjectDatabaseBase db)
        {
            var ability = new ItemRestore(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsRestored[1] = 500;
            ability.DataHitPointsRestored[2] = 0;
            ability.DataHitPointsRestored[3] = 0;
            ability.DataHitPointsRestored[4] = 0;
            ability.DataManaPointsRestored[1] = 200;
            ability.DataManaPointsRestored[2] = 0;
            ability.DataManaPointsRestored[3] = 0;
            ability.DataManaPointsRestored[4] = 0;
            return ability;
        }

        protected virtual ItemRestoreAoe LoadItemRestoreAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemRestoreAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHitPointsRestored[1] = 150;
            ability.DataHitPointsRestored[2] = 0;
            ability.DataHitPointsRestored[3] = 0;
            ability.DataHitPointsRestored[4] = 0;
            ability.DataManaPointsRestored[1] = 150;
            ability.DataManaPointsRestored[2] = 0;
            ability.DataManaPointsRestored[3] = 0;
            ability.DataManaPointsRestored[4] = 0;
            return ability;
        }

        protected virtual RuneRestoreAoe LoadRuneRestoreAoe(ObjectDatabaseBase db)
        {
            var ability = new RuneRestoreAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 250f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemSpeed LoadItemSpeed(ObjectDatabaseBase db)
        {
            var ability = new ItemSpeed(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspe";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.6f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual ItemSpeedAoe LoadItemSpeedAoe(ObjectDatabaseBase db)
        {
            var ability = new ItemSpeedAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,nonsapper";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspe";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 2f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual RuneSpeedAoe LoadRuneSpeedAoe(ObjectDatabaseBase db)
        {
            var ability = new RuneSpeedAoe(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspe";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemTownPortal LoadItemTownPortal(ObjectDatabaseBase db)
        {
            var ability = new ItemTownPortal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "structure,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 5f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaximumNumberOfUnits[1] = 90;
            ability.DataMaximumNumberOfUnits[2] = 0;
            ability.DataMaximumNumberOfUnits[3] = 0;
            ability.DataMaximumNumberOfUnits[4] = 0;
            ability.DataUseTeleportClusteringRaw[1] = 1;
            ability.DataUseTeleportClusteringRaw[2] = 0;
            ability.DataUseTeleportClusteringRaw[3] = 0;
            ability.DataUseTeleportClusteringRaw[4] = 0;
            return ability;
        }

        protected virtual ItemAuraDevotion LoadItemAuraDevotion(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraDevotion(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHad";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataArmorBonus[1] = 1.5f;
            ability.DataArmorBonus[2] = 0f;
            ability.DataArmorBonus[3] = 0f;
            ability.DataArmorBonus[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ItemAuraCommand LoadItemAuraCommand(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraCommand(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOac";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMeleeBonusRaw[1] = 1;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 0;
            ability.DataRangedBonusRaw[3] = 0;
            ability.DataRangedBonusRaw[4] = 0;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            ability.DataAttackDamageIncrease[1] = 0.1f;
            ability.DataAttackDamageIncrease[2] = 0f;
            ability.DataAttackDamageIncrease[3] = 0f;
            ability.DataAttackDamageIncrease[4] = 0f;
            return ability;
        }

        protected virtual ItemAuraWarDrums LoadItemAuraWarDrums(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraWarDrums(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bakb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemAuraBrilliance LoadItemAuraBrilliance(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraBrilliance(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHab";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaRegenerationIncrease[1] = 0.5f;
            ability.DataManaRegenerationIncrease[2] = 0f;
            ability.DataManaRegenerationIncrease[3] = 0f;
            ability.DataManaRegenerationIncrease[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ItemAuraVampiric LoadItemAuraVampiric(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraVampiric(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUav";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackDamageStolen[1] = 0.15f;
            ability.DataAttackDamageStolen[2] = 0f;
            ability.DataAttackDamageStolen[3] = 0f;
            ability.DataAttackDamageStolen[4] = 0f;
            return ability;
        }

        protected virtual ItemAuraTrueshot LoadItemAuraTrueshot(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraTrueshot(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BEar";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 0.075f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataMeleeBonusRaw[1] = 0;
            ability.DataMeleeBonusRaw[2] = 0;
            ability.DataMeleeBonusRaw[3] = 0;
            ability.DataMeleeBonusRaw[4] = 0;
            ability.DataRangedBonusRaw[1] = 1;
            ability.DataRangedBonusRaw[2] = 0;
            ability.DataRangedBonusRaw[3] = 0;
            ability.DataRangedBonusRaw[4] = 0;
            ability.DataFlatBonusRaw[1] = 0;
            ability.DataFlatBonusRaw[2] = 0;
            ability.DataFlatBonusRaw[3] = 0;
            ability.DataFlatBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ItemAuraEndurance LoadItemAuraEndurance(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraEndurance(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BOae";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.075f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataAttackSpeedIncrease[1] = 0.03f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual ItemAuraUnholy LoadItemAuraUnholy(ObjectDatabaseBase db)
        {
            var ability = new ItemAuraUnholy(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUau";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementSpeedIncrease[1] = 0.075f;
            ability.DataMovementSpeedIncrease[2] = 0f;
            ability.DataMovementSpeedIncrease[3] = 0f;
            ability.DataMovementSpeedIncrease[4] = 0f;
            ability.DataLifeRegenerationIncrease[1] = 0.3f;
            ability.DataLifeRegenerationIncrease[2] = 0f;
            ability.DataLifeRegenerationIncrease[3] = 0f;
            ability.DataLifeRegenerationIncrease[4] = 0f;
            ability.DataPercentBonusRaw[1] = 0;
            ability.DataPercentBonusRaw[2] = 0;
            ability.DataPercentBonusRaw[3] = 0;
            ability.DataPercentBonusRaw[4] = 0;
            return ability;
        }

        protected virtual ItemUltravision LoadItemUltravision(ObjectDatabaseBase db)
        {
            var ability = new ItemUltravision(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bult";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual LightningShieldItem LoadLightningShieldItem(ObjectDatabaseBase db)
        {
            var ability = new LightningShieldItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,friend,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 10f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 10f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 160f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Blsh,Blsa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamagePerSecond[1] = 20f;
            ability.DataDamagePerSecond[2] = 0f;
            ability.DataDamagePerSecond[3] = 0f;
            ability.DataDamagePerSecond[4] = 0f;
            return ability;
        }

        protected virtual AntiMagicShield_AIxs LoadAntiMagicShield_AIxs(ObjectDatabaseBase db)
        {
            var ability = new AntiMagicShield_AIxs(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 15f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bams,Bam2";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataShieldLife[1] = 0;
            ability.DataShieldLife[2] = 0;
            ability.DataShieldLife[3] = 0;
            ability.DataShieldLife[4] = 0;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            ability.DataDamageToSummonedUnits[1] = 0f;
            ability.DataDamageToSummonedUnits[2] = 0f;
            ability.DataDamageToSummonedUnits[3] = 0f;
            ability.DataDamageToSummonedUnits[4] = 0f;
            ability.DataMagicDamageReduction[1] = 10f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual AnimateDead LoadAnimateDead(ObjectDatabaseBase db)
        {
            var ability = new AnimateDead(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 40f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 40f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BUan";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInheritUpgradesRaw[1] = 0;
            ability.DataInheritUpgradesRaw[2] = 0;
            ability.DataInheritUpgradesRaw[3] = 0;
            ability.DataInheritUpgradesRaw[4] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 1;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            ability.DataNumberOfCorpsesRaised[1] = 6;
            ability.DataNumberOfCorpsesRaised[2] = 0;
            ability.DataNumberOfCorpsesRaised[3] = 0;
            ability.DataNumberOfCorpsesRaised[4] = 0;
            return ability;
        }

        protected virtual Resurrection LoadResurrection(ObjectDatabaseBase db)
        {
            var ability = new Resurrection(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfCorpsesRaised[1] = 6;
            ability.DataNumberOfCorpsesRaised[2] = 0;
            ability.DataNumberOfCorpsesRaised[3] = 0;
            ability.DataNumberOfCorpsesRaised[4] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            return ability;
        }

        protected virtual Roar_AIrr LoadRoar_AIrr(ObjectDatabaseBase db)
        {
            var ability = new Roar_AIrr(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Broa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageIncrease[1] = 0.25f;
            ability.DataDamageIncrease[2] = 0f;
            ability.DataDamageIncrease[3] = 0f;
            ability.DataDamageIncrease[4] = 0f;
            ability.DataDefenseIncrease[1] = 0;
            ability.DataDefenseIncrease[2] = 0;
            ability.DataDefenseIncrease[3] = 0;
            ability.DataDefenseIncrease[4] = 0;
            ability.DataLifeRegenerationRate[1] = 0f;
            ability.DataLifeRegenerationRate[2] = 0f;
            ability.DataLifeRegenerationRate[3] = 0f;
            ability.DataLifeRegenerationRate[4] = 0f;
            ability.DataManaRegen[1] = 0f;
            ability.DataManaRegen[2] = 0f;
            ability.DataManaRegen[3] = 0f;
            ability.DataManaRegen[4] = 0f;
            ability.DataPreferHostilesRaw[1] = 0;
            ability.DataPreferHostilesRaw[2] = 0;
            ability.DataPreferHostilesRaw[3] = 0;
            ability.DataPreferHostilesRaw[4] = 0;
            ability.DataPreferFriendliesRaw[1] = 0;
            ability.DataPreferFriendliesRaw[2] = 0;
            ability.DataPreferFriendliesRaw[3] = 0;
            ability.DataPreferFriendliesRaw[4] = 0;
            ability.DataMaxUnits[1] = 0;
            ability.DataMaxUnits[2] = 0;
            ability.DataMaxUnits[3] = 0;
            ability.DataMaxUnits[4] = 0;
            return ability;
        }

        protected virtual Evasion LoadEvasion(ObjectDatabaseBase db)
        {
            var ability = new Evasion(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataChanceToEvade[1] = 0.15f;
            ability.DataChanceToEvade[2] = 0f;
            ability.DataChanceToEvade[3] = 0f;
            ability.DataChanceToEvade[4] = 0f;
            return ability;
        }

        protected virtual MagicImmunity_AImx LoadMagicImmunity_AImx(ObjectDatabaseBase db)
        {
            var ability = new MagicImmunity_AImx(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMagicDamageFactor[1] = 10f;
            ability.DataMagicDamageFactor[2] = 0f;
            ability.DataMagicDamageFactor[3] = 0f;
            ability.DataMagicDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual PermanentHitPointBonus LoadPermanentHitPointBonus(ObjectDatabaseBase db)
        {
            var ability = new PermanentHitPointBonus(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxLifeGained[1] = 50;
            ability.DataMaxLifeGained[2] = 0;
            ability.DataMaxLifeGained[3] = 0;
            ability.DataMaxLifeGained[4] = 0;
            return ability;
        }

        protected virtual MaxManaBonusLeast LoadMaxManaBonusLeast(ObjectDatabaseBase db)
        {
            var ability = new MaxManaBonusLeast(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaGained[1] = 100;
            ability.DataMaxManaGained[2] = 0;
            ability.DataMaxManaGained[3] = 0;
            ability.DataMaxManaGained[4] = 0;
            return ability;
        }

        protected virtual MaxManaBonusMost LoadMaxManaBonusMost(ObjectDatabaseBase db)
        {
            var ability = new MaxManaBonusMost(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMaxManaGained[1] = 250;
            ability.DataMaxManaGained[2] = 0;
            ability.DataMaxManaGained[3] = 0;
            ability.DataMaxManaGained[4] = 0;
            return ability;
        }

        protected virtual AttackSpeedIncrease LoadAttackSpeedIncrease(ObjectDatabaseBase db)
        {
            var ability = new AttackSpeedIncrease(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedIncrease[1] = 0.15f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual AttackSpeedIncreaseGreater LoadAttackSpeedIncreaseGreater(ObjectDatabaseBase db)
        {
            var ability = new AttackSpeedIncreaseGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttackSpeedIncrease[1] = 0.2f;
            ability.DataAttackSpeedIncrease[2] = 0f;
            ability.DataAttackSpeedIncrease[3] = 0f;
            ability.DataAttackSpeedIncrease[4] = 0f;
            return ability;
        }

        protected virtual PotionOfLifeRegen LoadPotionOfLifeRegen(ObjectDatabaseBase db)
        {
            var ability = new PotionOfLifeRegen(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 400f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 0f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 0;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfManaRegenGreater LoadPotionOfManaRegenGreater(ObjectDatabaseBase db)
        {
            var ability = new PotionOfManaRegenGreater(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 0f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 200f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual ScrollOfLifeRegen LoadScrollOfLifeRegen(ObjectDatabaseBase db)
        {
            var ability = new ScrollOfLifeRegen(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 225f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 0f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfManaRegenLesser LoadPotionOfManaRegenLesser(ObjectDatabaseBase db)
        {
            var ability = new PotionOfManaRegenLesser(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 0f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 100f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfRejuvI LoadPotionOfRejuvI(ObjectDatabaseBase db)
        {
            var ability = new PotionOfRejuvI(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 100f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 25f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfRejuvII LoadPotionOfRejuvII(ObjectDatabaseBase db)
        {
            var ability = new PotionOfRejuvII(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 150f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 50f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfRejuvIII LoadPotionOfRejuvIII(ObjectDatabaseBase db)
        {
            var ability = new PotionOfRejuvIII(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 200f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 75f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual PotionOfRejuvIV LoadPotionOfRejuvIV(ObjectDatabaseBase db)
        {
            var ability = new PotionOfRejuvIV(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 400f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 125f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual ScrollOfRejuvI LoadScrollOfRejuvI(ObjectDatabaseBase db)
        {
            var ability = new ScrollOfRejuvI(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 250f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 100f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual ScrollOfRejuvII LoadScrollOfRejuvII(ObjectDatabaseBase db)
        {
            var ability = new ScrollOfRejuvII(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 600f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrg,BIrl,BIrm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeRegenerated[1] = 450f;
            ability.DataLifeRegenerated[2] = 0f;
            ability.DataLifeRegenerated[3] = 0f;
            ability.DataLifeRegenerated[4] = 0f;
            ability.DataManaRegenerated[1] = 150f;
            ability.DataManaRegenerated[2] = 0f;
            ability.DataManaRegenerated[3] = 0f;
            ability.DataManaRegenerated[4] = 0f;
            ability.DataAllowWhenFullRaw[1] = 0;
            ability.DataAllowWhenFullRaw[2] = 0;
            ability.DataAllowWhenFullRaw[3] = 0;
            ability.DataAllowWhenFullRaw[4] = 0;
            ability.DataNoTargetRequiredRaw[1] = 1;
            ability.DataNoTargetRequiredRaw[2] = 0;
            ability.DataNoTargetRequiredRaw[3] = 0;
            ability.DataNoTargetRequiredRaw[4] = 0;
            ability.DataDispelOnAttackRaw[1] = 1;
            ability.DataDispelOnAttackRaw[2] = 0;
            ability.DataDispelOnAttackRaw[3] = 0;
            ability.DataDispelOnAttackRaw[4] = 0;
            return ability;
        }

        protected virtual GiveGold LoadGiveGold(ObjectDatabaseBase db)
        {
            var ability = new GiveGold(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldGiven[1] = 250;
            ability.DataGoldGiven[2] = 0;
            ability.DataGoldGiven[3] = 0;
            ability.DataGoldGiven[4] = 0;
            return ability;
        }

        protected virtual GiveLumber LoadGiveLumber(ObjectDatabaseBase db)
        {
            var ability = new GiveLumber(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLumberGiven[1] = 250;
            ability.DataLumberGiven[2] = 0;
            ability.DataLumberGiven[3] = 0;
            ability.DataLumberGiven[4] = 0;
            return ability;
        }

        protected virtual ItemRevealMap LoadItemRevealMap(ObjectDatabaseBase db)
        {
            var ability = new ItemRevealMap(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xbdt";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual ItemDispelChain LoadItemDispelChain(ObjectDatabaseBase db)
        {
            var ability = new ItemDispelChain(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,enemy,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataManaLossPerUnit[1] = 0f;
            ability.DataManaLossPerUnit[2] = 0f;
            ability.DataManaLossPerUnit[3] = 0f;
            ability.DataManaLossPerUnit[4] = 0f;
            ability.DataSummonedUnitDamage[1] = 0f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataMaximumDispelledUnits[1] = 8;
            ability.DataMaximumDispelledUnits[2] = 0;
            ability.DataMaximumDispelledUnits[3] = 0;
            ability.DataMaximumDispelledUnits[4] = 0;
            return ability;
        }

        protected virtual ItemWeb LoadItemWeb(ObjectDatabaseBase db)
        {
            var ability = new ItemWeb(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 7f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bwea,Bweb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAirUnitLowerDuration[1] = 0.6f;
            ability.DataAirUnitLowerDuration[2] = 0f;
            ability.DataAirUnitLowerDuration[3] = 0f;
            ability.DataAirUnitLowerDuration[4] = 0f;
            ability.DataAirUnitHeight[1] = 200f;
            ability.DataAirUnitHeight[2] = 0f;
            ability.DataAirUnitHeight[3] = 0f;
            ability.DataAirUnitHeight[4] = 0f;
            ability.DataMeleeAttackRange[1] = 128f;
            ability.DataMeleeAttackRange[2] = 0f;
            ability.DataMeleeAttackRange[3] = 0f;
            ability.DataMeleeAttackRange[4] = 0f;
            return ability;
        }

        protected virtual ItemMonsterLure LoadItemMonsterLure(ObjectDatabaseBase db)
        {
            var ability = new ItemMonsterLure(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 75;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1750f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BImo";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfLures[1] = 1;
            ability.DataNumberOfLures[2] = 0;
            ability.DataNumberOfLures[3] = 0;
            ability.DataNumberOfLures[4] = 0;
            ability.DataActivationDelay[1] = 5f;
            ability.DataActivationDelay[2] = 0f;
            ability.DataActivationDelay[3] = 0f;
            ability.DataActivationDelay[4] = 0f;
            ability.DataLureIntervalseconds[1] = 2f;
            ability.DataLureIntervalseconds[2] = 0f;
            ability.DataLureIntervalseconds[3] = 0f;
            ability.DataLureIntervalseconds[4] = 0f;
            ability.DataLureUnitTypeRaw[1] = "nlur";
            ability.DataLureUnitTypeRaw[2] = null;
            ability.DataLureUnitTypeRaw[3] = null;
            ability.DataLureUnitTypeRaw[4] = null;
            return ability;
        }

        protected virtual ItemChangeTOD LoadItemChangeTOD(ObjectDatabaseBase db)
        {
            var ability = new ItemChangeTOD(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 70f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "XIct";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNewTimeOfDayHour[1] = 0;
            ability.DataNewTimeOfDayHour[2] = 0;
            ability.DataNewTimeOfDayHour[3] = 0;
            ability.DataNewTimeOfDayHour[4] = 0;
            ability.DataNewTimeOfDayMinute[1] = 0;
            ability.DataNewTimeOfDayMinute[2] = 0;
            ability.DataNewTimeOfDayMinute[3] = 0;
            ability.DataNewTimeOfDayMinute[4] = 0;
            return ability;
        }

        protected virtual ItemRandomItem LoadItemRandomItem(ObjectDatabaseBase db)
        {
            var ability = new ItemRandomItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "item";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RunedBracers LoadRunedBracers(ObjectDatabaseBase db)
        {
            var ability = new RunedBracers(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 0f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataDamageReduction[1] = 0.33f;
            ability.DataDamageReduction[2] = 0f;
            ability.DataDamageReduction[3] = 0f;
            ability.DataDamageReduction[4] = 0f;
            return ability;
        }

        protected virtual BlightPlacement LoadBlightPlacement(ObjectDatabaseBase db)
        {
            var ability = new BlightPlacement(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0.08f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0.08f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 350f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataExpansionAmount[1] = 64f;
            ability.DataExpansionAmount[2] = 0f;
            ability.DataExpansionAmount[3] = 0f;
            ability.DataExpansionAmount[4] = 0f;
            ability.DataCreatesBlightRaw[1] = 1;
            ability.DataCreatesBlightRaw[2] = 0;
            ability.DataCreatesBlightRaw[3] = 0;
            ability.DataCreatesBlightRaw[4] = 0;
            return ability;
        }

        protected virtual ItemPotionVampirism LoadItemPotionVampirism(ObjectDatabaseBase db)
        {
            var ability = new ItemPotionVampirism(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIpv";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageBonus[1] = 12f;
            ability.DataDamageBonus[2] = 0f;
            ability.DataDamageBonus[3] = 0f;
            ability.DataDamageBonus[4] = 0f;
            ability.DataLifeStealAmount[1] = 0.75f;
            ability.DataLifeStealAmount[2] = 0f;
            ability.DataLifeStealAmount[3] = 0f;
            ability.DataLifeStealAmount[4] = 0f;
            ability.DataAmountIsRawValueRaw[1] = 0;
            ability.DataAmountIsRawValueRaw[2] = 0;
            ability.DataAmountIsRawValueRaw[3] = 0;
            ability.DataAmountIsRawValueRaw[4] = 0;
            return ability;
        }

        protected virtual ManaSteal LoadManaSteal(ObjectDatabaseBase db)
        {
            var ability = new ManaSteal(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "notself";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 10f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 650f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLifeConvertedToMana[1] = 50f;
            ability.DataLifeConvertedToMana[2] = 0f;
            ability.DataLifeConvertedToMana[3] = 0f;
            ability.DataLifeConvertedToMana[4] = 0f;
            ability.DataLifeConvertedToLife[1] = 0f;
            ability.DataLifeConvertedToLife[2] = 0f;
            ability.DataLifeConvertedToLife[3] = 0f;
            ability.DataLifeConvertedToLife[4] = 0f;
            ability.DataManaConversionAsPercentRaw[1] = 1;
            ability.DataManaConversionAsPercentRaw[2] = 0;
            ability.DataManaConversionAsPercentRaw[3] = 0;
            ability.DataManaConversionAsPercentRaw[4] = 0;
            ability.DataLifeConversionAsPercentRaw[1] = 1;
            ability.DataLifeConversionAsPercentRaw[2] = 0;
            ability.DataLifeConversionAsPercentRaw[3] = 0;
            ability.DataLifeConversionAsPercentRaw[4] = 0;
            ability.DataLeaveTargetAliveRaw[1] = 1;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            return ability;
        }

        protected virtual MechanicalCritter LoadMechanicalCritter(ObjectDatabaseBase db)
        {
            var ability = new MechanicalCritter(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bmec";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnitsCreated[1] = 1;
            ability.DataNumberOfUnitsCreated[2] = 0;
            ability.DataNumberOfUnitsCreated[3] = 0;
            ability.DataNumberOfUnitsCreated[4] = 0;
            return ability;
        }

        protected virtual ShadowSight LoadShadowSight(ObjectDatabaseBase db)
        {
            var ability = new ShadowSight(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bshs";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual Preservation LoadPreservation(ObjectDatabaseBase db)
        {
            var ability = new Preservation(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,vuln,invu,player,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBuildingTypesAllowedRaw[1] = 15;
            ability.DataBuildingTypesAllowedRaw[2] = 0;
            ability.DataBuildingTypesAllowedRaw[3] = 0;
            ability.DataBuildingTypesAllowedRaw[4] = 0;
            return ability;
        }

        protected virtual Sanctuary LoadSanctuary(ObjectDatabaseBase db)
        {
            var ability = new Sanctuary(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,vuln,invu,player,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 45f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsa";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBuildingTypesAllowedRaw[1] = 15;
            ability.DataBuildingTypesAllowedRaw[2] = 0;
            ability.DataBuildingTypesAllowedRaw[3] = 0;
            ability.DataBuildingTypesAllowedRaw[4] = 0;
            ability.DataHeroRegenerationDelay[1] = 1f;
            ability.DataHeroRegenerationDelay[2] = 0f;
            ability.DataHeroRegenerationDelay[3] = 0f;
            ability.DataHeroRegenerationDelay[4] = 0f;
            ability.DataUnitRegenerationDelay[1] = 5f;
            ability.DataUnitRegenerationDelay[2] = 0f;
            ability.DataUnitRegenerationDelay[3] = 0f;
            ability.DataUnitRegenerationDelay[4] = 0f;
            ability.DataMagicDamageReduction[1] = 10f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataHitPointsPerSecond[1] = 15f;
            ability.DataHitPointsPerSecond[2] = 0f;
            ability.DataHitPointsPerSecond[3] = 0f;
            ability.DataHitPointsPerSecond[4] = 0f;
            return ability;
        }

        protected virtual SpellShield LoadSpellShield(ObjectDatabaseBase db)
        {
            var ability = new SpellShield(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 40f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNss";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SpellShieldAOE LoadSpellShieldAOE(ObjectDatabaseBase db)
        {
            var ability = new SpellShieldAOE(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,invu,vuln,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNss";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataShieldCooldownTime[1] = 0f;
            ability.DataShieldCooldownTime[2] = 0f;
            ability.DataShieldCooldownTime[3] = 0f;
            ability.DataShieldCooldownTime[4] = 0f;
            return ability;
        }

        protected virtual Retrain LoadRetrain(ObjectDatabaseBase db)
        {
            var ability = new Retrain(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual StaffOTeleportation LoadStaffOTeleportation(ObjectDatabaseBase db)
        {
            var ability = new StaffOTeleportation(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,structure,vuln,invu,player,neutral,ally";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 90f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 50f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNumberOfUnitsTeleported[1] = 1;
            ability.DataNumberOfUnitsTeleported[2] = 0;
            ability.DataNumberOfUnitsTeleported[3] = 0;
            ability.DataNumberOfUnitsTeleported[4] = 0;
            ability.DataCastingDelay[1] = 3f;
            ability.DataCastingDelay[2] = 0f;
            ability.DataCastingDelay[3] = 0f;
            ability.DataCastingDelay[4] = 0f;
            ability.DataUseTeleportClusteringRaw[1] = 1;
            ability.DataUseTeleportClusteringRaw[2] = 0;
            ability.DataUseTeleportClusteringRaw[3] = 0;
            ability.DataUseTeleportClusteringRaw[4] = 0;
            return ability;
        }

        protected virtual SpellBook LoadSpellBook(ObjectDatabaseBase db)
        {
            var ability = new SpellBook(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSpellListRaw[1] = "AEer,Adis,Aroa";
            ability.DataSpellListRaw[2] = "-";
            ability.DataSpellListRaw[3] = "-";
            ability.DataSpellListRaw[4] = "-";
            ability.DataSharedSpellCooldownRaw[1] = 1;
            ability.DataSharedSpellCooldownRaw[2] = 0;
            ability.DataSharedSpellCooldownRaw[3] = 0;
            ability.DataSharedSpellCooldownRaw[4] = 0;
            ability.DataMinimumSpells[1] = 3;
            ability.DataMinimumSpells[2] = 0;
            ability.DataMinimumSpells[3] = 0;
            ability.DataMinimumSpells[4] = 0;
            ability.DataMaximumSpells[1] = 3;
            ability.DataMaximumSpells[2] = 0;
            ability.DataMaximumSpells[3] = 0;
            ability.DataMaximumSpells[4] = 0;
            ability.DataBaseOrderIDRaw[1] = "spellbook";
            ability.DataBaseOrderIDRaw[2] = "-";
            ability.DataBaseOrderIDRaw[3] = "-";
            ability.DataBaseOrderIDRaw[4] = "-";
            return ability;
        }

        protected virtual RaiseDeadItem LoadRaiseDeadItem(ObjectDatabaseBase db)
        {
            var ability = new RaiseDeadItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "dead";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 65f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 65f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 24f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Brai";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUnitsSummonedTypeOne[1] = 2;
            ability.DataUnitsSummonedTypeOne[2] = 0;
            ability.DataUnitsSummonedTypeOne[3] = 0;
            ability.DataUnitsSummonedTypeOne[4] = 0;
            ability.DataUnitsSummonedTypeTwo[1] = 0;
            ability.DataUnitsSummonedTypeTwo[2] = 0;
            ability.DataUnitsSummonedTypeTwo[3] = 0;
            ability.DataUnitsSummonedTypeTwo[4] = 0;
            ability.DataUnitTypeOneRaw[1] = "uske";
            ability.DataUnitTypeOneRaw[2] = "-";
            ability.DataUnitTypeOneRaw[3] = "-";
            ability.DataUnitTypeOneRaw[4] = "-";
            ability.DataUnitTypeTwoRaw[1] = "-";
            ability.DataUnitTypeTwoRaw[2] = "-";
            ability.DataUnitTypeTwoRaw[3] = "-";
            ability.DataUnitTypeTwoRaw[4] = "-";
            ability.DataUnitTypeForLimitCheckRaw[1] = "uske";
            ability.DataUnitTypeForLimitCheckRaw[2] = null;
            ability.DataUnitTypeForLimitCheckRaw[3] = null;
            ability.DataUnitTypeForLimitCheckRaw[4] = null;
            return ability;
        }

        protected virtual DustOfAppearance LoadDustOfAppearance(ObjectDatabaseBase db)
        {
            var ability = new DustOfAppearance(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward,enemy,neutral,vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 20f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 20f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1000f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bdet";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDetectionTypeRaw[1] = 3;
            ability.DataDetectionTypeRaw[2] = 0;
            ability.DataDetectionTypeRaw[3] = 0;
            ability.DataDetectionTypeRaw[4] = 0;
            return ability;
        }

        protected virtual DivineShieldItem LoadDivineShieldItem(ObjectDatabaseBase db)
        {
            var ability = new DivineShieldItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 25f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 25f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BHds";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SilenceItem LoadSilenceItem(ObjectDatabaseBase db)
        {
            var ability = new SilenceItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 6f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 225f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNsi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 8;
            ability.DataAttacksPreventedRaw[2] = 0;
            ability.DataAttacksPreventedRaw[3] = 0;
            ability.DataAttacksPreventedRaw[4] = 0;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataMovementSpeedModifier[1] = 0f;
            ability.DataMovementSpeedModifier[2] = 0f;
            ability.DataMovementSpeedModifier[3] = 0f;
            ability.DataMovementSpeedModifier[4] = 0f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual PurgeOrb LoadPurgeOrb(ObjectDatabaseBase db)
        {
            var ability = new PurgeOrb(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataMovementUpdateFrequency[1] = 5;
            ability.DataMovementUpdateFrequency[2] = 0;
            ability.DataMovementUpdateFrequency[3] = 0;
            ability.DataMovementUpdateFrequency[4] = 0;
            ability.DataAttackUpdateFrequency[1] = 0;
            ability.DataAttackUpdateFrequency[2] = 0;
            ability.DataAttackUpdateFrequency[3] = 0;
            ability.DataAttackUpdateFrequency[4] = 0;
            ability.DataSummonedUnitDamage[1] = 150f;
            ability.DataSummonedUnitDamage[2] = 0f;
            ability.DataSummonedUnitDamage[3] = 0f;
            ability.DataSummonedUnitDamage[4] = 0f;
            ability.DataUnitPauseDuration[1] = 3f;
            ability.DataUnitPauseDuration[2] = 0f;
            ability.DataUnitPauseDuration[3] = 0f;
            ability.DataUnitPauseDuration[4] = 0f;
            ability.DataHeroPauseDuration[1] = 1f;
            ability.DataHeroPauseDuration[2] = 0f;
            ability.DataHeroPauseDuration[3] = 0f;
            ability.DataHeroPauseDuration[4] = 0f;
            ability.DataManaLoss[1] = 0;
            ability.DataManaLoss[2] = 0;
            ability.DataManaLoss[3] = 0;
            ability.DataManaLoss[4] = 0;
            return ability;
        }

        protected virtual PurgeTotemSP LoadPurgeTotemSP(ObjectDatabaseBase db)
        {
            var ability = new PurgeTotemSP(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 15f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 5f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 8f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bprg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CloudOfFogItem LoadCloudOfFogItem(ObjectDatabaseBase db)
        {
            var ability = new CloudOfFogItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu,structure";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 30f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 30f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1000f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bclf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = "Xclf";
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAttacksPreventedRaw[1] = 2;
            ability.DataAttacksPreventedRaw[2] = 0;
            ability.DataAttacksPreventedRaw[3] = 0;
            ability.DataAttacksPreventedRaw[4] = 0;
            ability.DataChanceToMiss[1] = 0f;
            ability.DataChanceToMiss[2] = 0f;
            ability.DataChanceToMiss[3] = 0f;
            ability.DataChanceToMiss[4] = 0f;
            ability.DataMovementSpeedModifier[1] = 0f;
            ability.DataMovementSpeedModifier[2] = 0f;
            ability.DataMovementSpeedModifier[3] = 0f;
            ability.DataMovementSpeedModifier[4] = 0f;
            ability.DataAttackSpeedModifier[1] = 0f;
            ability.DataAttackSpeedModifier[2] = 0f;
            ability.DataAttackSpeedModifier[3] = 0f;
            ability.DataAttackSpeedModifier[4] = 0f;
            return ability;
        }

        protected virtual RuneOfLesserResurrection LoadRuneOfLesserResurrection(ObjectDatabaseBase db)
        {
            var ability = new RuneOfLesserResurrection(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            return ability;
        }

        protected virtual RuneOfGreaterResurrection LoadRuneOfGreaterResurrection(ObjectDatabaseBase db)
        {
            var ability = new RuneOfGreaterResurrection(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataRaisedUnitsAreInvulnerableRaw[1] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[2] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[3] = 0;
            ability.DataRaisedUnitsAreInvulnerableRaw[4] = 0;
            return ability;
        }

        protected virtual RuneOfRebirth LoadRuneOfRebirth(ObjectDatabaseBase db)
        {
            var ability = new RuneOfRebirth(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrb";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual RuneOfSpiritLink LoadRuneOfSpiritLink(ObjectDatabaseBase db)
        {
            var ability = new RuneOfSpiritLink(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,friend,self,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 75f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 75f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 1400f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 1400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDistributedDamageFactor[1] = 0.5f;
            ability.DataDistributedDamageFactor[2] = 0f;
            ability.DataDistributedDamageFactor[3] = 0f;
            ability.DataDistributedDamageFactor[4] = 0f;
            return ability;
        }

        protected virtual DarkSummoning LoadDarkSummoning(ObjectDatabaseBase db)
        {
            var ability = new DarkSummoning(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,vuln,invu,player";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 90f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 700f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 99999f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataUseTeleportClusteringRaw[1] = 1;
            ability.DataUseTeleportClusteringRaw[2] = 0;
            ability.DataUseTeleportClusteringRaw[3] = 0;
            ability.DataUseTeleportClusteringRaw[4] = 0;
            ability.DataMaximumUnits[1] = 12;
            ability.DataMaximumUnits[2] = 0;
            ability.DataMaximumUnits[3] = 0;
            ability.DataMaximumUnits[4] = 0;
            ability.DataCastingDelayseconds[1] = 1f;
            ability.DataCastingDelayseconds[2] = 0f;
            ability.DataCastingDelayseconds[3] = 0f;
            ability.DataCastingDelayseconds[4] = 0f;
            return ability;
        }

        protected virtual RuneOfTheWatcher LoadRuneOfTheWatcher(ObjectDatabaseBase db)
        {
            var ability = new RuneOfTheWatcher(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Beye";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual UnholyFrenzyItem LoadUnholyFrenzyItem(ObjectDatabaseBase db)
        {
            var ability = new UnholyFrenzyItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 1f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 500f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Buhf";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DefenseBonus10 LoadDefenseBonus10(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus10(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ControlMagicItem LoadControlMagicItem(ObjectDatabaseBase db)
        {
            var ability = new ControlMagicItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 25;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bcmg";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MaxManaBonusLeastest LoadMaxManaBonusLeastest(ObjectDatabaseBase db)
        {
            var ability = new MaxManaBonusLeastest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FingerOfDeathItem LoadFingerOfDeathItem(ObjectDatabaseBase db)
        {
            var ability = new FingerOfDeathItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,organic,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DeathPactItem LoadDeathPactItem(ObjectDatabaseBase db)
        {
            var ability = new DeathPactItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 15f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 50;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MaxManaBonusLeastestReally LoadMaxManaBonusLeastestReally(ObjectDatabaseBase db)
        {
            var ability = new MaxManaBonusLeastestReally(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PermanentHitPointBonusSmall LoadPermanentHitPointBonusSmall(ObjectDatabaseBase db)
        {
            var ability = new PermanentHitPointBonusSmall(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DefendItem LoadDefendItem(ObjectDatabaseBase db)
        {
            var ability = new DefendItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "vuln,invu";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataDamageTaken[1] = 0.7f;
            ability.DataDamageTaken[2] = 0f;
            ability.DataDamageTaken[3] = 0f;
            ability.DataDamageTaken[4] = 0f;
            ability.DataDamageDealt[1] = 1f;
            ability.DataDamageDealt[2] = 0f;
            ability.DataDamageDealt[3] = 0f;
            ability.DataDamageDealt[4] = 0f;
            ability.DataMovementSpeedFactor[1] = 0f;
            ability.DataMovementSpeedFactor[2] = 0f;
            ability.DataMovementSpeedFactor[3] = 0f;
            ability.DataMovementSpeedFactor[4] = 0f;
            ability.DataAttackSpeedFactor[1] = 0f;
            ability.DataAttackSpeedFactor[2] = 0f;
            ability.DataAttackSpeedFactor[3] = 0f;
            ability.DataAttackSpeedFactor[4] = 0f;
            ability.DataMagicDamageReduction[1] = 1f;
            ability.DataMagicDamageReduction[2] = 0f;
            ability.DataMagicDamageReduction[3] = 0f;
            ability.DataMagicDamageReduction[4] = 0f;
            ability.DataChanceToDeflect[1] = 0f;
            ability.DataChanceToDeflect[2] = 0f;
            ability.DataChanceToDeflect[3] = 0f;
            ability.DataChanceToDeflect[4] = 0f;
            ability.DataDeflectDamageTakenPiercing[1] = 1f;
            ability.DataDeflectDamageTakenPiercing[2] = 0f;
            ability.DataDeflectDamageTakenPiercing[3] = 0f;
            ability.DataDeflectDamageTakenPiercing[4] = 0f;
            ability.DataDeflectDamageTakenSpells[1] = 1f;
            ability.DataDeflectDamageTakenSpells[2] = 0f;
            ability.DataDeflectDamageTakenSpells[3] = 0f;
            ability.DataDeflectDamageTakenSpells[4] = 0f;
            return ability;
        }

        protected virtual DefenseBonus8 LoadDefenseBonus8(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus8(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual DefenseBonus7 LoadDefenseBonus7(ObjectDatabaseBase db)
        {
            var ability = new DefenseBonus7(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual MaxLifeBonusLeastest LoadMaxLifeBonusLeastest(ObjectDatabaseBase db)
        {
            var ability = new MaxLifeBonusLeastest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemHealLeastest LoadItemHealLeastest(ObjectDatabaseBase db)
        {
            var ability = new ItemHealLeastest(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 100f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AgilityBonus10 LoadAgilityBonus10(ObjectDatabaseBase db)
        {
            var ability = new AgilityBonus10(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ResurrectionItem LoadResurrectionItem(ObjectDatabaseBase db)
        {
            var ability = new ResurrectionItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,dead,friend";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 240f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 900f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual BashItem LoadBashItem(ObjectDatabaseBase db)
        {
            var ability = new BashItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 2f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 2f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BPSE";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataNeverMissRaw[1] = 0;
            ability.DataNeverMissRaw[2] = 0;
            ability.DataNeverMissRaw[3] = 0;
            ability.DataNeverMissRaw[4] = 0;
            return ability;
        }

        protected virtual AttackBonus20 LoadAttackBonus20(ObjectDatabaseBase db)
        {
            var ability = new AttackBonus20(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual WateryMinionItem LoadWateryMinionItem(ObjectDatabaseBase db)
        {
            var ability = new WateryMinionItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BNwm";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SummonHeadhunterItem LoadSummonHeadhunterItem(ObjectDatabaseBase db)
        {
            var ability = new SummonHeadhunterItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 60f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 60f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 60f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIsh";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummonedUnitRaw[1] = "otbk";
            ability.DataSummonedUnitRaw[2] = null;
            ability.DataSummonedUnitRaw[3] = null;
            ability.DataSummonedUnitRaw[4] = null;
            ability.DataNumberOfSummonedUnits[1] = 2;
            ability.DataNumberOfSummonedUnits[2] = 0;
            ability.DataNumberOfSummonedUnits[3] = 0;
            ability.DataNumberOfSummonedUnits[4] = 0;
            return ability;
        }

        protected virtual _200ManaBonus Load_200ManaBonus(ObjectDatabaseBase db)
        {
            var ability = new _200ManaBonus(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual AuraRegenerationItem LoadAuraRegenerationItem(ObjectDatabaseBase db)
        {
            var ability = new AuraRegenerationItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,organic,vuln,invu,friend,neutral,self";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Boar";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual HolyLightItem LoadHolyLightItem(ObjectDatabaseBase db)
        {
            var ability = new HolyLightItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic,notself,invu,vuln,nonancient";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 800f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SlowPoisonItem LoadSlowPoisonItem(ObjectDatabaseBase db)
        {
            var ability = new SlowPoisonItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 5f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bspo,Bssd,Bssi";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PenguinSqueek LoadPenguinSqueek(ObjectDatabaseBase db)
        {
            var ability = new PenguinSqueek(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual SearingBladeFireMelee LoadSearingBladeFireMelee(ObjectDatabaseBase db)
        {
            var ability = new SearingBladeFireMelee(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 100f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FrostguardFrostMelee LoadFrostguardFrostMelee(ObjectDatabaseBase db)
        {
            var ability = new FrostguardFrostMelee(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 1f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bfro";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ShamanClawsLightningMelee LoadShamanClawsLightningMelee(ObjectDatabaseBase db)
        {
            var ability = new ShamanClawsLightningMelee(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual CriticalStrikeItem LoadCriticalStrikeItem(ObjectDatabaseBase db)
        {
            var ability = new CriticalStrikeItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ChainLightningItem LoadChainLightningItem(ObjectDatabaseBase db)
        {
            var ability = new ChainLightningItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,organic";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 9f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 500f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 700f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual All3 LoadAll3(ObjectDatabaseBase db)
        {
            var ability = new All3(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 3;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 3;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 3;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual All4 LoadAll4(ObjectDatabaseBase db)
        {
            var ability = new All4(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataAgilityBonus[1] = 4;
            ability.DataAgilityBonus[2] = 0;
            ability.DataAgilityBonus[3] = 0;
            ability.DataAgilityBonus[4] = 0;
            ability.DataIntelligenceBonus[1] = 4;
            ability.DataIntelligenceBonus[2] = 0;
            ability.DataIntelligenceBonus[3] = 0;
            ability.DataIntelligenceBonus[4] = 0;
            ability.DataStrengthBonus[1] = 4;
            ability.DataStrengthBonus[2] = 0;
            ability.DataStrengthBonus[3] = 0;
            ability.DataStrengthBonus[4] = 0;
            ability.DataHideButtonRaw[1] = 0;
            ability.DataHideButtonRaw[2] = 0;
            ability.DataHideButtonRaw[3] = 0;
            ability.DataHideButtonRaw[4] = 0;
            return ability;
        }

        protected virtual BeserkItem LoadBeserkItem(ObjectDatabaseBase db)
        {
            var ability = new BeserkItem(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 12f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 12f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 30f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Bbsk";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual ItemRitualDaggerInstant LoadItemRitualDaggerInstant(ObjectDatabaseBase db)
        {
            var ability = new ItemRitualDaggerInstant(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 300f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLeaveTargetAliveRaw[1] = 0;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            ability.DataHitPointsGained[1] = 100;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            ability.DataRequiresUndeadTargetRaw[1] = 1;
            ability.DataRequiresUndeadTargetRaw[2] = 0;
            ability.DataRequiresUndeadTargetRaw[3] = 0;
            ability.DataRequiresUndeadTargetRaw[4] = 0;
            ability.DataAffectsInitialTargetRaw[1] = 0;
            ability.DataAffectsInitialTargetRaw[2] = 0;
            ability.DataAffectsInitialTargetRaw[3] = 0;
            ability.DataAffectsInitialTargetRaw[4] = 0;
            ability.DataTargetsAllowedForHealRaw[1] = "ground,air,friend,organic,vuln,invu,self";
            ability.DataTargetsAllowedForHealRaw[2] = "-";
            ability.DataTargetsAllowedForHealRaw[3] = "-";
            ability.DataTargetsAllowedForHealRaw[4] = "-";
            return ability;
        }

        protected virtual ItemRitualDaggerRegen LoadItemRitualDaggerRegen(ObjectDatabaseBase db)
        {
            var ability = new ItemRitualDaggerRegen(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,player,nonhero,invu,vuln";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 45f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 45f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 5f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 450f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 400f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BIrl";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataLeaveTargetAliveRaw[1] = 0;
            ability.DataLeaveTargetAliveRaw[2] = 0;
            ability.DataLeaveTargetAliveRaw[3] = 0;
            ability.DataLeaveTargetAliveRaw[4] = 0;
            ability.DataHitPointsGained[1] = 175;
            ability.DataHitPointsGained[2] = 0;
            ability.DataHitPointsGained[3] = 0;
            ability.DataHitPointsGained[4] = 0;
            ability.DataRequiresUndeadTargetRaw[1] = 1;
            ability.DataRequiresUndeadTargetRaw[2] = 0;
            ability.DataRequiresUndeadTargetRaw[3] = 0;
            ability.DataRequiresUndeadTargetRaw[4] = 0;
            ability.DataAffectsInitialTargetRaw[1] = 0;
            ability.DataAffectsInitialTargetRaw[2] = 0;
            ability.DataAffectsInitialTargetRaw[3] = 0;
            ability.DataAffectsInitialTargetRaw[4] = 0;
            ability.DataTargetsAllowedForHealRaw[1] = "ground,air,friend,organic,vuln,invu,self";
            ability.DataTargetsAllowedForHealRaw[2] = "-";
            ability.DataTargetsAllowedForHealRaw[3] = "-";
            ability.DataTargetsAllowedForHealRaw[4] = "-";
            return ability;
        }

        protected virtual OrbOfFireV2 LoadOrbOfFireV2(ObjectDatabaseBase db)
        {
            var ability = new OrbOfFireV2(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,air,ward";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 3f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 3f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataHealingMultiplier[1] = 0.65f;
            ability.DataHealingMultiplier[2] = 0f;
            ability.DataHealingMultiplier[3] = 0f;
            ability.DataHealingMultiplier[4] = 0f;
            return ability;
        }

        protected virtual SunderingBlades LoadSunderingBlades(ObjectDatabaseBase db)
        {
            var ability = new SunderingBlades(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataBonusDamageFlat[1] = 0f;
            ability.DataBonusDamageFlat[2] = 0f;
            ability.DataBonusDamageFlat[3] = 0f;
            ability.DataBonusDamageFlat[4] = 0f;
            ability.DataBonusDamagePercent[1] = 0.15f;
            ability.DataBonusDamagePercent[2] = 0f;
            ability.DataBonusDamagePercent[3] = 0f;
            ability.DataBonusDamagePercent[4] = 0f;
            ability.DataDefenseTypeAffectedRaw[1] = 1;
            ability.DataDefenseTypeAffectedRaw[2] = 0;
            ability.DataDefenseTypeAffectedRaw[3] = 0;
            ability.DataDefenseTypeAffectedRaw[4] = 0;
            return ability;
        }

        protected virtual PassiveSimple LoadPassiveSimple(ObjectDatabaseBase db)
        {
            var ability = new PassiveSimple(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveHumanRiflemanPlusRangeRhri LoadPassiveHumanRiflemanPlusRangeRhri(ObjectDatabaseBase db)
        {
            var ability = new PassiveHumanRiflemanPlusRangeRhri(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveHumanAnimalBreedingRhan LoadPassiveHumanAnimalBreedingRhan(ObjectDatabaseBase db)
        {
            var ability = new PassiveHumanAnimalBreedingRhan(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassivePhoenixFireAndEgg LoadPassivePhoenixFireAndEgg(ObjectDatabaseBase db)
        {
            var ability = new PassivePhoenixFireAndEgg(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveHumanLumberHarvestingRhlh LoadPassiveHumanLumberHarvestingRhlh(ObjectDatabaseBase db)
        {
            var ability = new PassiveHumanLumberHarvestingRhlh(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "human";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcGruntBerserkRobs LoadPassiveOrcGruntBerserkRobs(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcGruntBerserkRobs(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcBerserkersRobk LoadPassiveOrcBerserkersRobk(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcBerserkersRobk(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcReinforcedDefenseRorb LoadPassiveOrcReinforcedDefenseRorb(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcReinforcedDefenseRorb(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcSpikedBarricadeRosp LoadPassiveOrcSpikedBarricadeRosp(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcSpikedBarricadeRosp(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 2;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcGhostIconOnlyOrcAethUnused LoadPassiveOrcGhostIconOnlyOrcAethUnused(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcGhostIconOnlyOrcAethUnused(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveOrcTrollRegenerationRotr LoadPassiveOrcTrollRegenerationRotr(ObjectDatabaseBase db)
        {
            var ability = new PassiveOrcTrollRegenerationRotr(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "orc";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveUndeadGhoulFrenzyRugf LoadPassiveUndeadGhoulFrenzyRugf(ObjectDatabaseBase db)
        {
            var ability = new PassiveUndeadGhoulFrenzyRugf(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveGhostIconOnlyUndeadAgho LoadPassiveGhostIconOnlyUndeadAgho(ObjectDatabaseBase db)
        {
            var ability = new PassiveGhostIconOnlyUndeadAgho(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveUndeadSkeletalMasteryRusm LoadPassiveUndeadSkeletalMasteryRusm(ObjectDatabaseBase db)
        {
            var ability = new PassiveUndeadSkeletalMasteryRusm(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveNightelfImprovedBowsReib LoadPassiveNightelfImprovedBowsReib(ObjectDatabaseBase db)
        {
            var ability = new PassiveNightelfImprovedBowsReib(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveNightelfMarksmanshipRemk LoadPassiveNightelfMarksmanshipRemk(ObjectDatabaseBase db)
        {
            var ability = new PassiveNightelfMarksmanshipRemk(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual PassiveNightelfWellSpringRews LoadPassiveNightelfWellSpringRews(ObjectDatabaseBase db)
        {
            var ability = new PassiveNightelfWellSpringRews(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "nightelf";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = null;
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            return ability;
        }

        protected virtual FigurineBlueDrake LoadFigurineBlueDrake(ObjectDatabaseBase db)
        {
            var ability = new FigurineBlueDrake(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nadk";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineFurbolgTracker LoadFigurineFurbolgTracker(ObjectDatabaseBase db)
        {
            var ability = new FigurineFurbolgTracker(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nfrb";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual FigurineDragonspawnOverseer LoadFigurineDragonspawnOverseer(ObjectDatabaseBase db)
        {
            var ability = new FigurineDragonspawnOverseer(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "_";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 180f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 20f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 200f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "BFig";
            ability.StatsBuffsRaw[2] = null;
            ability.StatsBuffsRaw[3] = null;
            ability.StatsBuffsRaw[4] = null;
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataSummon1Amount[1] = 1;
            ability.DataSummon1Amount[2] = 0;
            ability.DataSummon1Amount[3] = 0;
            ability.DataSummon1Amount[4] = 0;
            ability.DataSummon1UnitTypeRaw[1] = "nbdo";
            ability.DataSummon1UnitTypeRaw[2] = "-";
            ability.DataSummon1UnitTypeRaw[3] = "-";
            ability.DataSummon1UnitTypeRaw[4] = "-";
            ability.DataSummon2Amount[1] = 0;
            ability.DataSummon2Amount[2] = 0;
            ability.DataSummon2Amount[3] = 0;
            ability.DataSummon2Amount[4] = 0;
            ability.DataSummon2UnitTypeRaw[1] = "-";
            ability.DataSummon2UnitTypeRaw[2] = "-";
            ability.DataSummon2UnitTypeRaw[3] = "-";
            ability.DataSummon2UnitTypeRaw[4] = "-";
            return ability;
        }

        protected virtual ItemTransmute LoadItemTransmute(ObjectDatabaseBase db)
        {
            var ability = new ItemTransmute(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 1;
            ability.StatsRaceRaw = "other";
            ability.TechtreeCheckDependenciesRaw = 0;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air,ground,enemy,neutral,nonhero";
            ability.StatsTargetsAllowedRaw[2] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[3] = "air,ground,enemy,neutral";
            ability.StatsTargetsAllowedRaw[4] = "air,ground,enemy,neutral";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 45f;
            ability.StatsCooldown[3] = 45f;
            ability.StatsCooldown[4] = 45f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 200;
            ability.StatsManaCost[3] = 200;
            ability.StatsManaCost[4] = 200;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 600f;
            ability.StatsCastRange[2] = 200f;
            ability.StatsCastRange[3] = 200f;
            ability.StatsCastRange[4] = 200f;
            ability.StatsBuffsRaw[1] = "BNtm";
            ability.StatsBuffsRaw[2] = "BNtm";
            ability.StatsBuffsRaw[3] = "BNtm";
            ability.StatsBuffsRaw[4] = "BNtm";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataGoldCostFactor[1] = 0.75f;
            ability.DataGoldCostFactor[2] = 2f;
            ability.DataGoldCostFactor[3] = 2f;
            ability.DataGoldCostFactor[4] = 2f;
            ability.DataLumberCostFactor[1] = 0f;
            ability.DataLumberCostFactor[2] = 0f;
            ability.DataLumberCostFactor[3] = 0f;
            ability.DataLumberCostFactor[4] = 0f;
            ability.DataMaxCreepLevel[1] = 5;
            ability.DataMaxCreepLevel[2] = 5;
            ability.DataMaxCreepLevel[3] = 5;
            ability.DataMaxCreepLevel[4] = 5;
            ability.DataAllowBountyRaw[1] = 1;
            ability.DataAllowBountyRaw[2] = 1;
            ability.DataAllowBountyRaw[3] = 1;
            ability.DataAllowBountyRaw[4] = 1;
            return ability;
        }

        protected virtual AttackTargetPriority LoadAttackTargetPriority(ObjectDatabaseBase db)
        {
            var ability = new AttackTargetPriority(db);
            ability.StatsHeroAbilityRaw = 0;
            ability.StatsItemAbilityRaw = 0;
            ability.StatsRaceRaw = "undead";
            ability.TechtreeCheckDependenciesRaw = 1;
            ability.StatsPriorityForSpellSteal = 0;
            ability.StatsLevels = 1;
            ability.StatsRequiredLevel = 0;
            ability.StatsLevelSkipRequirement = 0;
            ability.StatsTargetsAllowedRaw[1] = "air";
            ability.StatsTargetsAllowedRaw[2] = "_";
            ability.StatsTargetsAllowedRaw[3] = "_";
            ability.StatsTargetsAllowedRaw[4] = "_";
            ability.StatsCastingTime[1] = 0f;
            ability.StatsCastingTime[2] = 0f;
            ability.StatsCastingTime[3] = 0f;
            ability.StatsCastingTime[4] = 0f;
            ability.StatsDurationNormal[1] = 0f;
            ability.StatsDurationNormal[2] = 0f;
            ability.StatsDurationNormal[3] = 0f;
            ability.StatsDurationNormal[4] = 0f;
            ability.StatsDurationHero[1] = 0f;
            ability.StatsDurationHero[2] = 0f;
            ability.StatsDurationHero[3] = 0f;
            ability.StatsDurationHero[4] = 0f;
            ability.StatsCooldown[1] = 0f;
            ability.StatsCooldown[2] = 0f;
            ability.StatsCooldown[3] = 0f;
            ability.StatsCooldown[4] = 0f;
            ability.StatsManaCost[1] = 0;
            ability.StatsManaCost[2] = 0;
            ability.StatsManaCost[3] = 0;
            ability.StatsManaCost[4] = 0;
            ability.StatsAreaOfEffect[1] = 0f;
            ability.StatsAreaOfEffect[2] = 0f;
            ability.StatsAreaOfEffect[3] = 0f;
            ability.StatsAreaOfEffect[4] = 0f;
            ability.StatsCastRange[1] = 0f;
            ability.StatsCastRange[2] = 0f;
            ability.StatsCastRange[3] = 0f;
            ability.StatsCastRange[4] = 0f;
            ability.StatsBuffsRaw[1] = "Batp";
            ability.StatsBuffsRaw[2] = "Batp";
            ability.StatsBuffsRaw[3] = "Batp";
            ability.StatsBuffsRaw[4] = "Batp";
            ability.StatsEffectsRaw[1] = null;
            ability.StatsEffectsRaw[2] = null;
            ability.StatsEffectsRaw[3] = null;
            ability.StatsEffectsRaw[4] = null;
            ability.DataInitiallyEnabledRaw[1] = 0;
            ability.DataInitiallyEnabledRaw[2] = 0;
            ability.DataInitiallyEnabledRaw[3] = 0;
            ability.DataInitiallyEnabledRaw[4] = 0;
            return ability;
        }

        public Ability Load(AbilityType abilityType, ObjectDatabaseBase db)
        {
            return abilityType switch
            {
            AbilityType.ArchMageBlizzard => LoadArchMageBlizzard(db), AbilityType.ArchMageBrillianceAura => LoadArchMageBrillianceAura(db), AbilityType.ArchMageMassTeleport => LoadArchMageMassTeleport(db), AbilityType.ArchMageWaterElemental => LoadArchMageWaterElemental(db), AbilityType.BeastMasterStampede => LoadBeastMasterStampede(db), AbilityType.BeastMasterSummonBear => LoadBeastMasterSummonBear(db), AbilityType.BeastMasterSummonQuilbeast => LoadBeastMasterSummonQuilbeast(db), AbilityType.BeastMasterSummonHawk => LoadBeastMasterSummonHawk(db), AbilityType.BladeMasterBladestorm => LoadBladeMasterBladestorm(db), AbilityType.BladeMasterCriticalStrike => LoadBladeMasterCriticalStrike(db), AbilityType.BladeMasterMirrorImage => LoadBladeMasterMirrorImage(db), AbilityType.BladeMasterWindWalk => LoadBladeMasterWindWalk(db), AbilityType.BloodMageBanish => LoadBloodMageBanish(db), AbilityType.BloodMageFlameStrike => LoadBloodMageFlameStrike(db), AbilityType.BloodMageSiphonMana => LoadBloodMageSiphonMana(db), AbilityType.BloodMagePhoenix => LoadBloodMagePhoenix(db), AbilityType.CryptLordCarrionScarabs => LoadCryptLordCarrionScarabs(db), AbilityType.CryptLordImpale => LoadCryptLordImpale(db), AbilityType.CryptLordLocustSwarm => LoadCryptLordLocustSwarm(db), AbilityType.CryptLordSpikedCarapace => LoadCryptLordSpikedCarapace(db), AbilityType.DarkRangerBlackArrow => LoadDarkRangerBlackArrow(db), AbilityType.DarkRangerCharm => LoadDarkRangerCharm(db), AbilityType.DarkRangerDrain => LoadDarkRangerDrain(db), AbilityType.DarkRangerSilence => LoadDarkRangerSilence(db), AbilityType.DeathKnightAnimateDead => LoadDeathKnightAnimateDead(db), AbilityType.DeathKnightDeathCoil => LoadDeathKnightDeathCoil(db), AbilityType.DeathKnightDeathPact => LoadDeathKnightDeathPact(db), AbilityType.DeathKnightUnholyAura => LoadDeathKnightUnholyAura(db), AbilityType.DemonHunterEvasion => LoadDemonHunterEvasion(db), AbilityType.DemonHunterImmolation => LoadDemonHunterImmolation(db), AbilityType.DemonHunterManaBurn => LoadDemonHunterManaBurn(db), AbilityType.DemonHunterMetamorphosis => LoadDemonHunterMetamorphosis(db), AbilityType.DreadlordSleep => LoadDreadlordSleep(db), AbilityType.DreadlordVampiricAura => LoadDreadlordVampiricAura(db), AbilityType.DreadlordCarrionSwarm => LoadDreadlordCarrionSwarm(db), AbilityType.DreadlordInferno => LoadDreadlordInferno(db), AbilityType.FarseerChainLightning => LoadFarseerChainLightning(db), AbilityType.FarseerEarthquake => LoadFarseerEarthquake(db), AbilityType.FarseerFarSight => LoadFarseerFarSight(db), AbilityType.FarseerSpiritWolf => LoadFarseerSpiritWolf(db), AbilityType.KeeperEntanglingRoots => LoadKeeperEntanglingRoots(db), AbilityType.KeeperForceOfNature => LoadKeeperForceOfNature(db), AbilityType.KeeperThornsAura => LoadKeeperThornsAura(db), AbilityType.KeeperTranquility => LoadKeeperTranquility(db), AbilityType.LichDarkRitual => LoadLichDarkRitual(db), AbilityType.LichDeathAndDecay => LoadLichDeathAndDecay(db), AbilityType.LichFrostArmor => LoadLichFrostArmor(db), AbilityType.LichFrostArmorAutocast => LoadLichFrostArmorAutocast(db), AbilityType.LichFrostNova => LoadLichFrostNova(db), AbilityType.MountainKingAvatar => LoadMountainKingAvatar(db), AbilityType.MountainKingBash => LoadMountainKingBash(db), AbilityType.MountainKingThunderBolt => LoadMountainKingThunderBolt(db), AbilityType.MountainKingThunderClap => LoadMountainKingThunderClap(db), AbilityType.SeaWitchForkedLightning => LoadSeaWitchForkedLightning(db), AbilityType.SeaWitchFrostArrows => LoadSeaWitchFrostArrows(db), AbilityType.SeaWitchTornado => LoadSeaWitchTornado(db), AbilityType.SeaWitchManaShield => LoadSeaWitchManaShield(db), AbilityType.PaladinDevotionAura => LoadPaladinDevotionAura(db), AbilityType.PaladinDivineShield => LoadPaladinDivineShield(db), AbilityType.PaladinHolyLight => LoadPaladinHolyLight(db), AbilityType.PaladinResurrection => LoadPaladinResurrection(db), AbilityType.BrewmasterBreathOfFire => LoadBrewmasterBreathOfFire(db), AbilityType.BrewmasterDrunkenBrawler => LoadBrewmasterDrunkenBrawler(db), AbilityType.BrewmasterDrunkenHaze => LoadBrewmasterDrunkenHaze(db), AbilityType.BrewmasterStormEarthAndFire => LoadBrewmasterStormEarthAndFire(db), AbilityType.PitLordDoom => LoadPitLordDoom(db), AbilityType.PitLordHowlOfTerror => LoadPitLordHowlOfTerror(db), AbilityType.PitLordCleavingAttack => LoadPitLordCleavingAttack(db), AbilityType.PitLordRainOfFire => LoadPitLordRainOfFire(db), AbilityType.PriestessSearingArrows => LoadPriestessSearingArrows(db), AbilityType.PriestessScout => LoadPriestessScout(db), AbilityType.PriestessStarfall => LoadPriestessStarfall(db), AbilityType.PriestessTrueshotAura => LoadPriestessTrueshotAura(db), AbilityType.ChieftainEnduranceAura => LoadChieftainEnduranceAura(db), AbilityType.ChieftainReincarnation => LoadChieftainReincarnation(db), AbilityType.ChieftainShockWave => LoadChieftainShockWave(db), AbilityType.ChieftainWarStomp => LoadChieftainWarStomp(db), AbilityType.ShadowHunterHealingWave => LoadShadowHunterHealingWave(db), AbilityType.ShadowHunterHex => LoadShadowHunterHex(db), AbilityType.ShadowHunterSerpentWard => LoadShadowHunterSerpentWard(db), AbilityType.ShadowHunterVoodooo => LoadShadowHunterVoodooo(db), AbilityType.WardenBlink => LoadWardenBlink(db), AbilityType.WardenFanOfKnives => LoadWardenFanOfKnives(db), AbilityType.WardenShadowStrike => LoadWardenShadowStrike(db), AbilityType.WardenSpiritOfVengeance => LoadWardenSpiritOfVengeance(db), AbilityType.AlchemistAcidBomb => LoadAlchemistAcidBomb(db), AbilityType.AlchemistChemicalRage => LoadAlchemistChemicalRage(db), AbilityType.AlchemistHealingSpray => LoadAlchemistHealingSpray(db), AbilityType.AlchemistTransmute => LoadAlchemistTransmute(db), AbilityType.TinkererEngineeringUpgrade => LoadTinkererEngineeringUpgrade(db), AbilityType.TinkererClusterRocketsLevel0 => LoadTinkererClusterRocketsLevel0(db), AbilityType.TinkererClusterRocketsLevel1 => LoadTinkererClusterRocketsLevel1(db), AbilityType.TinkererClusterRocketsLevel2 => LoadTinkererClusterRocketsLevel2(db), AbilityType.TinkererClusterRocketsLevel3 => LoadTinkererClusterRocketsLevel3(db), AbilityType.TinkererRoboGoblinLevel0 => LoadTinkererRoboGoblinLevel0(db), AbilityType.TinkererRoboGoblinLevel1 => LoadTinkererRoboGoblinLevel1(db), AbilityType.TinkererRoboGoblinLevel2 => LoadTinkererRoboGoblinLevel2(db), AbilityType.TinkererRoboGoblinLevel3 => LoadTinkererRoboGoblinLevel3(db), AbilityType.TinkererSummonFactoryLevel0 => LoadTinkererSummonFactoryLevel0(db), AbilityType.TinkererSummonFactoryLevel1 => LoadTinkererSummonFactoryLevel1(db), AbilityType.TinkererSummonFactoryLevel2 => LoadTinkererSummonFactoryLevel2(db), AbilityType.TinkererSummonFactoryLevel3 => LoadTinkererSummonFactoryLevel3(db), AbilityType.TinkererDemolishLevel0 => LoadTinkererDemolishLevel0(db), AbilityType.TinkererDemolishLevel1 => LoadTinkererDemolishLevel1(db), AbilityType.TinkererDemolishLevel2 => LoadTinkererDemolishLevel2(db), AbilityType.TinkererDemolishLevel3 => LoadTinkererDemolishLevel3(db), AbilityType.FirelordIncinerate_ANic => LoadFirelordIncinerate_ANic(db), AbilityType.FirelordIncinerate_ANia => LoadFirelordIncinerate_ANia(db), AbilityType.FirelordSoulBurn => LoadFirelordSoulBurn(db), AbilityType.FirelordSummonLavaSpawn => LoadFirelordSummonLavaSpawn(db), AbilityType.FirelordVolcano => LoadFirelordVolcano(db), AbilityType.Inferno => LoadInferno(db), AbilityType.TichondriusInferno => LoadTichondriusInferno(db), AbilityType.FireBolt => LoadFireBolt(db), AbilityType.FingerOfDeath_ANfd => LoadFingerOfDeath_ANfd(db), AbilityType.FingerOfPain => LoadFingerOfPain(db), AbilityType.FingerOfPain21Button => LoadFingerOfPain21Button(db), AbilityType.DarkPortal => LoadDarkPortal(db), AbilityType.RainOfChaos => LoadRainOfChaos(db), AbilityType.RainOfChaosButton02 => LoadRainOfChaosButton02(db), AbilityType.CenariusBeefyStarfall => LoadCenariusBeefyStarfall(db), AbilityType.MannorothReincarnation => LoadMannorothReincarnation(db), AbilityType.MalganisDarkConversion => LoadMalganisDarkConversion(db), AbilityType.DarkConversionFast => LoadDarkConversionFast(db), AbilityType.MalganisSoulPreservation => LoadMalganisSoulPreservation(db), AbilityType.IllidanMetamorphosis => LoadIllidanMetamorphosis(db), AbilityType.EvilIllidanMetamorphosis => LoadEvilIllidanMetamorphosis(db), AbilityType.SuperEarthquake => LoadSuperEarthquake(db), AbilityType.SuperDeathAndDecay => LoadSuperDeathAndDecay(db), AbilityType.Monsoon => LoadMonsoon(db), AbilityType.PoisonArrows => LoadPoisonArrows(db), AbilityType.WateryMinion => LoadWateryMinion(db), AbilityType.ColdArrows => LoadColdArrows(db), AbilityType.BattleRoar => LoadBattleRoar(db), AbilityType.RexxarSummonBear => LoadRexxarSummonBear(db), AbilityType.AttributeModifierSkill => LoadAttributeModifierSkill(db), AbilityType.RexxarSummonQuilbeast => LoadRexxarSummonQuilbeast(db), AbilityType.RexxarStampede => LoadRexxarStampede(db), AbilityType.RexxarStormBolt => LoadRexxarStormBolt(db), AbilityType.RokhanHealingWave => LoadRokhanHealingWave(db), AbilityType.RokhanSerpentWard => LoadRokhanSerpentWard(db), AbilityType.RokhanHex => LoadRokhanHex(db), AbilityType.RokhanVoodooSpirits => LoadRokhanVoodooSpirits(db), AbilityType.ChenBreathOfFire => LoadChenBreathOfFire(db), AbilityType.ChenDrunkenBrawler => LoadChenDrunkenBrawler(db), AbilityType.ChenDrunkenHaze => LoadChenDrunkenHaze(db), AbilityType.ChenStormEarthAndFire => LoadChenStormEarthAndFire(db), AbilityType.CairneEnduranceAura => LoadCairneEnduranceAura(db), AbilityType.CairneReincarnation => LoadCairneReincarnation(db), AbilityType.CairneShockWave => LoadCairneShockWave(db), AbilityType.CairneWarStomp => LoadCairneWarStomp(db), AbilityType.IllidanChannel => LoadIllidanChannel(db), AbilityType.AbolishMagic => LoadAbolishMagic(db), AbilityType.AbolishMagicNaga => LoadAbolishMagicNaga(db), AbilityType.AbolishMagicCreep => LoadAbolishMagicCreep(db), AbilityType.AbolishMagicCreep12Pos => LoadAbolishMagicCreep12Pos(db), AbilityType.AbsorbMana => LoadAbsorbMana(db), AbilityType.AcolyteHarvest => LoadAcolyteHarvest(db), AbilityType.AvatarGarithos => LoadAvatarGarithos(db), AbilityType.Alarm => LoadAlarm(db), AbilityType.AlliedBuilding => LoadAlliedBuilding(db), AbilityType.AncestralSpirit => LoadAncestralSpirit(db), AbilityType.AnimateDeadCreep => LoadAnimateDeadCreep(db), AbilityType.AntiMagicShield_Aams => LoadAntiMagicShield_Aams(db), AbilityType.AntiMagicShieldMatrix => LoadAntiMagicShieldMatrix(db), AbilityType.AntiMagicShieldCreep => LoadAntiMagicShieldCreep(db), AbilityType.Attack => LoadAttack(db), AbilityType.AuraBrillianceCreep => LoadAuraBrillianceCreep(db), AbilityType.AuraCommandCreep => LoadAuraCommandCreep(db), AbilityType.AuraDevotionCreep => LoadAuraDevotionCreep(db), AbilityType.AuraEnduranceCreep => LoadAuraEnduranceCreep(db), AbilityType.AuraPlagueAbomination => LoadAuraPlagueAbomination(db), AbilityType.AuraPlaguePlagueWard => LoadAuraPlaguePlagueWard(db), AbilityType.AuraPlagueCreep => LoadAuraPlagueCreep(db), AbilityType.AuraPlagueCreepGfx => LoadAuraPlagueCreepGfx(db), AbilityType.AuraRegenerationWard => LoadAuraRegenerationWard(db), AbilityType.AuraRegenerationStatue => LoadAuraRegenerationStatue(db), AbilityType.AuraSlow => LoadAuraSlow(db), AbilityType.AuraTrueshotCreep => LoadAuraTrueshotCreep(db), AbilityType.AuraWarDrums => LoadAuraWarDrums(db), AbilityType.AvengerForm => LoadAvengerForm(db), AbilityType.Awaken => LoadAwaken(db), AbilityType.BallsOfFire => LoadBallsOfFire(db), AbilityType.BanishCreep => LoadBanishCreep(db), AbilityType.BashCreep => LoadBashCreep(db), AbilityType.BashBeastmasterBear => LoadBashBeastmasterBear(db), AbilityType.BashMaulSPBearLevel3 => LoadBashMaulSPBearLevel3(db), AbilityType.Battlestations => LoadBattlestations(db), AbilityType.BattlestationsChaos => LoadBattlestationsChaos(db), AbilityType.Bearform => LoadBearform(db), AbilityType.Beserk => LoadBeserk(db), AbilityType.BerserkerUpgrade => LoadBerserkerUpgrade(db), AbilityType.BlackArrowMeleeCreep => LoadBlackArrowMeleeCreep(db), AbilityType.BlightDispelSmall => LoadBlightDispelSmall(db), AbilityType.BlightDispelLarge => LoadBlightDispelLarge(db), AbilityType.BlightGrowthSmall => LoadBlightGrowthSmall(db), AbilityType.BlightGrowthLarge => LoadBlightGrowthLarge(db), AbilityType.BlightedGoldMine => LoadBlightedGoldMine(db), AbilityType.BlinkBeastmasterBear => LoadBlinkBeastmasterBear(db), AbilityType.BlizzardCreep => LoadBlizzardCreep(db), AbilityType.Bloodlust => LoadBloodlust(db), AbilityType.BloodlustCreep => LoadBloodlustCreep(db), AbilityType.BloodlustCreepHotkeyB => LoadBloodlustCreepHotkeyB(db), AbilityType.BreathOfFireCreep => LoadBreathOfFireCreep(db), AbilityType.BreathOfFrostCreep => LoadBreathOfFrostCreep(db), AbilityType.BuildNeutral => LoadBuildNeutral(db), AbilityType.BuildHuman => LoadBuildHuman(db), AbilityType.BuildOrc => LoadBuildOrc(db), AbilityType.BuildNightElf => LoadBuildNightElf(db), AbilityType.BuildUndead => LoadBuildUndead(db), AbilityType.BuildNaga => LoadBuildNaga(db), AbilityType.Burrow => LoadBurrow(db), AbilityType.BurrowScarabLvl2 => LoadBurrowScarabLvl2(db), AbilityType.BurrowScarabLvl3 => LoadBurrowScarabLvl3(db), AbilityType.BurrowBarbedArachnathid => LoadBurrowBarbedArachnathid(db), AbilityType.BurrowDetectionFlyers => LoadBurrowDetectionFlyers(db), AbilityType.Cannibalize => LoadCannibalize(db), AbilityType.CannibalizeAbomination => LoadCannibalizeAbomination(db), AbilityType.CannibalizeCreep => LoadCannibalizeCreep(db), AbilityType.CargoHoldBurrow => LoadCargoHoldBurrow(db), AbilityType.CargoHoldDevour => LoadCargoHoldDevour(db), AbilityType.CargoHoldMeatWagon => LoadCargoHoldMeatWagon(db), AbilityType.CargoHoldShip => LoadCargoHoldShip(db), AbilityType.CargoHoldTank => LoadCargoHoldTank(db), AbilityType.CargoHoldTransport => LoadCargoHoldTransport(db), AbilityType.CargoHoldGoldMine => LoadCargoHoldGoldMine(db), AbilityType.CargoHoldDeath => LoadCargoHoldDeath(db), AbilityType.CarrionSwarmCreep => LoadCarrionSwarmCreep(db), AbilityType.CrushingWave => LoadCrushingWave(db), AbilityType.CrushingWaveDragonTurtle => LoadCrushingWaveDragonTurtle(db), AbilityType.CrushingWaveLesser => LoadCrushingWaveLesser(db), AbilityType.ChainLightningCreep => LoadChainLightningCreep(db), AbilityType.ChainDispel => LoadChainDispel(db), AbilityType.ChaosGrunt => LoadChaosGrunt(db), AbilityType.ChaosRaider => LoadChaosRaider(db), AbilityType.ChaosShaman => LoadChaosShaman(db), AbilityType.ChaosKodo => LoadChaosKodo(db), AbilityType.ChaosPeon => LoadChaosPeon(db), AbilityType.ChaosGrom => LoadChaosGrom(db), AbilityType.ChaosCargoLoad => LoadChaosCargoLoad(db), AbilityType.Charm => LoadCharm(db), AbilityType.CleavingAttackCreep => LoadCleavingAttackCreep(db), AbilityType.CloudOfFog => LoadCloudOfFog(db), AbilityType.ColdArrowsCreep => LoadColdArrowsCreep(db), AbilityType.ControlMagic => LoadControlMagic(db), AbilityType.CorporealForm => LoadCorporealForm(db), AbilityType.CorrosiveBreath => LoadCorrosiveBreath(db), AbilityType.CoupleArcher => LoadCoupleArcher(db), AbilityType.CoupleHippogryph => LoadCoupleHippogryph(db), AbilityType.CoupleInstantArcher => LoadCoupleInstantArcher(db), AbilityType.CoupleInstantHippogryph => LoadCoupleInstantHippogryph(db), AbilityType.CreepSleep => LoadCreepSleep(db), AbilityType.Cripple => LoadCripple(db), AbilityType.CrippleWarlock => LoadCrippleWarlock(db), AbilityType.CrippleCreep => LoadCrippleCreep(db), AbilityType.CriticalStrikeCreep => LoadCriticalStrikeCreep(db), AbilityType.Curse => LoadCurse(db), AbilityType.CurseCreep => LoadCurseCreep(db), AbilityType.Cyclone_Acyc => LoadCyclone_Acyc(db), AbilityType.CycloneNaga => LoadCycloneNaga(db), AbilityType.CycloneCreep => LoadCycloneCreep(db), AbilityType.CycloneCenarius => LoadCycloneCenarius(db), AbilityType.DeathCoilCreep => LoadDeathCoilCreep(db), AbilityType.DeathDamageSapper => LoadDeathDamageSapper(db), AbilityType.DeathDamageMine => LoadDeathDamageMine(db), AbilityType.DeathDamageMineBIG => LoadDeathDamageMineBIG(db), AbilityType.Decouple => LoadDecouple(db), AbilityType.Defend => LoadDefend(db), AbilityType.DetectSentryWard => LoadDetectSentryWard(db), AbilityType.DetectShade => LoadDetectShade(db), AbilityType.DetectGeneral => LoadDetectGeneral(db), AbilityType.DetectWarEagle => LoadDetectWarEagle(db), AbilityType.DetectGyrocopter => LoadDetectGyrocopter(db), AbilityType.DetectMagicSentinel => LoadDetectMagicSentinel(db), AbilityType.Detonate => LoadDetonate(db), AbilityType.Devour => LoadDevour(db), AbilityType.DevourDragonCreep => LoadDevourDragonCreep(db), AbilityType.DevourMagic => LoadDevourMagic(db), AbilityType.DevourMagicCreep => LoadDevourMagicCreep(db), AbilityType.DisenchantOld => LoadDisenchantOld(db), AbilityType.DisenchantNew => LoadDisenchantNew(db), AbilityType.DispelMagic => LoadDispelMagic(db), AbilityType.DispelMagicCreep => LoadDispelMagicCreep(db), AbilityType.DivineShieldCreep => LoadDivineShieldCreep(db), AbilityType.DrainLifeCreep => LoadDrainLifeCreep(db), AbilityType.DropInstant => LoadDropInstant(db), AbilityType.Drop_Adro => LoadDrop_Adro(db), AbilityType.Drop_Sdro => LoadDrop_Sdro(db), AbilityType.DropPilot => LoadDropPilot(db), AbilityType.EatTree => LoadEatTree(db), AbilityType.EluneSGrace => LoadEluneSGrace(db), AbilityType.EnsnareNaga => LoadEnsnareNaga(db), AbilityType.Ensnare => LoadEnsnare(db), AbilityType.EnsnareCreep => LoadEnsnareCreep(db), AbilityType.Entangle => LoadEntangle(db), AbilityType.EntangledGoldMine => LoadEntangledGoldMine(db), AbilityType.EntanglingRootsCreep => LoadEntanglingRootsCreep(db), AbilityType.EntanglingSeaweed => LoadEntanglingSeaweed(db), AbilityType.Ethereal => LoadEthereal(db), AbilityType.EtherealForm => LoadEtherealForm(db), AbilityType.EvasionCreep => LoadEvasionCreep(db), AbilityType.EvasionCreep100 => LoadEvasionCreep100(db), AbilityType.Exhume => LoadExhume(db), AbilityType.Factory => LoadFactory(db), AbilityType.FaerieFire_Afae => LoadFaerieFire_Afae(db), AbilityType.FaerieFire_Afa2 => LoadFaerieFire_Afa2(db), AbilityType.FaerieFireCreep => LoadFaerieFireCreep(db), AbilityType.Feedback => LoadFeedback(db), AbilityType.FeedbackArcaneTower => LoadFeedbackArcaneTower(db), AbilityType.FeedbackSpiritBeast => LoadFeedbackSpiritBeast(db), AbilityType.FeralSpiritCreep => LoadFeralSpiritCreep(db), AbilityType.FeralSpiritCreepPig => LoadFeralSpiritCreepPig(db), AbilityType.FeralSpiritSpiritBeast => LoadFeralSpiritSpiritBeast(db), AbilityType.FeralSpiritAkama => LoadFeralSpiritAkama(db), AbilityType.FingerOfDeath_Afod => LoadFingerOfDeath_Afod(db), AbilityType.FireBoltWarlock => LoadFireBoltWarlock(db), AbilityType.FireBoltCreep => LoadFireBoltCreep(db), AbilityType.FlakCannon => LoadFlakCannon(db), AbilityType.Flare => LoadFlare(db), AbilityType.FlameStrikeCreep => LoadFlameStrikeCreep(db), AbilityType.FlameStrikeImprovedCreep => LoadFlameStrikeImprovedCreep(db), AbilityType.ForceOfNatureCreep => LoadForceOfNatureCreep(db), AbilityType.ForkedLightningCreep => LoadForkedLightningCreep(db), AbilityType.FragShards => LoadFragShards(db), AbilityType.FreezingBreath => LoadFreezingBreath(db), AbilityType.Frenzy => LoadFrenzy(db), AbilityType.FrostArmorCreepOld => LoadFrostArmorCreepOld(db), AbilityType.FrostArmorCreepAutocast => LoadFrostArmorCreepAutocast(db), AbilityType.FrostArmorAutocastNaga => LoadFrostArmorAutocastNaga(db), AbilityType.FrostAttack => LoadFrostAttack(db), AbilityType.FrostAttack12 => LoadFrostAttack12(db), AbilityType.FrostBreath => LoadFrostBreath(db), AbilityType.FrostBreathNewHasIcon => LoadFrostBreathNewHasIcon(db), AbilityType.FrostNovaCreep => LoadFrostNovaCreep(db), AbilityType.FrostBolt => LoadFrostBolt(db), AbilityType.Ghost => LoadGhost(db), AbilityType.GhostVisible => LoadGhostVisible(db), AbilityType.GoldMine => LoadGoldMine(db), AbilityType.GrabTree => LoadGrabTree(db), AbilityType.Graveyard => LoadGraveyard(db), AbilityType.GyrocopterBombs => LoadGyrocopterBombs(db), AbilityType.HardenedSkin => LoadHardenedSkin(db), AbilityType.HardenedSkinNagaTurtle => LoadHardenedSkinNagaTurtle(db), AbilityType.Harvest => LoadHarvest(db), AbilityType.HarvestNaga => LoadHarvestNaga(db), AbilityType.HarvestLumber => LoadHarvestLumber(db), AbilityType.HarvestLumberShredder => LoadHarvestLumberShredder(db), AbilityType.HarvestLumberArchGhouls => LoadHarvestLumberArchGhouls(db), AbilityType.Heal => LoadHeal(db), AbilityType.HealCreepNormal_Anhe => LoadHealCreepNormal_Anhe(db), AbilityType.HealCreepNormal_Anh1 => LoadHealCreepNormal_Anh1(db), AbilityType.HealCreepHigh => LoadHealCreepHigh(db), AbilityType.HealingWard_Ahwd => LoadHealingWard_Ahwd(db), AbilityType.HealingWardCreep => LoadHealingWardCreep(db), AbilityType.HealingWaveCreep => LoadHealingWaveCreep(db), AbilityType.NullRoarSummoner => LoadNullRoarSummoner(db), AbilityType.Hero => LoadHero(db), AbilityType.HexCreep => LoadHexCreep(db), AbilityType.HowlOfTerror => LoadHowlOfTerror(db), AbilityType.ImmolationCreep => LoadImmolationCreep(db), AbilityType.ImpaleCreep => LoadImpaleCreep(db), AbilityType.ImpalingBolt => LoadImpalingBolt(db), AbilityType.InnerFire => LoadInnerFire(db), AbilityType.InnerFireCreep => LoadInnerFireCreep(db), AbilityType.Invisibility => LoadInvisibility(db), AbilityType.Inventory => LoadInventory(db), AbilityType.InventoryPackMule => LoadInventoryPackMule(db), AbilityType.Inventory2SlotUnitOrc => LoadInventory2SlotUnitOrc(db), AbilityType.Inventory2SlotUnitHuman => LoadInventory2SlotUnitHuman(db), AbilityType.Inventory2SlotUnitNightElf => LoadInventory2SlotUnitNightElf(db), AbilityType.Inventory2SlotUnitUndead => LoadInventory2SlotUnitUndead(db), AbilityType.Invulnerable => LoadInvulnerable(db), AbilityType.LightningAttack => LoadLightningAttack(db), AbilityType.LightningShield => LoadLightningShield(db), AbilityType.LightningShieldCreep => LoadLightningShieldCreep(db), AbilityType.LiquidFire => LoadLiquidFire(db), AbilityType.Load => LoadLoad(db), AbilityType.LoadBurrow => LoadLoadBurrow(db), AbilityType.LoadEntangledGoldMine => LoadLoadEntangledGoldMine(db), AbilityType.LoadNavies => LoadLoadNavies(db), AbilityType.LoadPilot => LoadLoadPilot(db), AbilityType.Locust => LoadLocust(db), AbilityType.MagicDefense => LoadMagicDefense(db), AbilityType.MagicImmunity_Amim => LoadMagicImmunity_Amim(db), AbilityType.MagicImmunityCreep => LoadMagicImmunityCreep(db), AbilityType.MagicImmunityArchimonde => LoadMagicImmunityArchimonde(db), AbilityType.MagicImmunityDragons => LoadMagicImmunityDragons(db), AbilityType.AerialShackles => LoadAerialShackles(db), AbilityType.ManaBattery => LoadManaBattery(db), AbilityType.ManaBatteryObsidianStatue => LoadManaBatteryObsidianStatue(db), AbilityType.ManaBurnDemon_Amnb => LoadManaBurnDemon_Amnb(db), AbilityType.ManaBurnDemon_Ambd => LoadManaBurnDemon_Ambd(db), AbilityType.ManaBurnHotkeyB => LoadManaBurnHotkeyB(db), AbilityType.ManaFlare => LoadManaFlare(db), AbilityType.ManaShieldCreep => LoadManaShieldCreep(db), AbilityType.MeatDrop => LoadMeatDrop(db), AbilityType.MeatLoad => LoadMeatLoad(db), AbilityType.Militia => LoadMilitia(db), AbilityType.MilitiaConversion => LoadMilitiaConversion(db), AbilityType.MindRot => LoadMindRot(db), AbilityType.Mine => LoadMine(db), AbilityType.MonsoonCreep => LoadMonsoonCreep(db), AbilityType.MoonGlaive => LoadMoonGlaive(db), AbilityType.MoonGlaiveNoResearch => LoadMoonGlaiveNoResearch(db), AbilityType.Move => LoadMove(db), AbilityType.NeutralBuilding => LoadNeutralBuilding(db), AbilityType.NeutralBuildingAnyUnit => LoadNeutralBuildingAnyUnit(db), AbilityType.NeutralDetectionRevealAbility => LoadNeutralDetectionRevealAbility(db), AbilityType.NeutralRegenManaOnly => LoadNeutralRegenManaOnly(db), AbilityType.NeutralRegenHealthOnly => LoadNeutralRegenHealthOnly(db), AbilityType.NeutralSpell => LoadNeutralSpell(db), AbilityType.NeutralSpies => LoadNeutralSpies(db), AbilityType.OrbOfAnnihilation => LoadOrbOfAnnihilation(db), AbilityType.OrbOfAnnihilationQuillSpray => LoadOrbOfAnnihilationQuillSpray(db), AbilityType.OnFire => LoadOnFire(db), AbilityType.OnFireHuman => LoadOnFireHuman(db), AbilityType.OnFireOrc => LoadOnFireOrc(db), AbilityType.OnFireNightElf => LoadOnFireNightElf(db), AbilityType.OnFireUndead => LoadOnFireUndead(db), AbilityType.Parasite => LoadParasite(db), AbilityType.ParasiteEredar => LoadParasiteEredar(db), AbilityType.PermanentImmolation => LoadPermanentImmolation(db), AbilityType.PermanentImmolationFlying => LoadPermanentImmolationFlying(db), AbilityType.PermanentImmolationGraphic => LoadPermanentImmolationGraphic(db), AbilityType.PermanentInvisibility => LoadPermanentInvisibility(db), AbilityType.PhaseShift => LoadPhaseShift(db), AbilityType.Phoenix => LoadPhoenix(db), AbilityType.PhoenixFire => LoadPhoenixFire(db), AbilityType.PlagueToss => LoadPlagueToss(db), AbilityType.PoisonAttack => LoadPoisonAttack(db), AbilityType.Polymorph => LoadPolymorph(db), AbilityType.PolymorphCreep => LoadPolymorphCreep(db), AbilityType.Possession => LoadPossession(db), AbilityType.PossessionCreep => LoadPossessionCreep(db), AbilityType.PossessionChanneling => LoadPossessionChanneling(db), AbilityType.Pulverize => LoadPulverize(db), AbilityType.PulverizeSeaGiant => LoadPulverizeSeaGiant(db), AbilityType.PurchaseItem => LoadPurchaseItem(db), AbilityType.Purge_Aprg => LoadPurge_Aprg(db), AbilityType.Purge_Apg2 => LoadPurge_Apg2(db), AbilityType.PurgeCreep => LoadPurgeCreep(db), AbilityType.RainOfFireCreep => LoadRainOfFireCreep(db), AbilityType.RainOfFireCreepGreater => LoadRainOfFireCreepGreater(db), AbilityType.RaiseDead => LoadRaiseDead(db), AbilityType.RaiseDeadCreep => LoadRaiseDeadCreep(db), AbilityType.Rally => LoadRally(db), AbilityType.RavenFormDruid => LoadRavenFormDruid(db), AbilityType.RavenFormMedivh => LoadRavenFormMedivh(db), AbilityType.ReincarnationCreep => LoadReincarnationCreep(db), AbilityType.ReincarnationGeneric => LoadReincarnationGeneric(db), AbilityType.ReinforcedBurrows => LoadReinforcedBurrows(db), AbilityType.Rejuvination => LoadRejuvination(db), AbilityType.RejuvinationCreep => LoadRejuvinationCreep(db), AbilityType.RejuvinationFurbolg => LoadRejuvinationFurbolg(db), AbilityType.Renew => LoadRenew(db), AbilityType.RepairHuman => LoadRepairHuman(db), AbilityType.RepairOrc => LoadRepairOrc(db), AbilityType.ReplenishLifeMana => LoadReplenishLifeMana(db), AbilityType.ReplenishLife => LoadReplenishLife(db), AbilityType.ReplenishMana => LoadReplenishMana(db), AbilityType.ResistantSkin => LoadResistantSkin(db), AbilityType.ResistantSkinCreep => LoadResistantSkinCreep(db), AbilityType.ResistantSkin31PosCreep => LoadResistantSkin31PosCreep(db), AbilityType.Restoration => LoadRestoration(db), AbilityType.ReturnGold => LoadReturnGold(db), AbilityType.ReturnGoldLumber => LoadReturnGoldLumber(db), AbilityType.ReturnLumber => LoadReturnLumber(db), AbilityType.RevealArcaneTower => LoadRevealArcaneTower(db), AbilityType.Revenge => LoadRevenge(db), AbilityType.Revive => LoadRevive(db), AbilityType.Roar_Aroa => LoadRoar_Aroa(db), AbilityType.Roar_Ara2 => LoadRoar_Ara2(db), AbilityType.RoarCreepSkeletalOrc => LoadRoarCreepSkeletalOrc(db), AbilityType.RoarCreep => LoadRoarCreep(db), AbilityType.RocketAttack => LoadRocketAttack(db), AbilityType.RootAncients => LoadRootAncients(db), AbilityType.RootAncientProtector => LoadRootAncientProtector(db), AbilityType.SacrificeSacrificialPit => LoadSacrificeSacrificialPit(db), AbilityType.Pillage => LoadPillage(db), AbilityType.SacrificeAcolyte => LoadSacrificeAcolyte(db), AbilityType.SearingArrowsCreep => LoadSearingArrowsCreep(db), AbilityType.SelfDestruct => LoadSelfDestruct(db), AbilityType.SelfDestructClockwerkGoblins => LoadSelfDestructClockwerkGoblins(db), AbilityType.SelfDestruct2ClockwerkGoblins => LoadSelfDestruct2ClockwerkGoblins(db), AbilityType.SelfDestruct3ClockwerkGoblins => LoadSelfDestruct3ClockwerkGoblins(db), AbilityType.SellItem => LoadSellItem(db), AbilityType.SellUnit => LoadSellUnit(db), AbilityType.Sentinel => LoadSentinel(db), AbilityType.SentinelNoResearch => LoadSentinelNoResearch(db), AbilityType.SentryWard => LoadSentryWard(db), AbilityType.SerpentWardTentacleForgottenOne => LoadSerpentWardTentacleForgottenOne(db), AbilityType.ShadowMeld => LoadShadowMeld(db), AbilityType.ShadowMeldItem => LoadShadowMeldItem(db), AbilityType.ShadowMeldInstant => LoadShadowMeldInstant(db), AbilityType.ShadowMeldAkama => LoadShadowMeldAkama(db), AbilityType.ShadowStrikeCreep => LoadShadowStrikeCreep(db), AbilityType.ShockwaveCreep => LoadShockwaveCreep(db), AbilityType.ShockwaveTrap => LoadShockwaveTrap(db), AbilityType.GarithosShockWave => LoadGarithosShockWave(db), AbilityType.SilenceCreep => LoadSilenceCreep(db), AbilityType.SiphonManaCreep => LoadSiphonManaCreep(db), AbilityType.SleepCreep => LoadSleepCreep(db), AbilityType.SleepAlways => LoadSleepAlways(db), AbilityType.Slow_Aslo => LoadSlow_Aslo(db), AbilityType.SlowCreep => LoadSlowCreep(db), AbilityType.SlowPoison => LoadSlowPoison(db), AbilityType.SpawnSkeleton => LoadSpawnSkeleton(db), AbilityType.SpawnSpiderling => LoadSpawnSpiderling(db), AbilityType.SpawnSpider => LoadSpawnSpider(db), AbilityType.SpawnHydra => LoadSpawnHydra(db), AbilityType.SpawnHydraHatchling => LoadSpawnHydraHatchling(db), AbilityType.SpellSteal => LoadSpellSteal(db), AbilityType.Sphere => LoadSphere(db), AbilityType.SphereSoVLevel1 => LoadSphereSoVLevel1(db), AbilityType.SphereSoVLevel2 => LoadSphereSoVLevel2(db), AbilityType.SphereSoVLevel3 => LoadSphereSoVLevel3(db), AbilityType.SphereSoVLevel4 => LoadSphereSoVLevel4(db), AbilityType.SphereSoVLevel5 => LoadSphereSoVLevel5(db), AbilityType.SphereSoVLevel6 => LoadSphereSoVLevel6(db), AbilityType.SpiderAttack => LoadSpiderAttack(db), AbilityType.SpikedBarricades => LoadSpikedBarricades(db), AbilityType.SpiritLink => LoadSpiritLink(db), AbilityType.StandDown => LoadStandDown(db), AbilityType.StasisTrap => LoadStasisTrap(db), AbilityType.StoneForm => LoadStoneForm(db), AbilityType.StormHammers => LoadStormHammers(db), AbilityType.SubmergeMyrmidon => LoadSubmergeMyrmidon(db), AbilityType.SubmergeRoyalGuard => LoadSubmergeRoyalGuard(db), AbilityType.SubmergeSnapDragon => LoadSubmergeSnapDragon(db), AbilityType.SummonLobstrokPrawns => LoadSummonLobstrokPrawns(db), AbilityType.SummonSeaElemental => LoadSummonSeaElemental(db), AbilityType.TankTurret => LoadTankTurret(db), AbilityType.TankUpgrade => LoadTankUpgrade(db), AbilityType.Taunt => LoadTaunt(db), AbilityType.TauntCreep => LoadTauntCreep(db), AbilityType.ThornyShieldCreep => LoadThornyShieldCreep(db), AbilityType.ThornyShieldDragonTurtle => LoadThornyShieldDragonTurtle(db), AbilityType.ThornsAuraCreep => LoadThornsAuraCreep(db), AbilityType.ThunderBoltCreep => LoadThunderBoltCreep(db), AbilityType.ThunderClapCreep => LoadThunderClapCreep(db), AbilityType.ThunderClapThunderLizard => LoadThunderClapThunderLizard(db), AbilityType.TornadoDamage => LoadTornadoDamage(db), AbilityType.TornadoSpin => LoadTornadoSpin(db), AbilityType.TornadoWander => LoadTornadoWander(db), AbilityType.TreeOfLifeForAttachingArt => LoadTreeOfLifeForAttachingArt(db), AbilityType.Ultravision => LoadUltravision(db), AbilityType.UnholyAuraCreep => LoadUnholyAuraCreep(db), AbilityType.UnholyFrenzy => LoadUnholyFrenzy(db), AbilityType.UnholyFrenzyWarlock => LoadUnholyFrenzyWarlock(db), AbilityType.UnholyFrenzyCreep => LoadUnholyFrenzyCreep(db), AbilityType.InciteUnholyFrenzy => LoadInciteUnholyFrenzy(db), AbilityType.UnstableConcoction => LoadUnstableConcoction(db), AbilityType.Unsummon => LoadUnsummon(db), AbilityType.VampiricAttack_SCva => LoadVampiricAttack_SCva(db), AbilityType.VampiricAuraCreep => LoadVampiricAuraCreep(db), AbilityType.Vengeance => LoadVengeance(db), AbilityType.Wander => LoadWander(db), AbilityType.WarStompCreep => LoadWarStompCreep(db), AbilityType.WarStompSeaGiant => LoadWarStompSeaGiant(db), AbilityType.WarStompHydra => LoadWarStompHydra(db), AbilityType.WindWalk => LoadWindWalk(db), AbilityType.WispHarvest => LoadWispHarvest(db), AbilityType.WispHarvestInvulnerable => LoadWispHarvestInvulnerable(db), AbilityType.VenomSpears => LoadVenomSpears(db), AbilityType.VenomSpearsCreep => LoadVenomSpearsCreep(db), AbilityType.Warp => LoadWarp(db), AbilityType.Web => LoadWeb(db), AbilityType.WebCreep => LoadWebCreep(db), AbilityType.AgilityBonus1 => LoadAgilityBonus1(db), AbilityType.AgilityBonus3 => LoadAgilityBonus3(db), AbilityType.AgilityBonus4 => LoadAgilityBonus4(db), AbilityType.AgilityBonus5 => LoadAgilityBonus5(db), AbilityType.AgilityBonus6 => LoadAgilityBonus6(db), AbilityType.CrownOfKingsAll5 => LoadCrownOfKingsAll5(db), AbilityType.All1 => LoadAll1(db), AbilityType.All2 => LoadAll2(db), AbilityType.StrengthBonus1 => LoadStrengthBonus1(db), AbilityType.StrengthBonus3 => LoadStrengthBonus3(db), AbilityType.StrengthBonus4 => LoadStrengthBonus4(db), AbilityType.StrengthBonus5 => LoadStrengthBonus5(db), AbilityType.StrengthBonus6 => LoadStrengthBonus6(db), AbilityType.IntelligenceBonus1 => LoadIntelligenceBonus1(db), AbilityType.IntelligenceBonus3 => LoadIntelligenceBonus3(db), AbilityType.IntelligenceBonus4 => LoadIntelligenceBonus4(db), AbilityType.IntelligenceBonus5 => LoadIntelligenceBonus5(db), AbilityType.IntelligenceBonus6 => LoadIntelligenceBonus6(db), AbilityType.PermanentAll1 => LoadPermanentAll1(db), AbilityType.AgilityMod => LoadAgilityMod(db), AbilityType.IntelligenceMod => LoadIntelligenceMod(db), AbilityType.StrengthMod => LoadStrengthMod(db), AbilityType.AgilityMod2 => LoadAgilityMod2(db), AbilityType.IntelligenceMod2 => LoadIntelligenceMod2(db), AbilityType.StrengthMod2 => LoadStrengthMod2(db), AbilityType.AttackMod => LoadAttackMod(db), AbilityType.AttackBonus_AIat => LoadAttackBonus_AIat(db), AbilityType.AttackBonus_AIt6 => LoadAttackBonus_AIt6(db), AbilityType.AttackBonus_AIt9 => LoadAttackBonus_AIt9(db), AbilityType.AttackBonus_AItc => LoadAttackBonus_AItc(db), AbilityType.AttackBonus_AItf => LoadAttackBonus_AItf(db), AbilityType.AttackBonus1 => LoadAttackBonus1(db), AbilityType.AttackBonus2 => LoadAttackBonus2(db), AbilityType.AttackBonus4 => LoadAttackBonus4(db), AbilityType.AttackBonus5 => LoadAttackBonus5(db), AbilityType.AttackBonus7 => LoadAttackBonus7(db), AbilityType.AttackBonus8 => LoadAttackBonus8(db), AbilityType.AttackBonus10 => LoadAttackBonus10(db), AbilityType.VampiricAttack_AIva => LoadVampiricAttack_AIva(db), AbilityType.BlinkItem => LoadBlinkItem(db), AbilityType.BuildTinyCastle => LoadBuildTinyCastle(db), AbilityType.BuildTinyGreatHall => LoadBuildTinyGreatHall(db), AbilityType.BuildTinyScoutTower => LoadBuildTinyScoutTower(db), AbilityType.BuildTinyBlacksmith => LoadBuildTinyBlacksmith(db), AbilityType.BuildTinyFarm => LoadBuildTinyFarm(db), AbilityType.BuildTinyLumberMill => LoadBuildTinyLumberMill(db), AbilityType.BuildTinyBarracks => LoadBuildTinyBarracks(db), AbilityType.BuildTinyAltar => LoadBuildTinyAltar(db), AbilityType.Cyclone_AIcy => LoadCyclone_AIcy(db), AbilityType.DefenseBonus1 => LoadDefenseBonus1(db), AbilityType.DefenseBonus2 => LoadDefenseBonus2(db), AbilityType.DefenseBonus3 => LoadDefenseBonus3(db), AbilityType.DefenseBonus4 => LoadDefenseBonus4(db), AbilityType.DefenseBonus5 => LoadDefenseBonus5(db), AbilityType.FortificationGlyph => LoadFortificationGlyph(db), AbilityType.UltraVisionGlyph => LoadUltraVisionGlyph(db), AbilityType.ExperienceMod => LoadExperienceMod(db), AbilityType.ExperienceModGreater => LoadExperienceModGreater(db), AbilityType.FigurineRedDrake => LoadFigurineRedDrake(db), AbilityType.FigurineFurbolg => LoadFigurineFurbolg(db), AbilityType.FigurineRockGolem => LoadFigurineRockGolem(db), AbilityType.FigurineDoomGuard => LoadFigurineDoomGuard(db), AbilityType.FigurineFelHound => LoadFigurineFelHound(db), AbilityType.FigurineSkeleton => LoadFigurineSkeleton(db), AbilityType.FigurineIceRevenant => LoadFigurineIceRevenant(db), AbilityType.FigurineUrsaWarrior => LoadFigurineUrsaWarrior(db), AbilityType.Flag => LoadFlag(db), AbilityType.FlagHuman => LoadFlagHuman(db), AbilityType.FlagOrc => LoadFlagOrc(db), AbilityType.FlagNightElf => LoadFlagNightElf(db), AbilityType.FlagUndead => LoadFlagUndead(db), AbilityType.FlagOrcBattleStandard => LoadFlagOrcBattleStandard(db), AbilityType.FlareGun => LoadFlareGun(db), AbilityType.ItemInferno => LoadItemInferno(db), AbilityType.LevelMod => LoadLevelMod(db), AbilityType.LightningPurge => LoadLightningPurge(db), AbilityType.MaxLifeBonusLeast => LoadMaxLifeBonusLeast(db), AbilityType.MaxLifeBonusLesser => LoadMaxLifeBonusLesser(db), AbilityType.MaxLifeBonusGreater => LoadMaxLifeBonusGreater(db), AbilityType.MoveSpeedBonus => LoadMoveSpeedBonus(db), AbilityType.OrbOfDarknessBlackArrow => LoadOrbOfDarknessBlackArrow(db), AbilityType.OrbOfDarkness => LoadOrbOfDarkness(db), AbilityType.OrbOfCorruption => LoadOrbOfCorruption(db), AbilityType.ShadowOrbAbility => LoadShadowOrbAbility(db), AbilityType.OrbOfFire => LoadOrbOfFire(db), AbilityType.OrbOfGuldan => LoadOrbOfGuldan(db), AbilityType.OrbOfFreezing => LoadOrbOfFreezing(db), AbilityType.OrbOfFrost => LoadOrbOfFrost(db), AbilityType.OrbOfLightning => LoadOrbOfLightning(db), AbilityType.OrbOfLightningOld => LoadOrbOfLightningOld(db), AbilityType.OrbOfSpells => LoadOrbOfSpells(db), AbilityType.OrbOfVenom => LoadOrbOfVenom(db), AbilityType.OrbOfVenomPoisonAttack => LoadOrbOfVenomPoisonAttack(db), AbilityType.AnimateDeadItemSpecial => LoadAnimateDeadItemSpecial(db), AbilityType.RegenLife_Arel => LoadRegenLife_Arel(db), AbilityType.RegenLife_Arll => LoadRegenLife_Arll(db), AbilityType.SightBonus => LoadSightBonus(db), AbilityType.Slow_AIos => LoadSlow_AIos(db), AbilityType.SoulTrap => LoadSoulTrap(db), AbilityType.SoulPossession => LoadSoulPossession(db), AbilityType.ItemCloakOfFlames => LoadItemCloakOfFlames(db), AbilityType.ItemCommand => LoadItemCommand(db), AbilityType.ItemDamageAoe => LoadItemDamageAoe(db), AbilityType.ItemDefenseAoe => LoadItemDefenseAoe(db), AbilityType.ItemDefenseAoeHealing => LoadItemDefenseAoeHealing(db), AbilityType.ItemDetectAoe => LoadItemDetectAoe(db), AbilityType.ItemDispelAoe => LoadItemDispelAoe(db), AbilityType.ItemDispelAoeWithCooldown => LoadItemDispelAoeWithCooldown(db), AbilityType.PowerupDispelAoe => LoadPowerupDispelAoe(db), AbilityType.ItemHealLesser => LoadItemHealLesser(db), AbilityType.ItemHealGreater => LoadItemHealGreater(db), AbilityType.ItemHealLeast => LoadItemHealLeast(db), AbilityType.ItemHealAoe => LoadItemHealAoe(db), AbilityType.ItemHealAoeGreater => LoadItemHealAoeGreater(db), AbilityType.PowerupHealAoeLesser => LoadPowerupHealAoeLesser(db), AbilityType.PowerupHealAoe => LoadPowerupHealAoe(db), AbilityType.PowerupHealAoeGreater => LoadPowerupHealAoeGreater(db), AbilityType.HealingWard_AIhw => LoadHealingWard_AIhw(db), AbilityType.SentryWardItem => LoadSentryWardItem(db), AbilityType.ItemIllusion => LoadItemIllusion(db), AbilityType.ItemInvisLesser => LoadItemInvisLesser(db), AbilityType.ItemInvisGreater => LoadItemInvisGreater(db), AbilityType.ItemInvulNormal => LoadItemInvulNormal(db), AbilityType.ItemInvulLesser => LoadItemInvulLesser(db), AbilityType.ItemInvulDivinity => LoadItemInvulDivinity(db), AbilityType.ItemManaRestoreLesser => LoadItemManaRestoreLesser(db), AbilityType.ItemManaRestoreGreater => LoadItemManaRestoreGreater(db), AbilityType.ItemManaRestoreAoe => LoadItemManaRestoreAoe(db), AbilityType.RuneManaRestoreAoe => LoadRuneManaRestoreAoe(db), AbilityType.RuneManaRestoreGreaterAoe => LoadRuneManaRestoreGreaterAoe(db), AbilityType.ItemPlaceMine => LoadItemPlaceMine(db), AbilityType.ItemRecall => LoadItemRecall(db), AbilityType.ItemRegenMana => LoadItemRegenMana(db), AbilityType.ItemRegenManaLesser => LoadItemRegenManaLesser(db), AbilityType.ItemReincarnation => LoadItemReincarnation(db), AbilityType.ItemRestore => LoadItemRestore(db), AbilityType.ItemRestoreAoe => LoadItemRestoreAoe(db), AbilityType.RuneRestoreAoe => LoadRuneRestoreAoe(db), AbilityType.ItemSpeed => LoadItemSpeed(db), AbilityType.ItemSpeedAoe => LoadItemSpeedAoe(db), AbilityType.RuneSpeedAoe => LoadRuneSpeedAoe(db), AbilityType.ItemTownPortal => LoadItemTownPortal(db), AbilityType.ItemAuraDevotion => LoadItemAuraDevotion(db), AbilityType.ItemAuraCommand => LoadItemAuraCommand(db), AbilityType.ItemAuraWarDrums => LoadItemAuraWarDrums(db), AbilityType.ItemAuraBrilliance => LoadItemAuraBrilliance(db), AbilityType.ItemAuraVampiric => LoadItemAuraVampiric(db), AbilityType.ItemAuraTrueshot => LoadItemAuraTrueshot(db), AbilityType.ItemAuraEndurance => LoadItemAuraEndurance(db), AbilityType.ItemAuraUnholy => LoadItemAuraUnholy(db), AbilityType.ItemUltravision => LoadItemUltravision(db), AbilityType.LightningShieldItem => LoadLightningShieldItem(db), AbilityType.AntiMagicShield_AIxs => LoadAntiMagicShield_AIxs(db), AbilityType.AnimateDead => LoadAnimateDead(db), AbilityType.Resurrection => LoadResurrection(db), AbilityType.Roar_AIrr => LoadRoar_AIrr(db), AbilityType.Evasion => LoadEvasion(db), AbilityType.MagicImmunity_AImx => LoadMagicImmunity_AImx(db), AbilityType.PermanentHitPointBonus => LoadPermanentHitPointBonus(db), AbilityType.MaxManaBonusLeast => LoadMaxManaBonusLeast(db), AbilityType.MaxManaBonusMost => LoadMaxManaBonusMost(db), AbilityType.AttackSpeedIncrease => LoadAttackSpeedIncrease(db), AbilityType.AttackSpeedIncreaseGreater => LoadAttackSpeedIncreaseGreater(db), AbilityType.PotionOfLifeRegen => LoadPotionOfLifeRegen(db), AbilityType.PotionOfManaRegenGreater => LoadPotionOfManaRegenGreater(db), AbilityType.ScrollOfLifeRegen => LoadScrollOfLifeRegen(db), AbilityType.PotionOfManaRegenLesser => LoadPotionOfManaRegenLesser(db), AbilityType.PotionOfRejuvI => LoadPotionOfRejuvI(db), AbilityType.PotionOfRejuvII => LoadPotionOfRejuvII(db), AbilityType.PotionOfRejuvIII => LoadPotionOfRejuvIII(db), AbilityType.PotionOfRejuvIV => LoadPotionOfRejuvIV(db), AbilityType.ScrollOfRejuvI => LoadScrollOfRejuvI(db), AbilityType.ScrollOfRejuvII => LoadScrollOfRejuvII(db), AbilityType.GiveGold => LoadGiveGold(db), AbilityType.GiveLumber => LoadGiveLumber(db), AbilityType.ItemRevealMap => LoadItemRevealMap(db), AbilityType.ItemDispelChain => LoadItemDispelChain(db), AbilityType.ItemWeb => LoadItemWeb(db), AbilityType.ItemMonsterLure => LoadItemMonsterLure(db), AbilityType.ItemChangeTOD => LoadItemChangeTOD(db), AbilityType.ItemRandomItem => LoadItemRandomItem(db), AbilityType.RunedBracers => LoadRunedBracers(db), AbilityType.BlightPlacement => LoadBlightPlacement(db), AbilityType.ItemPotionVampirism => LoadItemPotionVampirism(db), AbilityType.ManaSteal => LoadManaSteal(db), AbilityType.MechanicalCritter => LoadMechanicalCritter(db), AbilityType.ShadowSight => LoadShadowSight(db), AbilityType.Preservation => LoadPreservation(db), AbilityType.Sanctuary => LoadSanctuary(db), AbilityType.SpellShield => LoadSpellShield(db), AbilityType.SpellShieldAOE => LoadSpellShieldAOE(db), AbilityType.Retrain => LoadRetrain(db), AbilityType.StaffOTeleportation => LoadStaffOTeleportation(db), AbilityType.SpellBook => LoadSpellBook(db), AbilityType.RaiseDeadItem => LoadRaiseDeadItem(db), AbilityType.DustOfAppearance => LoadDustOfAppearance(db), AbilityType.DivineShieldItem => LoadDivineShieldItem(db), AbilityType.SilenceItem => LoadSilenceItem(db), AbilityType.PurgeOrb => LoadPurgeOrb(db), AbilityType.PurgeTotemSP => LoadPurgeTotemSP(db), AbilityType.CloudOfFogItem => LoadCloudOfFogItem(db), AbilityType.RuneOfLesserResurrection => LoadRuneOfLesserResurrection(db), AbilityType.RuneOfGreaterResurrection => LoadRuneOfGreaterResurrection(db), AbilityType.RuneOfRebirth => LoadRuneOfRebirth(db), AbilityType.RuneOfSpiritLink => LoadRuneOfSpiritLink(db), AbilityType.DarkSummoning => LoadDarkSummoning(db), AbilityType.RuneOfTheWatcher => LoadRuneOfTheWatcher(db), AbilityType.UnholyFrenzyItem => LoadUnholyFrenzyItem(db), AbilityType.DefenseBonus10 => LoadDefenseBonus10(db), AbilityType.ControlMagicItem => LoadControlMagicItem(db), AbilityType.MaxManaBonusLeastest => LoadMaxManaBonusLeastest(db), AbilityType.FingerOfDeathItem => LoadFingerOfDeathItem(db), AbilityType.DeathPactItem => LoadDeathPactItem(db), AbilityType.MaxManaBonusLeastestReally => LoadMaxManaBonusLeastestReally(db), AbilityType.PermanentHitPointBonusSmall => LoadPermanentHitPointBonusSmall(db), AbilityType.DefendItem => LoadDefendItem(db), AbilityType.DefenseBonus8 => LoadDefenseBonus8(db), AbilityType.DefenseBonus7 => LoadDefenseBonus7(db), AbilityType.MaxLifeBonusLeastest => LoadMaxLifeBonusLeastest(db), AbilityType.ItemHealLeastest => LoadItemHealLeastest(db), AbilityType.AgilityBonus10 => LoadAgilityBonus10(db), AbilityType.ResurrectionItem => LoadResurrectionItem(db), AbilityType.BashItem => LoadBashItem(db), AbilityType.AttackBonus20 => LoadAttackBonus20(db), AbilityType.WateryMinionItem => LoadWateryMinionItem(db), AbilityType.SummonHeadhunterItem => LoadSummonHeadhunterItem(db), AbilityType._200ManaBonus => Load_200ManaBonus(db), AbilityType.AuraRegenerationItem => LoadAuraRegenerationItem(db), AbilityType.HolyLightItem => LoadHolyLightItem(db), AbilityType.SlowPoisonItem => LoadSlowPoisonItem(db), AbilityType.PenguinSqueek => LoadPenguinSqueek(db), AbilityType.SearingBladeFireMelee => LoadSearingBladeFireMelee(db), AbilityType.FrostguardFrostMelee => LoadFrostguardFrostMelee(db), AbilityType.ShamanClawsLightningMelee => LoadShamanClawsLightningMelee(db), AbilityType.CriticalStrikeItem => LoadCriticalStrikeItem(db), AbilityType.ChainLightningItem => LoadChainLightningItem(db), AbilityType.All3 => LoadAll3(db), AbilityType.All4 => LoadAll4(db), AbilityType.BeserkItem => LoadBeserkItem(db), AbilityType.ItemRitualDaggerInstant => LoadItemRitualDaggerInstant(db), AbilityType.ItemRitualDaggerRegen => LoadItemRitualDaggerRegen(db), AbilityType.OrbOfFireV2 => LoadOrbOfFireV2(db), AbilityType.SunderingBlades => LoadSunderingBlades(db), AbilityType.PassiveSimple => LoadPassiveSimple(db), AbilityType.PassiveHumanRiflemanPlusRangeRhri => LoadPassiveHumanRiflemanPlusRangeRhri(db), AbilityType.PassiveHumanAnimalBreedingRhan => LoadPassiveHumanAnimalBreedingRhan(db), AbilityType.PassivePhoenixFireAndEgg => LoadPassivePhoenixFireAndEgg(db), AbilityType.PassiveHumanLumberHarvestingRhlh => LoadPassiveHumanLumberHarvestingRhlh(db), AbilityType.PassiveOrcGruntBerserkRobs => LoadPassiveOrcGruntBerserkRobs(db), AbilityType.PassiveOrcBerserkersRobk => LoadPassiveOrcBerserkersRobk(db), AbilityType.PassiveOrcReinforcedDefenseRorb => LoadPassiveOrcReinforcedDefenseRorb(db), AbilityType.PassiveOrcSpikedBarricadeRosp => LoadPassiveOrcSpikedBarricadeRosp(db), AbilityType.PassiveOrcGhostIconOnlyOrcAethUnused => LoadPassiveOrcGhostIconOnlyOrcAethUnused(db), AbilityType.PassiveOrcTrollRegenerationRotr => LoadPassiveOrcTrollRegenerationRotr(db), AbilityType.PassiveUndeadGhoulFrenzyRugf => LoadPassiveUndeadGhoulFrenzyRugf(db), AbilityType.PassiveGhostIconOnlyUndeadAgho => LoadPassiveGhostIconOnlyUndeadAgho(db), AbilityType.PassiveUndeadSkeletalMasteryRusm => LoadPassiveUndeadSkeletalMasteryRusm(db), AbilityType.PassiveNightelfImprovedBowsReib => LoadPassiveNightelfImprovedBowsReib(db), AbilityType.PassiveNightelfMarksmanshipRemk => LoadPassiveNightelfMarksmanshipRemk(db), AbilityType.PassiveNightelfWellSpringRews => LoadPassiveNightelfWellSpringRews(db), AbilityType.FigurineBlueDrake => LoadFigurineBlueDrake(db), AbilityType.FigurineFurbolgTracker => LoadFigurineFurbolgTracker(db), AbilityType.FigurineDragonspawnOverseer => LoadFigurineDragonspawnOverseer(db), AbilityType.ItemTransmute => LoadItemTransmute(db), AbilityType.AttackTargetPriority => LoadAttackTargetPriority(db), _ => throw new System.ComponentModel.InvalidEnumArgumentException(nameof(abilityType), (int)abilityType, typeof(AbilityType))}

            ;
        }
    }
}